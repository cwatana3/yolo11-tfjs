var eF=Object.defineProperty;var nF=(n,t,e)=>t in n?eF(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e;var rc=(n,t,e)=>nF(n,typeof t!="symbol"?t+"":t,e);function sF(n,t){for(var e=0;e<t.length;e++){const s=t[e];if(typeof s!="string"&&!Array.isArray(s)){for(const a in s)if(a!=="default"&&!(a in n)){const r=Object.getOwnPropertyDescriptor(s,a);r&&Object.defineProperty(n,a,r.get?r:{enumerable:!0,get:()=>s[a]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const r of a)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function e(a){const r={};return a.integrity&&(r.integrity=a.integrity),a.referrerPolicy&&(r.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?r.credentials="include":a.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(a){if(a.ep)return;a.ep=!0;const r=e(a);fetch(a.href,r)}})();function D2(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function aF(n){if(Object.prototype.hasOwnProperty.call(n,"__esModule"))return n;var t=n.default;if(typeof t=="function"){var e=function s(){return this instanceof s?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var a=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(e,s,a.get?a:{enumerable:!0,get:function(){return n[s]}})}),e}var pb={exports:{}},ic={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var EC;function rF(){if(EC)return ic;EC=1;var n=Symbol.for("react.transitional.element"),t=Symbol.for("react.fragment");function e(s,a,r){var i=null;if(r!==void 0&&(i=""+r),a.key!==void 0&&(i=""+a.key),"key"in a){r={};for(var l in a)l!=="key"&&(r[l]=a[l])}else r=a;return a=r.ref,{$$typeof:n,type:s,key:i,ref:a!==void 0?a:null,props:r}}return ic.Fragment=t,ic.jsx=e,ic.jsxs=e,ic}var AC;function iF(){return AC||(AC=1,pb.exports=rF()),pb.exports}var Ze=iF(),mb={exports:{}},qt={};/**
 * @license React
 * react.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var RC;function oF(){if(RC)return qt;RC=1;var n=Symbol.for("react.transitional.element"),t=Symbol.for("react.portal"),e=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),a=Symbol.for("react.profiler"),r=Symbol.for("react.consumer"),i=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),p=Symbol.iterator;function m(M){return M===null||typeof M!="object"?null:(M=p&&M[p]||M["@@iterator"],typeof M=="function"?M:null)}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b=Object.assign,w={};function v(M,j,lt){this.props=M,this.context=j,this.refs=w,this.updater=lt||y}v.prototype.isReactComponent={},v.prototype.setState=function(M,j){if(typeof M!="object"&&typeof M!="function"&&M!=null)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,M,j,"setState")},v.prototype.forceUpdate=function(M){this.updater.enqueueForceUpdate(this,M,"forceUpdate")};function S(){}S.prototype=v.prototype;function C(M,j,lt){this.props=M,this.context=j,this.refs=w,this.updater=lt||y}var $=C.prototype=new S;$.constructor=C,b($,v.prototype),$.isPureReactComponent=!0;var T=Array.isArray,I={H:null,A:null,T:null,S:null},D=Object.prototype.hasOwnProperty;function z(M,j,lt,ot,ut,mt){return lt=mt.ref,{$$typeof:n,type:M,key:j,ref:lt!==void 0?lt:null,props:mt}}function B(M,j){return z(M.type,j,void 0,void 0,void 0,M.props)}function R(M){return typeof M=="object"&&M!==null&&M.$$typeof===n}function _(M){var j={"=":"=0",":":"=2"};return"$"+M.replace(/[=:]/g,function(lt){return j[lt]})}var A=/\/+/g;function W(M,j){return typeof M=="object"&&M!==null&&M.key!=null?_(""+M.key):j.toString(36)}function K(){}function tt(M){switch(M.status){case"fulfilled":return M.value;case"rejected":throw M.reason;default:switch(typeof M.status=="string"?M.then(K,K):(M.status="pending",M.then(function(j){M.status==="pending"&&(M.status="fulfilled",M.value=j)},function(j){M.status==="pending"&&(M.status="rejected",M.reason=j)})),M.status){case"fulfilled":return M.value;case"rejected":throw M.reason}}throw M}function Q(M,j,lt,ot,ut){var mt=typeof M;(mt==="undefined"||mt==="boolean")&&(M=null);var bt=!1;if(M===null)bt=!0;else switch(mt){case"bigint":case"string":case"number":bt=!0;break;case"object":switch(M.$$typeof){case n:case t:bt=!0;break;case f:return bt=M._init,Q(bt(M._payload),j,lt,ot,ut)}}if(bt)return ut=ut(M),bt=ot===""?"."+W(M,0):ot,T(ut)?(lt="",bt!=null&&(lt=bt.replace(A,"$&/")+"/"),Q(ut,j,lt,"",function(Tt){return Tt})):ut!=null&&(R(ut)&&(ut=B(ut,lt+(ut.key==null||M&&M.key===ut.key?"":(""+ut.key).replace(A,"$&/")+"/")+bt)),j.push(ut)),1;bt=0;var Ct=ot===""?".":ot+":";if(T(M))for(var wt=0;wt<M.length;wt++)ot=M[wt],mt=Ct+W(ot,wt),bt+=Q(ot,j,lt,mt,ut);else if(wt=m(M),typeof wt=="function")for(M=wt.call(M),wt=0;!(ot=M.next()).done;)ot=ot.value,mt=Ct+W(ot,wt++),bt+=Q(ot,j,lt,mt,ut);else if(mt==="object"){if(typeof M.then=="function")return Q(tt(M),j,lt,ot,ut);throw j=String(M),Error("Objects are not valid as a React child (found: "+(j==="[object Object]"?"object with keys {"+Object.keys(M).join(", ")+"}":j)+"). If you meant to render a collection of children, use an array instead.")}return bt}function P(M,j,lt){if(M==null)return M;var ot=[],ut=0;return Q(M,ot,"","",function(mt){return j.call(lt,mt,ut++)}),ot}function et(M){if(M._status===-1){var j=M._result;j=j(),j.then(function(lt){(M._status===0||M._status===-1)&&(M._status=1,M._result=lt)},function(lt){(M._status===0||M._status===-1)&&(M._status=2,M._result=lt)}),M._status===-1&&(M._status=0,M._result=j)}if(M._status===1)return M._result.default;throw M._result}var Y=typeof reportError=="function"?reportError:function(M){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var j=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof M=="object"&&M!==null&&typeof M.message=="string"?String(M.message):String(M),error:M});if(!window.dispatchEvent(j))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",M);return}console.error(M)};function at(){}return qt.Children={map:P,forEach:function(M,j,lt){P(M,function(){j.apply(this,arguments)},lt)},count:function(M){var j=0;return P(M,function(){j++}),j},toArray:function(M){return P(M,function(j){return j})||[]},only:function(M){if(!R(M))throw Error("React.Children.only expected to receive a single React element child.");return M}},qt.Component=v,qt.Fragment=e,qt.Profiler=a,qt.PureComponent=C,qt.StrictMode=s,qt.Suspense=u,qt.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=I,qt.act=function(){throw Error("act(...) is not supported in production builds of React.")},qt.cache=function(M){return function(){return M.apply(null,arguments)}},qt.cloneElement=function(M,j,lt){if(M==null)throw Error("The argument must be a React element, but you passed "+M+".");var ot=b({},M.props),ut=M.key,mt=void 0;if(j!=null)for(bt in j.ref!==void 0&&(mt=void 0),j.key!==void 0&&(ut=""+j.key),j)!D.call(j,bt)||bt==="key"||bt==="__self"||bt==="__source"||bt==="ref"&&j.ref===void 0||(ot[bt]=j[bt]);var bt=arguments.length-2;if(bt===1)ot.children=lt;else if(1<bt){for(var Ct=Array(bt),wt=0;wt<bt;wt++)Ct[wt]=arguments[wt+2];ot.children=Ct}return z(M.type,ut,void 0,void 0,mt,ot)},qt.createContext=function(M){return M={$$typeof:i,_currentValue:M,_currentValue2:M,_threadCount:0,Provider:null,Consumer:null},M.Provider=M,M.Consumer={$$typeof:r,_context:M},M},qt.createElement=function(M,j,lt){var ot,ut={},mt=null;if(j!=null)for(ot in j.key!==void 0&&(mt=""+j.key),j)D.call(j,ot)&&ot!=="key"&&ot!=="__self"&&ot!=="__source"&&(ut[ot]=j[ot]);var bt=arguments.length-2;if(bt===1)ut.children=lt;else if(1<bt){for(var Ct=Array(bt),wt=0;wt<bt;wt++)Ct[wt]=arguments[wt+2];ut.children=Ct}if(M&&M.defaultProps)for(ot in bt=M.defaultProps,bt)ut[ot]===void 0&&(ut[ot]=bt[ot]);return z(M,mt,void 0,void 0,null,ut)},qt.createRef=function(){return{current:null}},qt.forwardRef=function(M){return{$$typeof:l,render:M}},qt.isValidElement=R,qt.lazy=function(M){return{$$typeof:f,_payload:{_status:-1,_result:M},_init:et}},qt.memo=function(M,j){return{$$typeof:h,type:M,compare:j===void 0?null:j}},qt.startTransition=function(M){var j=I.T,lt={};I.T=lt;try{var ot=M(),ut=I.S;ut!==null&&ut(lt,ot),typeof ot=="object"&&ot!==null&&typeof ot.then=="function"&&ot.then(at,Y)}catch(mt){Y(mt)}finally{I.T=j}},qt.unstable_useCacheRefresh=function(){return I.H.useCacheRefresh()},qt.use=function(M){return I.H.use(M)},qt.useActionState=function(M,j,lt){return I.H.useActionState(M,j,lt)},qt.useCallback=function(M,j){return I.H.useCallback(M,j)},qt.useContext=function(M){return I.H.useContext(M)},qt.useDebugValue=function(){},qt.useDeferredValue=function(M,j){return I.H.useDeferredValue(M,j)},qt.useEffect=function(M,j){return I.H.useEffect(M,j)},qt.useId=function(){return I.H.useId()},qt.useImperativeHandle=function(M,j,lt){return I.H.useImperativeHandle(M,j,lt)},qt.useInsertionEffect=function(M,j){return I.H.useInsertionEffect(M,j)},qt.useLayoutEffect=function(M,j){return I.H.useLayoutEffect(M,j)},qt.useMemo=function(M,j){return I.H.useMemo(M,j)},qt.useOptimistic=function(M,j){return I.H.useOptimistic(M,j)},qt.useReducer=function(M,j,lt){return I.H.useReducer(M,j,lt)},qt.useRef=function(M){return I.H.useRef(M)},qt.useState=function(M){return I.H.useState(M)},qt.useSyncExternalStore=function(M,j,lt){return I.H.useSyncExternalStore(M,j,lt)},qt.useTransition=function(){return I.H.useTransition()},qt.version="19.0.0",qt}var DC;function V0(){return DC||(DC=1,mb.exports=oF()),mb.exports}var va=V0();const lF=D2(va);var gb={exports:{}},oc={},yb={exports:{}},bb={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var OC;function uF(){return OC||(OC=1,function(n){function t(P,et){var Y=P.length;P.push(et);t:for(;0<Y;){var at=Y-1>>>1,M=P[at];if(0<a(M,et))P[at]=et,P[Y]=M,Y=at;else break t}}function e(P){return P.length===0?null:P[0]}function s(P){if(P.length===0)return null;var et=P[0],Y=P.pop();if(Y!==et){P[0]=Y;t:for(var at=0,M=P.length,j=M>>>1;at<j;){var lt=2*(at+1)-1,ot=P[lt],ut=lt+1,mt=P[ut];if(0>a(ot,Y))ut<M&&0>a(mt,ot)?(P[at]=mt,P[ut]=Y,at=ut):(P[at]=ot,P[lt]=Y,at=lt);else if(ut<M&&0>a(mt,Y))P[at]=mt,P[ut]=Y,at=ut;else break t}}return et}function a(P,et){var Y=P.sortIndex-et.sortIndex;return Y!==0?Y:P.id-et.id}if(n.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var r=performance;n.unstable_now=function(){return r.now()}}else{var i=Date,l=i.now();n.unstable_now=function(){return i.now()-l}}var u=[],h=[],f=1,p=null,m=3,y=!1,b=!1,w=!1,v=typeof setTimeout=="function"?setTimeout:null,S=typeof clearTimeout=="function"?clearTimeout:null,C=typeof setImmediate<"u"?setImmediate:null;function $(P){for(var et=e(h);et!==null;){if(et.callback===null)s(h);else if(et.startTime<=P)s(h),et.sortIndex=et.expirationTime,t(u,et);else break;et=e(h)}}function T(P){if(w=!1,$(P),!b)if(e(u)!==null)b=!0,tt();else{var et=e(h);et!==null&&Q(T,et.startTime-P)}}var I=!1,D=-1,z=5,B=-1;function R(){return!(n.unstable_now()-B<z)}function _(){if(I){var P=n.unstable_now();B=P;var et=!0;try{t:{b=!1,w&&(w=!1,S(D),D=-1),y=!0;var Y=m;try{e:{for($(P),p=e(u);p!==null&&!(p.expirationTime>P&&R());){var at=p.callback;if(typeof at=="function"){p.callback=null,m=p.priorityLevel;var M=at(p.expirationTime<=P);if(P=n.unstable_now(),typeof M=="function"){p.callback=M,$(P),et=!0;break e}p===e(u)&&s(u),$(P)}else s(u);p=e(u)}if(p!==null)et=!0;else{var j=e(h);j!==null&&Q(T,j.startTime-P),et=!1}}break t}finally{p=null,m=Y,y=!1}et=void 0}}finally{et?A():I=!1}}}var A;if(typeof C=="function")A=function(){C(_)};else if(typeof MessageChannel<"u"){var W=new MessageChannel,K=W.port2;W.port1.onmessage=_,A=function(){K.postMessage(null)}}else A=function(){v(_,0)};function tt(){I||(I=!0,A())}function Q(P,et){D=v(function(){P(n.unstable_now())},et)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(P){P.callback=null},n.unstable_continueExecution=function(){b||y||(b=!0,tt())},n.unstable_forceFrameRate=function(P){0>P||125<P?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):z=0<P?Math.floor(1e3/P):5},n.unstable_getCurrentPriorityLevel=function(){return m},n.unstable_getFirstCallbackNode=function(){return e(u)},n.unstable_next=function(P){switch(m){case 1:case 2:case 3:var et=3;break;default:et=m}var Y=m;m=et;try{return P()}finally{m=Y}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(P,et){switch(P){case 1:case 2:case 3:case 4:case 5:break;default:P=3}var Y=m;m=P;try{return et()}finally{m=Y}},n.unstable_scheduleCallback=function(P,et,Y){var at=n.unstable_now();switch(typeof Y=="object"&&Y!==null?(Y=Y.delay,Y=typeof Y=="number"&&0<Y?at+Y:at):Y=at,P){case 1:var M=-1;break;case 2:M=250;break;case 5:M=1073741823;break;case 4:M=1e4;break;default:M=5e3}return M=Y+M,P={id:f++,callback:et,priorityLevel:P,startTime:Y,expirationTime:M,sortIndex:-1},Y>at?(P.sortIndex=Y,t(h,P),e(u)===null&&P===e(h)&&(w?(S(D),D=-1):w=!0,Q(T,Y-at))):(P.sortIndex=M,t(u,P),b||y||(b=!0,tt())),P},n.unstable_shouldYield=R,n.unstable_wrapCallback=function(P){var et=m;return function(){var Y=m;m=et;try{return P.apply(this,arguments)}finally{m=Y}}}}(bb)),bb}var _C;function cF(){return _C||(_C=1,yb.exports=uF()),yb.exports}var xb={exports:{}},Bn={};/**
 * @license React
 * react-dom.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var FC;function hF(){if(FC)return Bn;FC=1;var n=V0();function t(u){var h="https://react.dev/errors/"+u;if(1<arguments.length){h+="?args[]="+encodeURIComponent(arguments[1]);for(var f=2;f<arguments.length;f++)h+="&args[]="+encodeURIComponent(arguments[f])}return"Minified React error #"+u+"; visit "+h+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function e(){}var s={d:{f:e,r:function(){throw Error(t(522))},D:e,C:e,L:e,m:e,X:e,S:e,M:e},p:0,findDOMNode:null},a=Symbol.for("react.portal");function r(u,h,f){var p=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:a,key:p==null?null:""+p,children:u,containerInfo:h,implementation:f}}var i=n.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function l(u,h){if(u==="font")return"";if(typeof h=="string")return h==="use-credentials"?h:""}return Bn.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=s,Bn.createPortal=function(u,h){var f=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!h||h.nodeType!==1&&h.nodeType!==9&&h.nodeType!==11)throw Error(t(299));return r(u,h,null,f)},Bn.flushSync=function(u){var h=i.T,f=s.p;try{if(i.T=null,s.p=2,u)return u()}finally{i.T=h,s.p=f,s.d.f()}},Bn.preconnect=function(u,h){typeof u=="string"&&(h?(h=h.crossOrigin,h=typeof h=="string"?h==="use-credentials"?h:"":void 0):h=null,s.d.C(u,h))},Bn.prefetchDNS=function(u){typeof u=="string"&&s.d.D(u)},Bn.preinit=function(u,h){if(typeof u=="string"&&h&&typeof h.as=="string"){var f=h.as,p=l(f,h.crossOrigin),m=typeof h.integrity=="string"?h.integrity:void 0,y=typeof h.fetchPriority=="string"?h.fetchPriority:void 0;f==="style"?s.d.S(u,typeof h.precedence=="string"?h.precedence:void 0,{crossOrigin:p,integrity:m,fetchPriority:y}):f==="script"&&s.d.X(u,{crossOrigin:p,integrity:m,fetchPriority:y,nonce:typeof h.nonce=="string"?h.nonce:void 0})}},Bn.preinitModule=function(u,h){if(typeof u=="string")if(typeof h=="object"&&h!==null){if(h.as==null||h.as==="script"){var f=l(h.as,h.crossOrigin);s.d.M(u,{crossOrigin:f,integrity:typeof h.integrity=="string"?h.integrity:void 0,nonce:typeof h.nonce=="string"?h.nonce:void 0})}}else h==null&&s.d.M(u)},Bn.preload=function(u,h){if(typeof u=="string"&&typeof h=="object"&&h!==null&&typeof h.as=="string"){var f=h.as,p=l(f,h.crossOrigin);s.d.L(u,f,{crossOrigin:p,integrity:typeof h.integrity=="string"?h.integrity:void 0,nonce:typeof h.nonce=="string"?h.nonce:void 0,type:typeof h.type=="string"?h.type:void 0,fetchPriority:typeof h.fetchPriority=="string"?h.fetchPriority:void 0,referrerPolicy:typeof h.referrerPolicy=="string"?h.referrerPolicy:void 0,imageSrcSet:typeof h.imageSrcSet=="string"?h.imageSrcSet:void 0,imageSizes:typeof h.imageSizes=="string"?h.imageSizes:void 0,media:typeof h.media=="string"?h.media:void 0})}},Bn.preloadModule=function(u,h){if(typeof u=="string")if(h){var f=l(h.as,h.crossOrigin);s.d.m(u,{as:typeof h.as=="string"&&h.as!=="script"?h.as:void 0,crossOrigin:f,integrity:typeof h.integrity=="string"?h.integrity:void 0})}else s.d.m(u)},Bn.requestFormReset=function(u){s.d.r(u)},Bn.unstable_batchedUpdates=function(u,h){return u(h)},Bn.useFormState=function(u,h,f){return i.H.useFormState(u,h,f)},Bn.useFormStatus=function(){return i.H.useHostTransitionStatus()},Bn.version="19.0.0",Bn}var LC;function dF(){if(LC)return xb.exports;LC=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(t){console.error(t)}}return n(),xb.exports=hF(),xb.exports}/**
 * @license React
 * react-dom-client.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var zC;function fF(){if(zC)return oc;zC=1;var n=cF(),t=V0(),e=dF();function s(o){var c="https://react.dev/errors/"+o;if(1<arguments.length){c+="?args[]="+encodeURIComponent(arguments[1]);for(var d=2;d<arguments.length;d++)c+="&args[]="+encodeURIComponent(arguments[d])}return"Minified React error #"+o+"; visit "+c+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function a(o){return!(!o||o.nodeType!==1&&o.nodeType!==9&&o.nodeType!==11)}var r=Symbol.for("react.element"),i=Symbol.for("react.transitional.element"),l=Symbol.for("react.portal"),u=Symbol.for("react.fragment"),h=Symbol.for("react.strict_mode"),f=Symbol.for("react.profiler"),p=Symbol.for("react.provider"),m=Symbol.for("react.consumer"),y=Symbol.for("react.context"),b=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),v=Symbol.for("react.suspense_list"),S=Symbol.for("react.memo"),C=Symbol.for("react.lazy"),$=Symbol.for("react.offscreen"),T=Symbol.for("react.memo_cache_sentinel"),I=Symbol.iterator;function D(o){return o===null||typeof o!="object"?null:(o=I&&o[I]||o["@@iterator"],typeof o=="function"?o:null)}var z=Symbol.for("react.client.reference");function B(o){if(o==null)return null;if(typeof o=="function")return o.$$typeof===z?null:o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case u:return"Fragment";case l:return"Portal";case f:return"Profiler";case h:return"StrictMode";case w:return"Suspense";case v:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Provider";case m:return(o._context.displayName||"Context")+".Consumer";case b:var c=o.render;return o=o.displayName,o||(o=c.displayName||c.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case S:return c=o.displayName||null,c!==null?c:B(o.type)||"Memo";case C:c=o._payload,o=o._init;try{return B(o(c))}catch{}}return null}var R=t.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,_=Object.assign,A,W;function K(o){if(A===void 0)try{throw Error()}catch(d){var c=d.stack.trim().match(/\n( *(at )?)/);A=c&&c[1]||"",W=-1<d.stack.indexOf(`
    at`)?" (<anonymous>)":-1<d.stack.indexOf("@")?"@unknown:0:0":""}return`
`+A+o+W}var tt=!1;function Q(o,c){if(!o||tt)return"";tt=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var g={DetermineComponentFrameRoot:function(){try{if(c){var vt=function(){throw Error()};if(Object.defineProperty(vt.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(vt,[])}catch(ft){var ct=ft}Reflect.construct(o,[],vt)}else{try{vt.call()}catch(ft){ct=ft}o.call(vt.prototype)}}else{try{throw Error()}catch(ft){ct=ft}(vt=o())&&typeof vt.catch=="function"&&vt.catch(function(){})}}catch(ft){if(ft&&ct&&typeof ft.stack=="string")return[ft.stack,ct.stack]}return[null,null]}};g.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var x=Object.getOwnPropertyDescriptor(g.DetermineComponentFrameRoot,"name");x&&x.configurable&&Object.defineProperty(g.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var N=g.DetermineComponentFrameRoot(),E=N[0],L=N[1];if(E&&L){var V=E.split(`
`),J=L.split(`
`);for(x=g=0;g<V.length&&!V[g].includes("DetermineComponentFrameRoot");)g++;for(;x<J.length&&!J[x].includes("DetermineComponentFrameRoot");)x++;if(g===V.length||x===J.length)for(g=V.length-1,x=J.length-1;1<=g&&0<=x&&V[g]!==J[x];)x--;for(;1<=g&&0<=x;g--,x--)if(V[g]!==J[x]){if(g!==1||x!==1)do if(g--,x--,0>x||V[g]!==J[x]){var pt=`
`+V[g].replace(" at new "," at ");return o.displayName&&pt.includes("<anonymous>")&&(pt=pt.replace("<anonymous>",o.displayName)),pt}while(1<=g&&0<=x);break}}}finally{tt=!1,Error.prepareStackTrace=d}return(d=o?o.displayName||o.name:"")?K(d):""}function P(o){switch(o.tag){case 26:case 27:case 5:return K(o.type);case 16:return K("Lazy");case 13:return K("Suspense");case 19:return K("SuspenseList");case 0:case 15:return o=Q(o.type,!1),o;case 11:return o=Q(o.type.render,!1),o;case 1:return o=Q(o.type,!0),o;default:return""}}function et(o){try{var c="";do c+=P(o),o=o.return;while(o);return c}catch(d){return`
Error generating stack: `+d.message+`
`+d.stack}}function Y(o){var c=o,d=o;if(o.alternate)for(;c.return;)c=c.return;else{o=c;do c=o,(c.flags&4098)!==0&&(d=c.return),o=c.return;while(o)}return c.tag===3?d:null}function at(o){if(o.tag===13){var c=o.memoizedState;if(c===null&&(o=o.alternate,o!==null&&(c=o.memoizedState)),c!==null)return c.dehydrated}return null}function M(o){if(Y(o)!==o)throw Error(s(188))}function j(o){var c=o.alternate;if(!c){if(c=Y(o),c===null)throw Error(s(188));return c!==o?null:o}for(var d=o,g=c;;){var x=d.return;if(x===null)break;var N=x.alternate;if(N===null){if(g=x.return,g!==null){d=g;continue}break}if(x.child===N.child){for(N=x.child;N;){if(N===d)return M(x),o;if(N===g)return M(x),c;N=N.sibling}throw Error(s(188))}if(d.return!==g.return)d=x,g=N;else{for(var E=!1,L=x.child;L;){if(L===d){E=!0,d=x,g=N;break}if(L===g){E=!0,g=x,d=N;break}L=L.sibling}if(!E){for(L=N.child;L;){if(L===d){E=!0,d=N,g=x;break}if(L===g){E=!0,g=N,d=x;break}L=L.sibling}if(!E)throw Error(s(189))}}if(d.alternate!==g)throw Error(s(190))}if(d.tag!==3)throw Error(s(188));return d.stateNode.current===d?o:c}function lt(o){var c=o.tag;if(c===5||c===26||c===27||c===6)return o;for(o=o.child;o!==null;){if(c=lt(o),c!==null)return c;o=o.sibling}return null}var ot=Array.isArray,ut=e.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,mt={pending:!1,data:null,method:null,action:null},bt=[],Ct=-1;function wt(o){return{current:o}}function Tt(o){0>Ct||(o.current=bt[Ct],bt[Ct]=null,Ct--)}function It(o,c){Ct++,bt[Ct]=o.current,o.current=c}var Mt=wt(null),te=wt(null),ee=wt(null),ye=wt(null);function ce(o,c){switch(It(ee,c),It(te,o),It(Mt,null),o=c.nodeType,o){case 9:case 11:c=(c=c.documentElement)&&(c=c.namespaceURI)?aC(c):0;break;default:if(o=o===8?c.parentNode:c,c=o.tagName,o=o.namespaceURI)o=aC(o),c=rC(o,c);else switch(c){case"svg":c=1;break;case"math":c=2;break;default:c=0}}Tt(Mt),It(Mt,c)}function ne(){Tt(Mt),Tt(te),Tt(ee)}function be(o){o.memoizedState!==null&&It(ye,o);var c=Mt.current,d=rC(c,o.type);c!==d&&(It(te,o),It(Mt,d))}function fe(o){te.current===o&&(Tt(Mt),Tt(te)),ye.current===o&&(Tt(ye),tc._currentValue=mt)}var vs=Object.prototype.hasOwnProperty,Be=n.unstable_scheduleCallback,_s=n.unstable_cancelCallback,Xn=n.unstable_shouldYield,Za=n.unstable_requestPaint,Ve=n.unstable_now,ha=n.unstable_getCurrentPriorityLevel,da=n.unstable_ImmediatePriority,fa=n.unstable_UserBlockingPriority,ws=n.unstable_NormalPriority,Ei=n.unstable_LowPriority,zo=n.unstable_IdlePriority,uu=n.log,og=n.unstable_setDisableYieldValue,Ra=null,Kn=null;function lg(o){if(Kn&&typeof Kn.onCommitFiberRoot=="function")try{Kn.onCommitFiberRoot(Ra,o,void 0,(o.current.flags&128)===128)}catch{}}function Ar(o){if(typeof uu=="function"&&og(o),Kn&&typeof Kn.setStrictMode=="function")try{Kn.setStrictMode(Ra,o)}catch{}}var Ss=Math.clz32?Math.clz32:UD,VD=Math.log,PD=Math.LN2;function UD(o){return o>>>=0,o===0?32:31-(VD(o)/PD|0)|0}var nd=128,sd=4194304;function Ai(o){var c=o&42;if(c!==0)return c;switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return o&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return o}}function ad(o,c){var d=o.pendingLanes;if(d===0)return 0;var g=0,x=o.suspendedLanes,N=o.pingedLanes,E=o.warmLanes;o=o.finishedLanes!==0;var L=d&134217727;return L!==0?(d=L&~x,d!==0?g=Ai(d):(N&=L,N!==0?g=Ai(N):o||(E=L&~E,E!==0&&(g=Ai(E))))):(L=d&~x,L!==0?g=Ai(L):N!==0?g=Ai(N):o||(E=d&~E,E!==0&&(g=Ai(E)))),g===0?0:c!==0&&c!==g&&(c&x)===0&&(x=g&-g,E=c&-c,x>=E||x===32&&(E&4194176)!==0)?c:g}function cu(o,c){return(o.pendingLanes&~(o.suspendedLanes&~o.pingedLanes)&c)===0}function WD(o,c){switch(o){case 1:case 2:case 4:case 8:return c+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return c+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Yv(){var o=nd;return nd<<=1,(nd&4194176)===0&&(nd=128),o}function Zv(){var o=sd;return sd<<=1,(sd&62914560)===0&&(sd=4194304),o}function ug(o){for(var c=[],d=0;31>d;d++)c.push(o);return c}function hu(o,c){o.pendingLanes|=c,c!==268435456&&(o.suspendedLanes=0,o.pingedLanes=0,o.warmLanes=0)}function GD(o,c,d,g,x,N){var E=o.pendingLanes;o.pendingLanes=d,o.suspendedLanes=0,o.pingedLanes=0,o.warmLanes=0,o.expiredLanes&=d,o.entangledLanes&=d,o.errorRecoveryDisabledLanes&=d,o.shellSuspendCounter=0;var L=o.entanglements,V=o.expirationTimes,J=o.hiddenUpdates;for(d=E&~d;0<d;){var pt=31-Ss(d),vt=1<<pt;L[pt]=0,V[pt]=-1;var ct=J[pt];if(ct!==null)for(J[pt]=null,pt=0;pt<ct.length;pt++){var ft=ct[pt];ft!==null&&(ft.lane&=-536870913)}d&=~vt}g!==0&&Qv(o,g,0),N!==0&&x===0&&o.tag!==0&&(o.suspendedLanes|=N&~(E&~c))}function Qv(o,c,d){o.pendingLanes|=c,o.suspendedLanes&=~c;var g=31-Ss(c);o.entangledLanes|=c,o.entanglements[g]=o.entanglements[g]|1073741824|d&4194218}function Jv(o,c){var d=o.entangledLanes|=c;for(o=o.entanglements;d;){var g=31-Ss(d),x=1<<g;x&c|o[g]&c&&(o[g]|=c),d&=~x}}function tw(o){return o&=-o,2<o?8<o?(o&134217727)!==0?32:268435456:8:2}function ew(){var o=ut.p;return o!==0?o:(o=window.event,o===void 0?32:NC(o.type))}function HD(o,c){var d=ut.p;try{return ut.p=o,c()}finally{ut.p=d}}var Rr=Math.random().toString(36).slice(2),zn="__reactFiber$"+Rr,as="__reactProps$"+Rr,Mo="__reactContainer$"+Rr,cg="__reactEvents$"+Rr,qD="__reactListeners$"+Rr,jD="__reactHandles$"+Rr,nw="__reactResources$"+Rr,du="__reactMarker$"+Rr;function hg(o){delete o[zn],delete o[as],delete o[cg],delete o[qD],delete o[jD]}function Ri(o){var c=o[zn];if(c)return c;for(var d=o.parentNode;d;){if(c=d[Mo]||d[zn]){if(d=c.alternate,c.child!==null||d!==null&&d.child!==null)for(o=lC(o);o!==null;){if(d=o[zn])return d;o=lC(o)}return c}o=d,d=o.parentNode}return null}function Bo(o){if(o=o[zn]||o[Mo]){var c=o.tag;if(c===5||c===6||c===13||c===26||c===27||c===3)return o}return null}function fu(o){var c=o.tag;if(c===5||c===26||c===27||c===6)return o.stateNode;throw Error(s(33))}function Vo(o){var c=o[nw];return c||(c=o[nw]={hoistableStyles:new Map,hoistableScripts:new Map}),c}function bn(o){o[du]=!0}var sw=new Set,aw={};function Di(o,c){Po(o,c),Po(o+"Capture",c)}function Po(o,c){for(aw[o]=c,o=0;o<c.length;o++)sw.add(c[o])}var Qa=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),XD=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),rw={},iw={};function KD(o){return vs.call(iw,o)?!0:vs.call(rw,o)?!1:XD.test(o)?iw[o]=!0:(rw[o]=!0,!1)}function rd(o,c,d){if(KD(c))if(d===null)o.removeAttribute(c);else{switch(typeof d){case"undefined":case"function":case"symbol":o.removeAttribute(c);return;case"boolean":var g=c.toLowerCase().slice(0,5);if(g!=="data-"&&g!=="aria-"){o.removeAttribute(c);return}}o.setAttribute(c,""+d)}}function id(o,c,d){if(d===null)o.removeAttribute(c);else{switch(typeof d){case"undefined":case"function":case"symbol":case"boolean":o.removeAttribute(c);return}o.setAttribute(c,""+d)}}function Ja(o,c,d,g){if(g===null)o.removeAttribute(d);else{switch(typeof g){case"undefined":case"function":case"symbol":case"boolean":o.removeAttribute(d);return}o.setAttributeNS(c,d,""+g)}}function Fs(o){switch(typeof o){case"bigint":case"boolean":case"number":case"string":case"undefined":return o;case"object":return o;default:return""}}function ow(o){var c=o.type;return(o=o.nodeName)&&o.toLowerCase()==="input"&&(c==="checkbox"||c==="radio")}function YD(o){var c=ow(o)?"checked":"value",d=Object.getOwnPropertyDescriptor(o.constructor.prototype,c),g=""+o[c];if(!o.hasOwnProperty(c)&&typeof d<"u"&&typeof d.get=="function"&&typeof d.set=="function"){var x=d.get,N=d.set;return Object.defineProperty(o,c,{configurable:!0,get:function(){return x.call(this)},set:function(E){g=""+E,N.call(this,E)}}),Object.defineProperty(o,c,{enumerable:d.enumerable}),{getValue:function(){return g},setValue:function(E){g=""+E},stopTracking:function(){o._valueTracker=null,delete o[c]}}}}function od(o){o._valueTracker||(o._valueTracker=YD(o))}function lw(o){if(!o)return!1;var c=o._valueTracker;if(!c)return!0;var d=c.getValue(),g="";return o&&(g=ow(o)?o.checked?"true":"false":o.value),o=g,o!==d?(c.setValue(o),!0):!1}function ld(o){if(o=o||(typeof document<"u"?document:void 0),typeof o>"u")return null;try{return o.activeElement||o.body}catch{return o.body}}var ZD=/[\n"\\]/g;function Ls(o){return o.replace(ZD,function(c){return"\\"+c.charCodeAt(0).toString(16)+" "})}function dg(o,c,d,g,x,N,E,L){o.name="",E!=null&&typeof E!="function"&&typeof E!="symbol"&&typeof E!="boolean"?o.type=E:o.removeAttribute("type"),c!=null?E==="number"?(c===0&&o.value===""||o.value!=c)&&(o.value=""+Fs(c)):o.value!==""+Fs(c)&&(o.value=""+Fs(c)):E!=="submit"&&E!=="reset"||o.removeAttribute("value"),c!=null?fg(o,E,Fs(c)):d!=null?fg(o,E,Fs(d)):g!=null&&o.removeAttribute("value"),x==null&&N!=null&&(o.defaultChecked=!!N),x!=null&&(o.checked=x&&typeof x!="function"&&typeof x!="symbol"),L!=null&&typeof L!="function"&&typeof L!="symbol"&&typeof L!="boolean"?o.name=""+Fs(L):o.removeAttribute("name")}function uw(o,c,d,g,x,N,E,L){if(N!=null&&typeof N!="function"&&typeof N!="symbol"&&typeof N!="boolean"&&(o.type=N),c!=null||d!=null){if(!(N!=="submit"&&N!=="reset"||c!=null))return;d=d!=null?""+Fs(d):"",c=c!=null?""+Fs(c):d,L||c===o.value||(o.value=c),o.defaultValue=c}g=g??x,g=typeof g!="function"&&typeof g!="symbol"&&!!g,o.checked=L?o.checked:!!g,o.defaultChecked=!!g,E!=null&&typeof E!="function"&&typeof E!="symbol"&&typeof E!="boolean"&&(o.name=E)}function fg(o,c,d){c==="number"&&ld(o.ownerDocument)===o||o.defaultValue===""+d||(o.defaultValue=""+d)}function Uo(o,c,d,g){if(o=o.options,c){c={};for(var x=0;x<d.length;x++)c["$"+d[x]]=!0;for(d=0;d<o.length;d++)x=c.hasOwnProperty("$"+o[d].value),o[d].selected!==x&&(o[d].selected=x),x&&g&&(o[d].defaultSelected=!0)}else{for(d=""+Fs(d),c=null,x=0;x<o.length;x++){if(o[x].value===d){o[x].selected=!0,g&&(o[x].defaultSelected=!0);return}c!==null||o[x].disabled||(c=o[x])}c!==null&&(c.selected=!0)}}function cw(o,c,d){if(c!=null&&(c=""+Fs(c),c!==o.value&&(o.value=c),d==null)){o.defaultValue!==c&&(o.defaultValue=c);return}o.defaultValue=d!=null?""+Fs(d):""}function hw(o,c,d,g){if(c==null){if(g!=null){if(d!=null)throw Error(s(92));if(ot(g)){if(1<g.length)throw Error(s(93));g=g[0]}d=g}d==null&&(d=""),c=d}d=Fs(c),o.defaultValue=d,g=o.textContent,g===d&&g!==""&&g!==null&&(o.value=g)}function Wo(o,c){if(c){var d=o.firstChild;if(d&&d===o.lastChild&&d.nodeType===3){d.nodeValue=c;return}}o.textContent=c}var QD=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function dw(o,c,d){var g=c.indexOf("--")===0;d==null||typeof d=="boolean"||d===""?g?o.setProperty(c,""):c==="float"?o.cssFloat="":o[c]="":g?o.setProperty(c,d):typeof d!="number"||d===0||QD.has(c)?c==="float"?o.cssFloat=d:o[c]=(""+d).trim():o[c]=d+"px"}function fw(o,c,d){if(c!=null&&typeof c!="object")throw Error(s(62));if(o=o.style,d!=null){for(var g in d)!d.hasOwnProperty(g)||c!=null&&c.hasOwnProperty(g)||(g.indexOf("--")===0?o.setProperty(g,""):g==="float"?o.cssFloat="":o[g]="");for(var x in c)g=c[x],c.hasOwnProperty(x)&&d[x]!==g&&dw(o,x,g)}else for(var N in c)c.hasOwnProperty(N)&&dw(o,N,c[N])}function pg(o){if(o.indexOf("-")===-1)return!1;switch(o){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var JD=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),tO=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function ud(o){return tO.test(""+o)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":o}var mg=null;function gg(o){return o=o.target||o.srcElement||window,o.correspondingUseElement&&(o=o.correspondingUseElement),o.nodeType===3?o.parentNode:o}var Go=null,Ho=null;function pw(o){var c=Bo(o);if(c&&(o=c.stateNode)){var d=o[as]||null;t:switch(o=c.stateNode,c.type){case"input":if(dg(o,d.value,d.defaultValue,d.defaultValue,d.checked,d.defaultChecked,d.type,d.name),c=d.name,d.type==="radio"&&c!=null){for(d=o;d.parentNode;)d=d.parentNode;for(d=d.querySelectorAll('input[name="'+Ls(""+c)+'"][type="radio"]'),c=0;c<d.length;c++){var g=d[c];if(g!==o&&g.form===o.form){var x=g[as]||null;if(!x)throw Error(s(90));dg(g,x.value,x.defaultValue,x.defaultValue,x.checked,x.defaultChecked,x.type,x.name)}}for(c=0;c<d.length;c++)g=d[c],g.form===o.form&&lw(g)}break t;case"textarea":cw(o,d.value,d.defaultValue);break t;case"select":c=d.value,c!=null&&Uo(o,!!d.multiple,c,!1)}}}var yg=!1;function mw(o,c,d){if(yg)return o(c,d);yg=!0;try{var g=o(c);return g}finally{if(yg=!1,(Go!==null||Ho!==null)&&(qd(),Go&&(c=Go,o=Ho,Ho=Go=null,pw(c),o)))for(c=0;c<o.length;c++)pw(o[c])}}function pu(o,c){var d=o.stateNode;if(d===null)return null;var g=d[as]||null;if(g===null)return null;d=g[c];t:switch(c){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(g=!g.disabled)||(o=o.type,g=!(o==="button"||o==="input"||o==="select"||o==="textarea")),o=!g;break t;default:o=!1}if(o)return null;if(d&&typeof d!="function")throw Error(s(231,c,typeof d));return d}var bg=!1;if(Qa)try{var mu={};Object.defineProperty(mu,"passive",{get:function(){bg=!0}}),window.addEventListener("test",mu,mu),window.removeEventListener("test",mu,mu)}catch{bg=!1}var Dr=null,xg=null,cd=null;function gw(){if(cd)return cd;var o,c=xg,d=c.length,g,x="value"in Dr?Dr.value:Dr.textContent,N=x.length;for(o=0;o<d&&c[o]===x[o];o++);var E=d-o;for(g=1;g<=E&&c[d-g]===x[N-g];g++);return cd=x.slice(o,1<g?1-g:void 0)}function hd(o){var c=o.keyCode;return"charCode"in o?(o=o.charCode,o===0&&c===13&&(o=13)):o=c,o===10&&(o=13),32<=o||o===13?o:0}function dd(){return!0}function yw(){return!1}function rs(o){function c(d,g,x,N,E){this._reactName=d,this._targetInst=x,this.type=g,this.nativeEvent=N,this.target=E,this.currentTarget=null;for(var L in o)o.hasOwnProperty(L)&&(d=o[L],this[L]=d?d(N):N[L]);return this.isDefaultPrevented=(N.defaultPrevented!=null?N.defaultPrevented:N.returnValue===!1)?dd:yw,this.isPropagationStopped=yw,this}return _(c.prototype,{preventDefault:function(){this.defaultPrevented=!0;var d=this.nativeEvent;d&&(d.preventDefault?d.preventDefault():typeof d.returnValue!="unknown"&&(d.returnValue=!1),this.isDefaultPrevented=dd)},stopPropagation:function(){var d=this.nativeEvent;d&&(d.stopPropagation?d.stopPropagation():typeof d.cancelBubble!="unknown"&&(d.cancelBubble=!0),this.isPropagationStopped=dd)},persist:function(){},isPersistent:dd}),c}var Oi={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(o){return o.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},fd=rs(Oi),gu=_({},Oi,{view:0,detail:0}),eO=rs(gu),vg,wg,yu,pd=_({},gu,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Ng,button:0,buttons:0,relatedTarget:function(o){return o.relatedTarget===void 0?o.fromElement===o.srcElement?o.toElement:o.fromElement:o.relatedTarget},movementX:function(o){return"movementX"in o?o.movementX:(o!==yu&&(yu&&o.type==="mousemove"?(vg=o.screenX-yu.screenX,wg=o.screenY-yu.screenY):wg=vg=0,yu=o),vg)},movementY:function(o){return"movementY"in o?o.movementY:wg}}),bw=rs(pd),nO=_({},pd,{dataTransfer:0}),sO=rs(nO),aO=_({},gu,{relatedTarget:0}),Sg=rs(aO),rO=_({},Oi,{animationName:0,elapsedTime:0,pseudoElement:0}),iO=rs(rO),oO=_({},Oi,{clipboardData:function(o){return"clipboardData"in o?o.clipboardData:window.clipboardData}}),lO=rs(oO),uO=_({},Oi,{data:0}),xw=rs(uO),cO={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},hO={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},dO={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function fO(o){var c=this.nativeEvent;return c.getModifierState?c.getModifierState(o):(o=dO[o])?!!c[o]:!1}function Ng(){return fO}var pO=_({},gu,{key:function(o){if(o.key){var c=cO[o.key]||o.key;if(c!=="Unidentified")return c}return o.type==="keypress"?(o=hd(o),o===13?"Enter":String.fromCharCode(o)):o.type==="keydown"||o.type==="keyup"?hO[o.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Ng,charCode:function(o){return o.type==="keypress"?hd(o):0},keyCode:function(o){return o.type==="keydown"||o.type==="keyup"?o.keyCode:0},which:function(o){return o.type==="keypress"?hd(o):o.type==="keydown"||o.type==="keyup"?o.keyCode:0}}),mO=rs(pO),gO=_({},pd,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),vw=rs(gO),yO=_({},gu,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Ng}),bO=rs(yO),xO=_({},Oi,{propertyName:0,elapsedTime:0,pseudoElement:0}),vO=rs(xO),wO=_({},pd,{deltaX:function(o){return"deltaX"in o?o.deltaX:"wheelDeltaX"in o?-o.wheelDeltaX:0},deltaY:function(o){return"deltaY"in o?o.deltaY:"wheelDeltaY"in o?-o.wheelDeltaY:"wheelDelta"in o?-o.wheelDelta:0},deltaZ:0,deltaMode:0}),SO=rs(wO),NO=_({},Oi,{newState:0,oldState:0}),CO=rs(NO),TO=[9,13,27,32],Cg=Qa&&"CompositionEvent"in window,bu=null;Qa&&"documentMode"in document&&(bu=document.documentMode);var $O=Qa&&"TextEvent"in window&&!bu,ww=Qa&&(!Cg||bu&&8<bu&&11>=bu),Sw=" ",Nw=!1;function Cw(o,c){switch(o){case"keyup":return TO.indexOf(c.keyCode)!==-1;case"keydown":return c.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Tw(o){return o=o.detail,typeof o=="object"&&"data"in o?o.data:null}var qo=!1;function kO(o,c){switch(o){case"compositionend":return Tw(c);case"keypress":return c.which!==32?null:(Nw=!0,Sw);case"textInput":return o=c.data,o===Sw&&Nw?null:o;default:return null}}function IO(o,c){if(qo)return o==="compositionend"||!Cg&&Cw(o,c)?(o=gw(),cd=xg=Dr=null,qo=!1,o):null;switch(o){case"paste":return null;case"keypress":if(!(c.ctrlKey||c.altKey||c.metaKey)||c.ctrlKey&&c.altKey){if(c.char&&1<c.char.length)return c.char;if(c.which)return String.fromCharCode(c.which)}return null;case"compositionend":return ww&&c.locale!=="ko"?null:c.data;default:return null}}var EO={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function $w(o){var c=o&&o.nodeName&&o.nodeName.toLowerCase();return c==="input"?!!EO[o.type]:c==="textarea"}function kw(o,c,d,g){Go?Ho?Ho.push(g):Ho=[g]:Go=g,c=Zd(c,"onChange"),0<c.length&&(d=new fd("onChange","change",null,d,g),o.push({event:d,listeners:c}))}var xu=null,vu=null;function AO(o){JN(o,0)}function md(o){var c=fu(o);if(lw(c))return o}function Iw(o,c){if(o==="change")return c}var Ew=!1;if(Qa){var Tg;if(Qa){var $g="oninput"in document;if(!$g){var Aw=document.createElement("div");Aw.setAttribute("oninput","return;"),$g=typeof Aw.oninput=="function"}Tg=$g}else Tg=!1;Ew=Tg&&(!document.documentMode||9<document.documentMode)}function Rw(){xu&&(xu.detachEvent("onpropertychange",Dw),vu=xu=null)}function Dw(o){if(o.propertyName==="value"&&md(vu)){var c=[];kw(c,vu,o,gg(o)),mw(AO,c)}}function RO(o,c,d){o==="focusin"?(Rw(),xu=c,vu=d,xu.attachEvent("onpropertychange",Dw)):o==="focusout"&&Rw()}function DO(o){if(o==="selectionchange"||o==="keyup"||o==="keydown")return md(vu)}function OO(o,c){if(o==="click")return md(c)}function _O(o,c){if(o==="input"||o==="change")return md(c)}function FO(o,c){return o===c&&(o!==0||1/o===1/c)||o!==o&&c!==c}var Ns=typeof Object.is=="function"?Object.is:FO;function wu(o,c){if(Ns(o,c))return!0;if(typeof o!="object"||o===null||typeof c!="object"||c===null)return!1;var d=Object.keys(o),g=Object.keys(c);if(d.length!==g.length)return!1;for(g=0;g<d.length;g++){var x=d[g];if(!vs.call(c,x)||!Ns(o[x],c[x]))return!1}return!0}function Ow(o){for(;o&&o.firstChild;)o=o.firstChild;return o}function _w(o,c){var d=Ow(o);o=0;for(var g;d;){if(d.nodeType===3){if(g=o+d.textContent.length,o<=c&&g>=c)return{node:d,offset:c-o};o=g}t:{for(;d;){if(d.nextSibling){d=d.nextSibling;break t}d=d.parentNode}d=void 0}d=Ow(d)}}function Fw(o,c){return o&&c?o===c?!0:o&&o.nodeType===3?!1:c&&c.nodeType===3?Fw(o,c.parentNode):"contains"in o?o.contains(c):o.compareDocumentPosition?!!(o.compareDocumentPosition(c)&16):!1:!1}function Lw(o){o=o!=null&&o.ownerDocument!=null&&o.ownerDocument.defaultView!=null?o.ownerDocument.defaultView:window;for(var c=ld(o.document);c instanceof o.HTMLIFrameElement;){try{var d=typeof c.contentWindow.location.href=="string"}catch{d=!1}if(d)o=c.contentWindow;else break;c=ld(o.document)}return c}function kg(o){var c=o&&o.nodeName&&o.nodeName.toLowerCase();return c&&(c==="input"&&(o.type==="text"||o.type==="search"||o.type==="tel"||o.type==="url"||o.type==="password")||c==="textarea"||o.contentEditable==="true")}function LO(o,c){var d=Lw(c);c=o.focusedElem;var g=o.selectionRange;if(d!==c&&c&&c.ownerDocument&&Fw(c.ownerDocument.documentElement,c)){if(g!==null&&kg(c)){if(o=g.start,d=g.end,d===void 0&&(d=o),"selectionStart"in c)c.selectionStart=o,c.selectionEnd=Math.min(d,c.value.length);else if(d=(o=c.ownerDocument||document)&&o.defaultView||window,d.getSelection){d=d.getSelection();var x=c.textContent.length,N=Math.min(g.start,x);g=g.end===void 0?N:Math.min(g.end,x),!d.extend&&N>g&&(x=g,g=N,N=x),x=_w(c,N);var E=_w(c,g);x&&E&&(d.rangeCount!==1||d.anchorNode!==x.node||d.anchorOffset!==x.offset||d.focusNode!==E.node||d.focusOffset!==E.offset)&&(o=o.createRange(),o.setStart(x.node,x.offset),d.removeAllRanges(),N>g?(d.addRange(o),d.extend(E.node,E.offset)):(o.setEnd(E.node,E.offset),d.addRange(o)))}}for(o=[],d=c;d=d.parentNode;)d.nodeType===1&&o.push({element:d,left:d.scrollLeft,top:d.scrollTop});for(typeof c.focus=="function"&&c.focus(),c=0;c<o.length;c++)d=o[c],d.element.scrollLeft=d.left,d.element.scrollTop=d.top}}var zO=Qa&&"documentMode"in document&&11>=document.documentMode,jo=null,Ig=null,Su=null,Eg=!1;function zw(o,c,d){var g=d.window===d?d.document:d.nodeType===9?d:d.ownerDocument;Eg||jo==null||jo!==ld(g)||(g=jo,"selectionStart"in g&&kg(g)?g={start:g.selectionStart,end:g.selectionEnd}:(g=(g.ownerDocument&&g.ownerDocument.defaultView||window).getSelection(),g={anchorNode:g.anchorNode,anchorOffset:g.anchorOffset,focusNode:g.focusNode,focusOffset:g.focusOffset}),Su&&wu(Su,g)||(Su=g,g=Zd(Ig,"onSelect"),0<g.length&&(c=new fd("onSelect","select",null,c,d),o.push({event:c,listeners:g}),c.target=jo)))}function _i(o,c){var d={};return d[o.toLowerCase()]=c.toLowerCase(),d["Webkit"+o]="webkit"+c,d["Moz"+o]="moz"+c,d}var Xo={animationend:_i("Animation","AnimationEnd"),animationiteration:_i("Animation","AnimationIteration"),animationstart:_i("Animation","AnimationStart"),transitionrun:_i("Transition","TransitionRun"),transitionstart:_i("Transition","TransitionStart"),transitioncancel:_i("Transition","TransitionCancel"),transitionend:_i("Transition","TransitionEnd")},Ag={},Mw={};Qa&&(Mw=document.createElement("div").style,"AnimationEvent"in window||(delete Xo.animationend.animation,delete Xo.animationiteration.animation,delete Xo.animationstart.animation),"TransitionEvent"in window||delete Xo.transitionend.transition);function Fi(o){if(Ag[o])return Ag[o];if(!Xo[o])return o;var c=Xo[o],d;for(d in c)if(c.hasOwnProperty(d)&&d in Mw)return Ag[o]=c[d];return o}var Bw=Fi("animationend"),Vw=Fi("animationiteration"),Pw=Fi("animationstart"),MO=Fi("transitionrun"),BO=Fi("transitionstart"),VO=Fi("transitioncancel"),Uw=Fi("transitionend"),Ww=new Map,Gw="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(" ");function pa(o,c){Ww.set(o,c),Di(c,[o])}var zs=[],Ko=0,Rg=0;function gd(){for(var o=Ko,c=Rg=Ko=0;c<o;){var d=zs[c];zs[c++]=null;var g=zs[c];zs[c++]=null;var x=zs[c];zs[c++]=null;var N=zs[c];if(zs[c++]=null,g!==null&&x!==null){var E=g.pending;E===null?x.next=x:(x.next=E.next,E.next=x),g.pending=x}N!==0&&Hw(d,x,N)}}function yd(o,c,d,g){zs[Ko++]=o,zs[Ko++]=c,zs[Ko++]=d,zs[Ko++]=g,Rg|=g,o.lanes|=g,o=o.alternate,o!==null&&(o.lanes|=g)}function Dg(o,c,d,g){return yd(o,c,d,g),bd(o)}function Or(o,c){return yd(o,null,null,c),bd(o)}function Hw(o,c,d){o.lanes|=d;var g=o.alternate;g!==null&&(g.lanes|=d);for(var x=!1,N=o.return;N!==null;)N.childLanes|=d,g=N.alternate,g!==null&&(g.childLanes|=d),N.tag===22&&(o=N.stateNode,o===null||o._visibility&1||(x=!0)),o=N,N=N.return;x&&c!==null&&o.tag===3&&(N=o.stateNode,x=31-Ss(d),N=N.hiddenUpdates,o=N[x],o===null?N[x]=[c]:o.push(c),c.lane=d|536870912)}function bd(o){if(50<ju)throw ju=0,My=null,Error(s(185));for(var c=o.return;c!==null;)o=c,c=o.return;return o.tag===3?o.stateNode:null}var Yo={},qw=new WeakMap;function Ms(o,c){if(typeof o=="object"&&o!==null){var d=qw.get(o);return d!==void 0?d:(c={value:o,source:c,stack:et(c)},qw.set(o,c),c)}return{value:o,source:c,stack:et(c)}}var Zo=[],Qo=0,xd=null,vd=0,Bs=[],Vs=0,Li=null,tr=1,er="";function zi(o,c){Zo[Qo++]=vd,Zo[Qo++]=xd,xd=o,vd=c}function jw(o,c,d){Bs[Vs++]=tr,Bs[Vs++]=er,Bs[Vs++]=Li,Li=o;var g=tr;o=er;var x=32-Ss(g)-1;g&=~(1<<x),d+=1;var N=32-Ss(c)+x;if(30<N){var E=x-x%5;N=(g&(1<<E)-1).toString(32),g>>=E,x-=E,tr=1<<32-Ss(c)+x|d<<x|g,er=N+o}else tr=1<<N|d<<x|g,er=o}function Og(o){o.return!==null&&(zi(o,1),jw(o,1,0))}function _g(o){for(;o===xd;)xd=Zo[--Qo],Zo[Qo]=null,vd=Zo[--Qo],Zo[Qo]=null;for(;o===Li;)Li=Bs[--Vs],Bs[Vs]=null,er=Bs[--Vs],Bs[Vs]=null,tr=Bs[--Vs],Bs[Vs]=null}var Yn=null,An=null,he=!1,ma=null,Da=!1,Fg=Error(s(519));function Mi(o){var c=Error(s(418,""));throw Tu(Ms(c,o)),Fg}function Xw(o){var c=o.stateNode,d=o.type,g=o.memoizedProps;switch(c[zn]=o,c[as]=g,d){case"dialog":ie("cancel",c),ie("close",c);break;case"iframe":case"object":case"embed":ie("load",c);break;case"video":case"audio":for(d=0;d<Ku.length;d++)ie(Ku[d],c);break;case"source":ie("error",c);break;case"img":case"image":case"link":ie("error",c),ie("load",c);break;case"details":ie("toggle",c);break;case"input":ie("invalid",c),uw(c,g.value,g.defaultValue,g.checked,g.defaultChecked,g.type,g.name,!0),od(c);break;case"select":ie("invalid",c);break;case"textarea":ie("invalid",c),hw(c,g.value,g.defaultValue,g.children),od(c)}d=g.children,typeof d!="string"&&typeof d!="number"&&typeof d!="bigint"||c.textContent===""+d||g.suppressHydrationWarning===!0||sC(c.textContent,d)?(g.popover!=null&&(ie("beforetoggle",c),ie("toggle",c)),g.onScroll!=null&&ie("scroll",c),g.onScrollEnd!=null&&ie("scrollend",c),g.onClick!=null&&(c.onclick=Qd),c=!0):c=!1,c||Mi(o)}function Kw(o){for(Yn=o.return;Yn;)switch(Yn.tag){case 3:case 27:Da=!0;return;case 5:case 13:Da=!1;return;default:Yn=Yn.return}}function Nu(o){if(o!==Yn)return!1;if(!he)return Kw(o),he=!0,!1;var c=!1,d;if((d=o.tag!==3&&o.tag!==27)&&((d=o.tag===5)&&(d=o.type,d=!(d!=="form"&&d!=="button")||eb(o.type,o.memoizedProps)),d=!d),d&&(c=!0),c&&An&&Mi(o),Kw(o),o.tag===13){if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(s(317));t:{for(o=o.nextSibling,c=0;o;){if(o.nodeType===8)if(d=o.data,d==="/$"){if(c===0){An=ya(o.nextSibling);break t}c--}else d!=="$"&&d!=="$!"&&d!=="$?"||c++;o=o.nextSibling}An=null}}else An=Yn?ya(o.stateNode.nextSibling):null;return!0}function Cu(){An=Yn=null,he=!1}function Tu(o){ma===null?ma=[o]:ma.push(o)}var $u=Error(s(460)),Yw=Error(s(474)),Lg={then:function(){}};function Zw(o){return o=o.status,o==="fulfilled"||o==="rejected"}function wd(){}function Qw(o,c,d){switch(d=o[d],d===void 0?o.push(c):d!==c&&(c.then(wd,wd),c=d),c.status){case"fulfilled":return c.value;case"rejected":throw o=c.reason,o===$u?Error(s(483)):o;default:if(typeof c.status=="string")c.then(wd,wd);else{if(o=$e,o!==null&&100<o.shellSuspendCounter)throw Error(s(482));o=c,o.status="pending",o.then(function(g){if(c.status==="pending"){var x=c;x.status="fulfilled",x.value=g}},function(g){if(c.status==="pending"){var x=c;x.status="rejected",x.reason=g}})}switch(c.status){case"fulfilled":return c.value;case"rejected":throw o=c.reason,o===$u?Error(s(483)):o}throw ku=c,$u}}var ku=null;function Jw(){if(ku===null)throw Error(s(459));var o=ku;return ku=null,o}var Jo=null,Iu=0;function Sd(o){var c=Iu;return Iu+=1,Jo===null&&(Jo=[]),Qw(Jo,o,c)}function Eu(o,c){c=c.props.ref,o.ref=c!==void 0?c:null}function Nd(o,c){throw c.$$typeof===r?Error(s(525)):(o=Object.prototype.toString.call(c),Error(s(31,o==="[object Object]"?"object with keys {"+Object.keys(c).join(", ")+"}":o)))}function tS(o){var c=o._init;return c(o._payload)}function eS(o){function c(st,Z){if(o){var it=st.deletions;it===null?(st.deletions=[Z],st.flags|=16):it.push(Z)}}function d(st,Z){if(!o)return null;for(;Z!==null;)c(st,Z),Z=Z.sibling;return null}function g(st){for(var Z=new Map;st!==null;)st.key!==null?Z.set(st.key,st):Z.set(st.index,st),st=st.sibling;return Z}function x(st,Z){return st=Hr(st,Z),st.index=0,st.sibling=null,st}function N(st,Z,it){return st.index=it,o?(it=st.alternate,it!==null?(it=it.index,it<Z?(st.flags|=33554434,Z):it):(st.flags|=33554434,Z)):(st.flags|=1048576,Z)}function E(st){return o&&st.alternate===null&&(st.flags|=33554434),st}function L(st,Z,it,gt){return Z===null||Z.tag!==6?(Z=Ay(it,st.mode,gt),Z.return=st,Z):(Z=x(Z,it),Z.return=st,Z)}function V(st,Z,it,gt){var Rt=it.type;return Rt===u?pt(st,Z,it.props.children,gt,it.key):Z!==null&&(Z.elementType===Rt||typeof Rt=="object"&&Rt!==null&&Rt.$$typeof===C&&tS(Rt)===Z.type)?(Z=x(Z,it.props),Eu(Z,it),Z.return=st,Z):(Z=Pd(it.type,it.key,it.props,null,st.mode,gt),Eu(Z,it),Z.return=st,Z)}function J(st,Z,it,gt){return Z===null||Z.tag!==4||Z.stateNode.containerInfo!==it.containerInfo||Z.stateNode.implementation!==it.implementation?(Z=Ry(it,st.mode,gt),Z.return=st,Z):(Z=x(Z,it.children||[]),Z.return=st,Z)}function pt(st,Z,it,gt,Rt){return Z===null||Z.tag!==7?(Z=Xi(it,st.mode,gt,Rt),Z.return=st,Z):(Z=x(Z,it),Z.return=st,Z)}function vt(st,Z,it){if(typeof Z=="string"&&Z!==""||typeof Z=="number"||typeof Z=="bigint")return Z=Ay(""+Z,st.mode,it),Z.return=st,Z;if(typeof Z=="object"&&Z!==null){switch(Z.$$typeof){case i:return it=Pd(Z.type,Z.key,Z.props,null,st.mode,it),Eu(it,Z),it.return=st,it;case l:return Z=Ry(Z,st.mode,it),Z.return=st,Z;case C:var gt=Z._init;return Z=gt(Z._payload),vt(st,Z,it)}if(ot(Z)||D(Z))return Z=Xi(Z,st.mode,it,null),Z.return=st,Z;if(typeof Z.then=="function")return vt(st,Sd(Z),it);if(Z.$$typeof===y)return vt(st,Md(st,Z),it);Nd(st,Z)}return null}function ct(st,Z,it,gt){var Rt=Z!==null?Z.key:null;if(typeof it=="string"&&it!==""||typeof it=="number"||typeof it=="bigint")return Rt!==null?null:L(st,Z,""+it,gt);if(typeof it=="object"&&it!==null){switch(it.$$typeof){case i:return it.key===Rt?V(st,Z,it,gt):null;case l:return it.key===Rt?J(st,Z,it,gt):null;case C:return Rt=it._init,it=Rt(it._payload),ct(st,Z,it,gt)}if(ot(it)||D(it))return Rt!==null?null:pt(st,Z,it,gt,null);if(typeof it.then=="function")return ct(st,Z,Sd(it),gt);if(it.$$typeof===y)return ct(st,Z,Md(st,it),gt);Nd(st,it)}return null}function ft(st,Z,it,gt,Rt){if(typeof gt=="string"&&gt!==""||typeof gt=="number"||typeof gt=="bigint")return st=st.get(it)||null,L(Z,st,""+gt,Rt);if(typeof gt=="object"&&gt!==null){switch(gt.$$typeof){case i:return st=st.get(gt.key===null?it:gt.key)||null,V(Z,st,gt,Rt);case l:return st=st.get(gt.key===null?it:gt.key)||null,J(Z,st,gt,Rt);case C:var Zt=gt._init;return gt=Zt(gt._payload),ft(st,Z,it,gt,Rt)}if(ot(gt)||D(gt))return st=st.get(it)||null,pt(Z,st,gt,Rt,null);if(typeof gt.then=="function")return ft(st,Z,it,Sd(gt),Rt);if(gt.$$typeof===y)return ft(st,Z,it,Md(Z,gt),Rt);Nd(Z,gt)}return null}function _t(st,Z,it,gt){for(var Rt=null,Zt=null,zt=Z,Bt=Z=0,wn=null;zt!==null&&Bt<it.length;Bt++){zt.index>Bt?(wn=zt,zt=null):wn=zt.sibling;var de=ct(st,zt,it[Bt],gt);if(de===null){zt===null&&(zt=wn);break}o&&zt&&de.alternate===null&&c(st,zt),Z=N(de,Z,Bt),Zt===null?Rt=de:Zt.sibling=de,Zt=de,zt=wn}if(Bt===it.length)return d(st,zt),he&&zi(st,Bt),Rt;if(zt===null){for(;Bt<it.length;Bt++)zt=vt(st,it[Bt],gt),zt!==null&&(Z=N(zt,Z,Bt),Zt===null?Rt=zt:Zt.sibling=zt,Zt=zt);return he&&zi(st,Bt),Rt}for(zt=g(zt);Bt<it.length;Bt++)wn=ft(zt,st,Bt,it[Bt],gt),wn!==null&&(o&&wn.alternate!==null&&zt.delete(wn.key===null?Bt:wn.key),Z=N(wn,Z,Bt),Zt===null?Rt=wn:Zt.sibling=wn,Zt=wn);return o&&zt.forEach(function(Qr){return c(st,Qr)}),he&&zi(st,Bt),Rt}function Ut(st,Z,it,gt){if(it==null)throw Error(s(151));for(var Rt=null,Zt=null,zt=Z,Bt=Z=0,wn=null,de=it.next();zt!==null&&!de.done;Bt++,de=it.next()){zt.index>Bt?(wn=zt,zt=null):wn=zt.sibling;var Qr=ct(st,zt,de.value,gt);if(Qr===null){zt===null&&(zt=wn);break}o&&zt&&Qr.alternate===null&&c(st,zt),Z=N(Qr,Z,Bt),Zt===null?Rt=Qr:Zt.sibling=Qr,Zt=Qr,zt=wn}if(de.done)return d(st,zt),he&&zi(st,Bt),Rt;if(zt===null){for(;!de.done;Bt++,de=it.next())de=vt(st,de.value,gt),de!==null&&(Z=N(de,Z,Bt),Zt===null?Rt=de:Zt.sibling=de,Zt=de);return he&&zi(st,Bt),Rt}for(zt=g(zt);!de.done;Bt++,de=it.next())de=ft(zt,st,Bt,de.value,gt),de!==null&&(o&&de.alternate!==null&&zt.delete(de.key===null?Bt:de.key),Z=N(de,Z,Bt),Zt===null?Rt=de:Zt.sibling=de,Zt=de);return o&&zt.forEach(function(tF){return c(st,tF)}),he&&zi(st,Bt),Rt}function We(st,Z,it,gt){if(typeof it=="object"&&it!==null&&it.type===u&&it.key===null&&(it=it.props.children),typeof it=="object"&&it!==null){switch(it.$$typeof){case i:t:{for(var Rt=it.key;Z!==null;){if(Z.key===Rt){if(Rt=it.type,Rt===u){if(Z.tag===7){d(st,Z.sibling),gt=x(Z,it.props.children),gt.return=st,st=gt;break t}}else if(Z.elementType===Rt||typeof Rt=="object"&&Rt!==null&&Rt.$$typeof===C&&tS(Rt)===Z.type){d(st,Z.sibling),gt=x(Z,it.props),Eu(gt,it),gt.return=st,st=gt;break t}d(st,Z);break}else c(st,Z);Z=Z.sibling}it.type===u?(gt=Xi(it.props.children,st.mode,gt,it.key),gt.return=st,st=gt):(gt=Pd(it.type,it.key,it.props,null,st.mode,gt),Eu(gt,it),gt.return=st,st=gt)}return E(st);case l:t:{for(Rt=it.key;Z!==null;){if(Z.key===Rt)if(Z.tag===4&&Z.stateNode.containerInfo===it.containerInfo&&Z.stateNode.implementation===it.implementation){d(st,Z.sibling),gt=x(Z,it.children||[]),gt.return=st,st=gt;break t}else{d(st,Z);break}else c(st,Z);Z=Z.sibling}gt=Ry(it,st.mode,gt),gt.return=st,st=gt}return E(st);case C:return Rt=it._init,it=Rt(it._payload),We(st,Z,it,gt)}if(ot(it))return _t(st,Z,it,gt);if(D(it)){if(Rt=D(it),typeof Rt!="function")throw Error(s(150));return it=Rt.call(it),Ut(st,Z,it,gt)}if(typeof it.then=="function")return We(st,Z,Sd(it),gt);if(it.$$typeof===y)return We(st,Z,Md(st,it),gt);Nd(st,it)}return typeof it=="string"&&it!==""||typeof it=="number"||typeof it=="bigint"?(it=""+it,Z!==null&&Z.tag===6?(d(st,Z.sibling),gt=x(Z,it),gt.return=st,st=gt):(d(st,Z),gt=Ay(it,st.mode,gt),gt.return=st,st=gt),E(st)):d(st,Z)}return function(st,Z,it,gt){try{Iu=0;var Rt=We(st,Z,it,gt);return Jo=null,Rt}catch(zt){if(zt===$u)throw zt;var Zt=Gs(29,zt,null,st.mode);return Zt.lanes=gt,Zt.return=st,Zt}finally{}}}var Bi=eS(!0),nS=eS(!1),tl=wt(null),Cd=wt(0);function sS(o,c){o=dr,It(Cd,o),It(tl,c),dr=o|c.baseLanes}function zg(){It(Cd,dr),It(tl,tl.current)}function Mg(){dr=Cd.current,Tt(tl),Tt(Cd)}var Ps=wt(null),Oa=null;function _r(o){var c=o.alternate;It(hn,hn.current&1),It(Ps,o),Oa===null&&(c===null||tl.current!==null||c.memoizedState!==null)&&(Oa=o)}function aS(o){if(o.tag===22){if(It(hn,hn.current),It(Ps,o),Oa===null){var c=o.alternate;c!==null&&c.memoizedState!==null&&(Oa=o)}}else Fr()}function Fr(){It(hn,hn.current),It(Ps,Ps.current)}function nr(o){Tt(Ps),Oa===o&&(Oa=null),Tt(hn)}var hn=wt(0);function Td(o){for(var c=o;c!==null;){if(c.tag===13){var d=c.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||d.data==="$?"||d.data==="$!"))return c}else if(c.tag===19&&c.memoizedProps.revealOrder!==void 0){if((c.flags&128)!==0)return c}else if(c.child!==null){c.child.return=c,c=c.child;continue}if(c===o)break;for(;c.sibling===null;){if(c.return===null||c.return===o)return null;c=c.return}c.sibling.return=c.return,c=c.sibling}return null}var PO=typeof AbortController<"u"?AbortController:function(){var o=[],c=this.signal={aborted:!1,addEventListener:function(d,g){o.push(g)}};this.abort=function(){c.aborted=!0,o.forEach(function(d){return d()})}},UO=n.unstable_scheduleCallback,WO=n.unstable_NormalPriority,dn={$$typeof:y,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function Bg(){return{controller:new PO,data:new Map,refCount:0}}function Au(o){o.refCount--,o.refCount===0&&UO(WO,function(){o.controller.abort()})}var Ru=null,Vg=0,el=0,nl=null;function GO(o,c){if(Ru===null){var d=Ru=[];Vg=0,el=qy(),nl={status:"pending",value:void 0,then:function(g){d.push(g)}}}return Vg++,c.then(rS,rS),c}function rS(){if(--Vg===0&&Ru!==null){nl!==null&&(nl.status="fulfilled");var o=Ru;Ru=null,el=0,nl=null;for(var c=0;c<o.length;c++)(0,o[c])()}}function HO(o,c){var d=[],g={status:"pending",value:null,reason:null,then:function(x){d.push(x)}};return o.then(function(){g.status="fulfilled",g.value=c;for(var x=0;x<d.length;x++)(0,d[x])(c)},function(x){for(g.status="rejected",g.reason=x,x=0;x<d.length;x++)(0,d[x])(void 0)}),g}var iS=R.S;R.S=function(o,c){typeof c=="object"&&c!==null&&typeof c.then=="function"&&GO(o,c),iS!==null&&iS(o,c)};var Vi=wt(null);function Pg(){var o=Vi.current;return o!==null?o:$e.pooledCache}function $d(o,c){c===null?It(Vi,Vi.current):It(Vi,c.pool)}function oS(){var o=Pg();return o===null?null:{parent:dn._currentValue,pool:o}}var Lr=0,Kt=null,xe=null,Qe=null,kd=!1,sl=!1,Pi=!1,Id=0,Du=0,al=null,qO=0;function Ye(){throw Error(s(321))}function Ug(o,c){if(c===null)return!1;for(var d=0;d<c.length&&d<o.length;d++)if(!Ns(o[d],c[d]))return!1;return!0}function Wg(o,c,d,g,x,N){return Lr=N,Kt=c,c.memoizedState=null,c.updateQueue=null,c.lanes=0,R.H=o===null||o.memoizedState===null?Ui:zr,Pi=!1,N=d(g,x),Pi=!1,sl&&(N=uS(c,d,g,x)),lS(o),N}function lS(o){R.H=_a;var c=xe!==null&&xe.next!==null;if(Lr=0,Qe=xe=Kt=null,kd=!1,Du=0,al=null,c)throw Error(s(300));o===null||xn||(o=o.dependencies,o!==null&&zd(o)&&(xn=!0))}function uS(o,c,d,g){Kt=o;var x=0;do{if(sl&&(al=null),Du=0,sl=!1,25<=x)throw Error(s(301));if(x+=1,Qe=xe=null,o.updateQueue!=null){var N=o.updateQueue;N.lastEffect=null,N.events=null,N.stores=null,N.memoCache!=null&&(N.memoCache.index=0)}R.H=Wi,N=c(d,g)}while(sl);return N}function jO(){var o=R.H,c=o.useState()[0];return c=typeof c.then=="function"?Ou(c):c,o=o.useState()[0],(xe!==null?xe.memoizedState:null)!==o&&(Kt.flags|=1024),c}function Gg(){var o=Id!==0;return Id=0,o}function Hg(o,c,d){c.updateQueue=o.updateQueue,c.flags&=-2053,o.lanes&=~d}function qg(o){if(kd){for(o=o.memoizedState;o!==null;){var c=o.queue;c!==null&&(c.pending=null),o=o.next}kd=!1}Lr=0,Qe=xe=Kt=null,sl=!1,Du=Id=0,al=null}function is(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Qe===null?Kt.memoizedState=Qe=o:Qe=Qe.next=o,Qe}function Je(){if(xe===null){var o=Kt.alternate;o=o!==null?o.memoizedState:null}else o=xe.next;var c=Qe===null?Kt.memoizedState:Qe.next;if(c!==null)Qe=c,xe=o;else{if(o===null)throw Kt.alternate===null?Error(s(467)):Error(s(310));xe=o,o={memoizedState:xe.memoizedState,baseState:xe.baseState,baseQueue:xe.baseQueue,queue:xe.queue,next:null},Qe===null?Kt.memoizedState=Qe=o:Qe=Qe.next=o}return Qe}var Ed;Ed=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}};function Ou(o){var c=Du;return Du+=1,al===null&&(al=[]),o=Qw(al,o,c),c=Kt,(Qe===null?c.memoizedState:Qe.next)===null&&(c=c.alternate,R.H=c===null||c.memoizedState===null?Ui:zr),o}function Ad(o){if(o!==null&&typeof o=="object"){if(typeof o.then=="function")return Ou(o);if(o.$$typeof===y)return Mn(o)}throw Error(s(438,String(o)))}function jg(o){var c=null,d=Kt.updateQueue;if(d!==null&&(c=d.memoCache),c==null){var g=Kt.alternate;g!==null&&(g=g.updateQueue,g!==null&&(g=g.memoCache,g!=null&&(c={data:g.data.map(function(x){return x.slice()}),index:0})))}if(c==null&&(c={data:[],index:0}),d===null&&(d=Ed(),Kt.updateQueue=d),d.memoCache=c,d=c.data[c.index],d===void 0)for(d=c.data[c.index]=Array(o),g=0;g<o;g++)d[g]=T;return c.index++,d}function sr(o,c){return typeof c=="function"?c(o):c}function Rd(o){var c=Je();return Xg(c,xe,o)}function Xg(o,c,d){var g=o.queue;if(g===null)throw Error(s(311));g.lastRenderedReducer=d;var x=o.baseQueue,N=g.pending;if(N!==null){if(x!==null){var E=x.next;x.next=N.next,N.next=E}c.baseQueue=x=N,g.pending=null}if(N=o.baseState,x===null)o.memoizedState=N;else{c=x.next;var L=E=null,V=null,J=c,pt=!1;do{var vt=J.lane&-536870913;if(vt!==J.lane?(le&vt)===vt:(Lr&vt)===vt){var ct=J.revertLane;if(ct===0)V!==null&&(V=V.next={lane:0,revertLane:0,action:J.action,hasEagerState:J.hasEagerState,eagerState:J.eagerState,next:null}),vt===el&&(pt=!0);else if((Lr&ct)===ct){J=J.next,ct===el&&(pt=!0);continue}else vt={lane:0,revertLane:J.revertLane,action:J.action,hasEagerState:J.hasEagerState,eagerState:J.eagerState,next:null},V===null?(L=V=vt,E=N):V=V.next=vt,Kt.lanes|=ct,qr|=ct;vt=J.action,Pi&&d(N,vt),N=J.hasEagerState?J.eagerState:d(N,vt)}else ct={lane:vt,revertLane:J.revertLane,action:J.action,hasEagerState:J.hasEagerState,eagerState:J.eagerState,next:null},V===null?(L=V=ct,E=N):V=V.next=ct,Kt.lanes|=vt,qr|=vt;J=J.next}while(J!==null&&J!==c);if(V===null?E=N:V.next=L,!Ns(N,o.memoizedState)&&(xn=!0,pt&&(d=nl,d!==null)))throw d;o.memoizedState=N,o.baseState=E,o.baseQueue=V,g.lastRenderedState=N}return x===null&&(g.lanes=0),[o.memoizedState,g.dispatch]}function Kg(o){var c=Je(),d=c.queue;if(d===null)throw Error(s(311));d.lastRenderedReducer=o;var g=d.dispatch,x=d.pending,N=c.memoizedState;if(x!==null){d.pending=null;var E=x=x.next;do N=o(N,E.action),E=E.next;while(E!==x);Ns(N,c.memoizedState)||(xn=!0),c.memoizedState=N,c.baseQueue===null&&(c.baseState=N),d.lastRenderedState=N}return[N,g]}function cS(o,c,d){var g=Kt,x=Je(),N=he;if(N){if(d===void 0)throw Error(s(407));d=d()}else d=c();var E=!Ns((xe||x).memoizedState,d);if(E&&(x.memoizedState=d,xn=!0),x=x.queue,Qg(fS.bind(null,g,x,o),[o]),x.getSnapshot!==c||E||Qe!==null&&Qe.memoizedState.tag&1){if(g.flags|=2048,rl(9,dS.bind(null,g,x,d,c),{destroy:void 0},null),$e===null)throw Error(s(349));N||(Lr&60)!==0||hS(g,c,d)}return d}function hS(o,c,d){o.flags|=16384,o={getSnapshot:c,value:d},c=Kt.updateQueue,c===null?(c=Ed(),Kt.updateQueue=c,c.stores=[o]):(d=c.stores,d===null?c.stores=[o]:d.push(o))}function dS(o,c,d,g){c.value=d,c.getSnapshot=g,pS(c)&&mS(o)}function fS(o,c,d){return d(function(){pS(c)&&mS(o)})}function pS(o){var c=o.getSnapshot;o=o.value;try{var d=c();return!Ns(o,d)}catch{return!0}}function mS(o){var c=Or(o,2);c!==null&&Zn(c,o,2)}function Yg(o){var c=is();if(typeof o=="function"){var d=o;if(o=d(),Pi){Ar(!0);try{d()}finally{Ar(!1)}}}return c.memoizedState=c.baseState=o,c.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:sr,lastRenderedState:o},c}function gS(o,c,d,g){return o.baseState=d,Xg(o,xe,typeof g=="function"?g:sr)}function XO(o,c,d,g,x){if(_d(o))throw Error(s(485));if(o=c.action,o!==null){var N={payload:x,action:o,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(E){N.listeners.push(E)}};R.T!==null?d(!0):N.isTransition=!1,g(N),d=c.pending,d===null?(N.next=c.pending=N,yS(c,N)):(N.next=d.next,c.pending=d.next=N)}}function yS(o,c){var d=c.action,g=c.payload,x=o.state;if(c.isTransition){var N=R.T,E={};R.T=E;try{var L=d(x,g),V=R.S;V!==null&&V(E,L),bS(o,c,L)}catch(J){Zg(o,c,J)}finally{R.T=N}}else try{N=d(x,g),bS(o,c,N)}catch(J){Zg(o,c,J)}}function bS(o,c,d){d!==null&&typeof d=="object"&&typeof d.then=="function"?d.then(function(g){xS(o,c,g)},function(g){return Zg(o,c,g)}):xS(o,c,d)}function xS(o,c,d){c.status="fulfilled",c.value=d,vS(c),o.state=d,c=o.pending,c!==null&&(d=c.next,d===c?o.pending=null:(d=d.next,c.next=d,yS(o,d)))}function Zg(o,c,d){var g=o.pending;if(o.pending=null,g!==null){g=g.next;do c.status="rejected",c.reason=d,vS(c),c=c.next;while(c!==g)}o.action=null}function vS(o){o=o.listeners;for(var c=0;c<o.length;c++)(0,o[c])()}function wS(o,c){return c}function SS(o,c){if(he){var d=$e.formState;if(d!==null){t:{var g=Kt;if(he){if(An){e:{for(var x=An,N=Da;x.nodeType!==8;){if(!N){x=null;break e}if(x=ya(x.nextSibling),x===null){x=null;break e}}N=x.data,x=N==="F!"||N==="F"?x:null}if(x){An=ya(x.nextSibling),g=x.data==="F!";break t}}Mi(g)}g=!1}g&&(c=d[0])}}return d=is(),d.memoizedState=d.baseState=c,g={pending:null,lanes:0,dispatch:null,lastRenderedReducer:wS,lastRenderedState:c},d.queue=g,d=VS.bind(null,Kt,g),g.dispatch=d,g=Yg(!1),N=sy.bind(null,Kt,!1,g.queue),g=is(),x={state:c,dispatch:null,action:o,pending:null},g.queue=x,d=XO.bind(null,Kt,x,N,d),x.dispatch=d,g.memoizedState=o,[c,d,!1]}function NS(o){var c=Je();return CS(c,xe,o)}function CS(o,c,d){c=Xg(o,c,wS)[0],o=Rd(sr)[0],c=typeof c=="object"&&c!==null&&typeof c.then=="function"?Ou(c):c;var g=Je(),x=g.queue,N=x.dispatch;return d!==g.memoizedState&&(Kt.flags|=2048,rl(9,KO.bind(null,x,d),{destroy:void 0},null)),[c,N,o]}function KO(o,c){o.action=c}function TS(o){var c=Je(),d=xe;if(d!==null)return CS(c,d,o);Je(),c=c.memoizedState,d=Je();var g=d.queue.dispatch;return d.memoizedState=o,[c,g,!1]}function rl(o,c,d,g){return o={tag:o,create:c,inst:d,deps:g,next:null},c=Kt.updateQueue,c===null&&(c=Ed(),Kt.updateQueue=c),d=c.lastEffect,d===null?c.lastEffect=o.next=o:(g=d.next,d.next=o,o.next=g,c.lastEffect=o),o}function $S(){return Je().memoizedState}function Dd(o,c,d,g){var x=is();Kt.flags|=o,x.memoizedState=rl(1|c,d,{destroy:void 0},g===void 0?null:g)}function Od(o,c,d,g){var x=Je();g=g===void 0?null:g;var N=x.memoizedState.inst;xe!==null&&g!==null&&Ug(g,xe.memoizedState.deps)?x.memoizedState=rl(c,d,N,g):(Kt.flags|=o,x.memoizedState=rl(1|c,d,N,g))}function kS(o,c){Dd(8390656,8,o,c)}function Qg(o,c){Od(2048,8,o,c)}function IS(o,c){return Od(4,2,o,c)}function ES(o,c){return Od(4,4,o,c)}function AS(o,c){if(typeof c=="function"){o=o();var d=c(o);return function(){typeof d=="function"?d():c(null)}}if(c!=null)return o=o(),c.current=o,function(){c.current=null}}function RS(o,c,d){d=d!=null?d.concat([o]):null,Od(4,4,AS.bind(null,c,o),d)}function Jg(){}function DS(o,c){var d=Je();c=c===void 0?null:c;var g=d.memoizedState;return c!==null&&Ug(c,g[1])?g[0]:(d.memoizedState=[o,c],o)}function OS(o,c){var d=Je();c=c===void 0?null:c;var g=d.memoizedState;if(c!==null&&Ug(c,g[1]))return g[0];if(g=o(),Pi){Ar(!0);try{o()}finally{Ar(!1)}}return d.memoizedState=[g,c],g}function ty(o,c,d){return d===void 0||(Lr&1073741824)!==0?o.memoizedState=c:(o.memoizedState=d,o=FN(),Kt.lanes|=o,qr|=o,d)}function _S(o,c,d,g){return Ns(d,c)?d:tl.current!==null?(o=ty(o,d,g),Ns(o,c)||(xn=!0),o):(Lr&42)===0?(xn=!0,o.memoizedState=d):(o=FN(),Kt.lanes|=o,qr|=o,c)}function FS(o,c,d,g,x){var N=ut.p;ut.p=N!==0&&8>N?N:8;var E=R.T,L={};R.T=L,sy(o,!1,c,d);try{var V=x(),J=R.S;if(J!==null&&J(L,V),V!==null&&typeof V=="object"&&typeof V.then=="function"){var pt=HO(V,g);_u(o,c,pt,ks(o))}else _u(o,c,g,ks(o))}catch(vt){_u(o,c,{then:function(){},status:"rejected",reason:vt},ks())}finally{ut.p=N,R.T=E}}function YO(){}function ey(o,c,d,g){if(o.tag!==5)throw Error(s(476));var x=LS(o).queue;FS(o,x,c,mt,d===null?YO:function(){return zS(o),d(g)})}function LS(o){var c=o.memoizedState;if(c!==null)return c;c={memoizedState:mt,baseState:mt,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:sr,lastRenderedState:mt},next:null};var d={};return c.next={memoizedState:d,baseState:d,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:sr,lastRenderedState:d},next:null},o.memoizedState=c,o=o.alternate,o!==null&&(o.memoizedState=c),c}function zS(o){var c=LS(o).next.queue;_u(o,c,{},ks())}function ny(){return Mn(tc)}function MS(){return Je().memoizedState}function BS(){return Je().memoizedState}function ZO(o){for(var c=o.return;c!==null;){switch(c.tag){case 24:case 3:var d=ks();o=Vr(d);var g=Pr(c,o,d);g!==null&&(Zn(g,c,d),zu(g,c,d)),c={cache:Bg()},o.payload=c;return}c=c.return}}function QO(o,c,d){var g=ks();d={lane:g,revertLane:0,action:d,hasEagerState:!1,eagerState:null,next:null},_d(o)?PS(c,d):(d=Dg(o,c,d,g),d!==null&&(Zn(d,o,g),US(d,c,g)))}function VS(o,c,d){var g=ks();_u(o,c,d,g)}function _u(o,c,d,g){var x={lane:g,revertLane:0,action:d,hasEagerState:!1,eagerState:null,next:null};if(_d(o))PS(c,x);else{var N=o.alternate;if(o.lanes===0&&(N===null||N.lanes===0)&&(N=c.lastRenderedReducer,N!==null))try{var E=c.lastRenderedState,L=N(E,d);if(x.hasEagerState=!0,x.eagerState=L,Ns(L,E))return yd(o,c,x,0),$e===null&&gd(),!1}catch{}finally{}if(d=Dg(o,c,x,g),d!==null)return Zn(d,o,g),US(d,c,g),!0}return!1}function sy(o,c,d,g){if(g={lane:2,revertLane:qy(),action:g,hasEagerState:!1,eagerState:null,next:null},_d(o)){if(c)throw Error(s(479))}else c=Dg(o,d,g,2),c!==null&&Zn(c,o,2)}function _d(o){var c=o.alternate;return o===Kt||c!==null&&c===Kt}function PS(o,c){sl=kd=!0;var d=o.pending;d===null?c.next=c:(c.next=d.next,d.next=c),o.pending=c}function US(o,c,d){if((d&4194176)!==0){var g=c.lanes;g&=o.pendingLanes,d|=g,c.lanes=d,Jv(o,d)}}var _a={readContext:Mn,use:Ad,useCallback:Ye,useContext:Ye,useEffect:Ye,useImperativeHandle:Ye,useLayoutEffect:Ye,useInsertionEffect:Ye,useMemo:Ye,useReducer:Ye,useRef:Ye,useState:Ye,useDebugValue:Ye,useDeferredValue:Ye,useTransition:Ye,useSyncExternalStore:Ye,useId:Ye};_a.useCacheRefresh=Ye,_a.useMemoCache=Ye,_a.useHostTransitionStatus=Ye,_a.useFormState=Ye,_a.useActionState=Ye,_a.useOptimistic=Ye;var Ui={readContext:Mn,use:Ad,useCallback:function(o,c){return is().memoizedState=[o,c===void 0?null:c],o},useContext:Mn,useEffect:kS,useImperativeHandle:function(o,c,d){d=d!=null?d.concat([o]):null,Dd(4194308,4,AS.bind(null,c,o),d)},useLayoutEffect:function(o,c){return Dd(4194308,4,o,c)},useInsertionEffect:function(o,c){Dd(4,2,o,c)},useMemo:function(o,c){var d=is();c=c===void 0?null:c;var g=o();if(Pi){Ar(!0);try{o()}finally{Ar(!1)}}return d.memoizedState=[g,c],g},useReducer:function(o,c,d){var g=is();if(d!==void 0){var x=d(c);if(Pi){Ar(!0);try{d(c)}finally{Ar(!1)}}}else x=c;return g.memoizedState=g.baseState=x,o={pending:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:x},g.queue=o,o=o.dispatch=QO.bind(null,Kt,o),[g.memoizedState,o]},useRef:function(o){var c=is();return o={current:o},c.memoizedState=o},useState:function(o){o=Yg(o);var c=o.queue,d=VS.bind(null,Kt,c);return c.dispatch=d,[o.memoizedState,d]},useDebugValue:Jg,useDeferredValue:function(o,c){var d=is();return ty(d,o,c)},useTransition:function(){var o=Yg(!1);return o=FS.bind(null,Kt,o.queue,!0,!1),is().memoizedState=o,[!1,o]},useSyncExternalStore:function(o,c,d){var g=Kt,x=is();if(he){if(d===void 0)throw Error(s(407));d=d()}else{if(d=c(),$e===null)throw Error(s(349));(le&60)!==0||hS(g,c,d)}x.memoizedState=d;var N={value:d,getSnapshot:c};return x.queue=N,kS(fS.bind(null,g,N,o),[o]),g.flags|=2048,rl(9,dS.bind(null,g,N,d,c),{destroy:void 0},null),d},useId:function(){var o=is(),c=$e.identifierPrefix;if(he){var d=er,g=tr;d=(g&~(1<<32-Ss(g)-1)).toString(32)+d,c=":"+c+"R"+d,d=Id++,0<d&&(c+="H"+d.toString(32)),c+=":"}else d=qO++,c=":"+c+"r"+d.toString(32)+":";return o.memoizedState=c},useCacheRefresh:function(){return is().memoizedState=ZO.bind(null,Kt)}};Ui.useMemoCache=jg,Ui.useHostTransitionStatus=ny,Ui.useFormState=SS,Ui.useActionState=SS,Ui.useOptimistic=function(o){var c=is();c.memoizedState=c.baseState=o;var d={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return c.queue=d,c=sy.bind(null,Kt,!0,d),d.dispatch=c,[o,c]};var zr={readContext:Mn,use:Ad,useCallback:DS,useContext:Mn,useEffect:Qg,useImperativeHandle:RS,useInsertionEffect:IS,useLayoutEffect:ES,useMemo:OS,useReducer:Rd,useRef:$S,useState:function(){return Rd(sr)},useDebugValue:Jg,useDeferredValue:function(o,c){var d=Je();return _S(d,xe.memoizedState,o,c)},useTransition:function(){var o=Rd(sr)[0],c=Je().memoizedState;return[typeof o=="boolean"?o:Ou(o),c]},useSyncExternalStore:cS,useId:MS};zr.useCacheRefresh=BS,zr.useMemoCache=jg,zr.useHostTransitionStatus=ny,zr.useFormState=NS,zr.useActionState=NS,zr.useOptimistic=function(o,c){var d=Je();return gS(d,xe,o,c)};var Wi={readContext:Mn,use:Ad,useCallback:DS,useContext:Mn,useEffect:Qg,useImperativeHandle:RS,useInsertionEffect:IS,useLayoutEffect:ES,useMemo:OS,useReducer:Kg,useRef:$S,useState:function(){return Kg(sr)},useDebugValue:Jg,useDeferredValue:function(o,c){var d=Je();return xe===null?ty(d,o,c):_S(d,xe.memoizedState,o,c)},useTransition:function(){var o=Kg(sr)[0],c=Je().memoizedState;return[typeof o=="boolean"?o:Ou(o),c]},useSyncExternalStore:cS,useId:MS};Wi.useCacheRefresh=BS,Wi.useMemoCache=jg,Wi.useHostTransitionStatus=ny,Wi.useFormState=TS,Wi.useActionState=TS,Wi.useOptimistic=function(o,c){var d=Je();return xe!==null?gS(d,xe,o,c):(d.baseState=o,[o,d.queue.dispatch])};function ay(o,c,d,g){c=o.memoizedState,d=d(g,c),d=d==null?c:_({},c,d),o.memoizedState=d,o.lanes===0&&(o.updateQueue.baseState=d)}var ry={isMounted:function(o){return(o=o._reactInternals)?Y(o)===o:!1},enqueueSetState:function(o,c,d){o=o._reactInternals;var g=ks(),x=Vr(g);x.payload=c,d!=null&&(x.callback=d),c=Pr(o,x,g),c!==null&&(Zn(c,o,g),zu(c,o,g))},enqueueReplaceState:function(o,c,d){o=o._reactInternals;var g=ks(),x=Vr(g);x.tag=1,x.payload=c,d!=null&&(x.callback=d),c=Pr(o,x,g),c!==null&&(Zn(c,o,g),zu(c,o,g))},enqueueForceUpdate:function(o,c){o=o._reactInternals;var d=ks(),g=Vr(d);g.tag=2,c!=null&&(g.callback=c),c=Pr(o,g,d),c!==null&&(Zn(c,o,d),zu(c,o,d))}};function WS(o,c,d,g,x,N,E){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(g,N,E):c.prototype&&c.prototype.isPureReactComponent?!wu(d,g)||!wu(x,N):!0}function GS(o,c,d,g){o=c.state,typeof c.componentWillReceiveProps=="function"&&c.componentWillReceiveProps(d,g),typeof c.UNSAFE_componentWillReceiveProps=="function"&&c.UNSAFE_componentWillReceiveProps(d,g),c.state!==o&&ry.enqueueReplaceState(c,c.state,null)}function Gi(o,c){var d=c;if("ref"in c){d={};for(var g in c)g!=="ref"&&(d[g]=c[g])}if(o=o.defaultProps){d===c&&(d=_({},d));for(var x in o)d[x]===void 0&&(d[x]=o[x])}return d}var Fd=typeof reportError=="function"?reportError:function(o){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var c=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof o=="object"&&o!==null&&typeof o.message=="string"?String(o.message):String(o),error:o});if(!window.dispatchEvent(c))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",o);return}console.error(o)};function HS(o){Fd(o)}function qS(o){console.error(o)}function jS(o){Fd(o)}function Ld(o,c){try{var d=o.onUncaughtError;d(c.value,{componentStack:c.stack})}catch(g){setTimeout(function(){throw g})}}function XS(o,c,d){try{var g=o.onCaughtError;g(d.value,{componentStack:d.stack,errorBoundary:c.tag===1?c.stateNode:null})}catch(x){setTimeout(function(){throw x})}}function iy(o,c,d){return d=Vr(d),d.tag=3,d.payload={element:null},d.callback=function(){Ld(o,c)},d}function KS(o){return o=Vr(o),o.tag=3,o}function YS(o,c,d,g){var x=d.type.getDerivedStateFromError;if(typeof x=="function"){var N=g.value;o.payload=function(){return x(N)},o.callback=function(){XS(c,d,g)}}var E=d.stateNode;E!==null&&typeof E.componentDidCatch=="function"&&(o.callback=function(){XS(c,d,g),typeof x!="function"&&(jr===null?jr=new Set([this]):jr.add(this));var L=g.stack;this.componentDidCatch(g.value,{componentStack:L!==null?L:""})})}function JO(o,c,d,g,x){if(d.flags|=32768,g!==null&&typeof g=="object"&&typeof g.then=="function"){if(c=d.alternate,c!==null&&Lu(c,d,x,!0),d=Ps.current,d!==null){switch(d.tag){case 13:return Oa===null?Py():d.alternate===null&&Ue===0&&(Ue=3),d.flags&=-257,d.flags|=65536,d.lanes=x,g===Lg?d.flags|=16384:(c=d.updateQueue,c===null?d.updateQueue=new Set([g]):c.add(g),Wy(o,g,x)),!1;case 22:return d.flags|=65536,g===Lg?d.flags|=16384:(c=d.updateQueue,c===null?(c={transitions:null,markerInstances:null,retryQueue:new Set([g])},d.updateQueue=c):(d=c.retryQueue,d===null?c.retryQueue=new Set([g]):d.add(g)),Wy(o,g,x)),!1}throw Error(s(435,d.tag))}return Wy(o,g,x),Py(),!1}if(he)return c=Ps.current,c!==null?((c.flags&65536)===0&&(c.flags|=256),c.flags|=65536,c.lanes=x,g!==Fg&&(o=Error(s(422),{cause:g}),Tu(Ms(o,d)))):(g!==Fg&&(c=Error(s(423),{cause:g}),Tu(Ms(c,d))),o=o.current.alternate,o.flags|=65536,x&=-x,o.lanes|=x,g=Ms(g,d),x=iy(o.stateNode,g,x),wy(o,x),Ue!==4&&(Ue=2)),!1;var N=Error(s(520),{cause:g});if(N=Ms(N,d),Hu===null?Hu=[N]:Hu.push(N),Ue!==4&&(Ue=2),c===null)return!0;g=Ms(g,d),d=c;do{switch(d.tag){case 3:return d.flags|=65536,o=x&-x,d.lanes|=o,o=iy(d.stateNode,g,o),wy(d,o),!1;case 1:if(c=d.type,N=d.stateNode,(d.flags&128)===0&&(typeof c.getDerivedStateFromError=="function"||N!==null&&typeof N.componentDidCatch=="function"&&(jr===null||!jr.has(N))))return d.flags|=65536,x&=-x,d.lanes|=x,x=KS(x),YS(x,o,d,g),wy(d,x),!1}d=d.return}while(d!==null);return!1}var ZS=Error(s(461)),xn=!1;function Rn(o,c,d,g){c.child=o===null?nS(c,null,d,g):Bi(c,o.child,d,g)}function QS(o,c,d,g,x){d=d.render;var N=c.ref;if("ref"in g){var E={};for(var L in g)L!=="ref"&&(E[L]=g[L])}else E=g;return qi(c),g=Wg(o,c,d,E,N,x),L=Gg(),o!==null&&!xn?(Hg(o,c,x),ar(o,c,x)):(he&&L&&Og(c),c.flags|=1,Rn(o,c,g,x),c.child)}function JS(o,c,d,g,x){if(o===null){var N=d.type;return typeof N=="function"&&!Ey(N)&&N.defaultProps===void 0&&d.compare===null?(c.tag=15,c.type=N,tN(o,c,N,g,x)):(o=Pd(d.type,null,g,c,c.mode,x),o.ref=c.ref,o.return=c,c.child=o)}if(N=o.child,!my(o,x)){var E=N.memoizedProps;if(d=d.compare,d=d!==null?d:wu,d(E,g)&&o.ref===c.ref)return ar(o,c,x)}return c.flags|=1,o=Hr(N,g),o.ref=c.ref,o.return=c,c.child=o}function tN(o,c,d,g,x){if(o!==null){var N=o.memoizedProps;if(wu(N,g)&&o.ref===c.ref)if(xn=!1,c.pendingProps=g=N,my(o,x))(o.flags&131072)!==0&&(xn=!0);else return c.lanes=o.lanes,ar(o,c,x)}return oy(o,c,d,g,x)}function eN(o,c,d){var g=c.pendingProps,x=g.children,N=(c.stateNode._pendingVisibility&2)!==0,E=o!==null?o.memoizedState:null;if(Fu(o,c),g.mode==="hidden"||N){if((c.flags&128)!==0){if(g=E!==null?E.baseLanes|d:d,o!==null){for(x=c.child=o.child,N=0;x!==null;)N=N|x.lanes|x.childLanes,x=x.sibling;c.childLanes=N&~g}else c.childLanes=0,c.child=null;return nN(o,c,g,d)}if((d&536870912)!==0)c.memoizedState={baseLanes:0,cachePool:null},o!==null&&$d(c,E!==null?E.cachePool:null),E!==null?sS(c,E):zg(),aS(c);else return c.lanes=c.childLanes=536870912,nN(o,c,E!==null?E.baseLanes|d:d,d)}else E!==null?($d(c,E.cachePool),sS(c,E),Fr(),c.memoizedState=null):(o!==null&&$d(c,null),zg(),Fr());return Rn(o,c,x,d),c.child}function nN(o,c,d,g){var x=Pg();return x=x===null?null:{parent:dn._currentValue,pool:x},c.memoizedState={baseLanes:d,cachePool:x},o!==null&&$d(c,null),zg(),aS(c),o!==null&&Lu(o,c,g,!0),null}function Fu(o,c){var d=c.ref;if(d===null)o!==null&&o.ref!==null&&(c.flags|=2097664);else{if(typeof d!="function"&&typeof d!="object")throw Error(s(284));(o===null||o.ref!==d)&&(c.flags|=2097664)}}function oy(o,c,d,g,x){return qi(c),d=Wg(o,c,d,g,void 0,x),g=Gg(),o!==null&&!xn?(Hg(o,c,x),ar(o,c,x)):(he&&g&&Og(c),c.flags|=1,Rn(o,c,d,x),c.child)}function sN(o,c,d,g,x,N){return qi(c),c.updateQueue=null,d=uS(c,g,d,x),lS(o),g=Gg(),o!==null&&!xn?(Hg(o,c,N),ar(o,c,N)):(he&&g&&Og(c),c.flags|=1,Rn(o,c,d,N),c.child)}function aN(o,c,d,g,x){if(qi(c),c.stateNode===null){var N=Yo,E=d.contextType;typeof E=="object"&&E!==null&&(N=Mn(E)),N=new d(g,N),c.memoizedState=N.state!==null&&N.state!==void 0?N.state:null,N.updater=ry,c.stateNode=N,N._reactInternals=c,N=c.stateNode,N.props=g,N.state=c.memoizedState,N.refs={},xy(c),E=d.contextType,N.context=typeof E=="object"&&E!==null?Mn(E):Yo,N.state=c.memoizedState,E=d.getDerivedStateFromProps,typeof E=="function"&&(ay(c,d,E,g),N.state=c.memoizedState),typeof d.getDerivedStateFromProps=="function"||typeof N.getSnapshotBeforeUpdate=="function"||typeof N.UNSAFE_componentWillMount!="function"&&typeof N.componentWillMount!="function"||(E=N.state,typeof N.componentWillMount=="function"&&N.componentWillMount(),typeof N.UNSAFE_componentWillMount=="function"&&N.UNSAFE_componentWillMount(),E!==N.state&&ry.enqueueReplaceState(N,N.state,null),Bu(c,g,N,x),Mu(),N.state=c.memoizedState),typeof N.componentDidMount=="function"&&(c.flags|=4194308),g=!0}else if(o===null){N=c.stateNode;var L=c.memoizedProps,V=Gi(d,L);N.props=V;var J=N.context,pt=d.contextType;E=Yo,typeof pt=="object"&&pt!==null&&(E=Mn(pt));var vt=d.getDerivedStateFromProps;pt=typeof vt=="function"||typeof N.getSnapshotBeforeUpdate=="function",L=c.pendingProps!==L,pt||typeof N.UNSAFE_componentWillReceiveProps!="function"&&typeof N.componentWillReceiveProps!="function"||(L||J!==E)&&GS(c,N,g,E),Br=!1;var ct=c.memoizedState;N.state=ct,Bu(c,g,N,x),Mu(),J=c.memoizedState,L||ct!==J||Br?(typeof vt=="function"&&(ay(c,d,vt,g),J=c.memoizedState),(V=Br||WS(c,d,V,g,ct,J,E))?(pt||typeof N.UNSAFE_componentWillMount!="function"&&typeof N.componentWillMount!="function"||(typeof N.componentWillMount=="function"&&N.componentWillMount(),typeof N.UNSAFE_componentWillMount=="function"&&N.UNSAFE_componentWillMount()),typeof N.componentDidMount=="function"&&(c.flags|=4194308)):(typeof N.componentDidMount=="function"&&(c.flags|=4194308),c.memoizedProps=g,c.memoizedState=J),N.props=g,N.state=J,N.context=E,g=V):(typeof N.componentDidMount=="function"&&(c.flags|=4194308),g=!1)}else{N=c.stateNode,vy(o,c),E=c.memoizedProps,pt=Gi(d,E),N.props=pt,vt=c.pendingProps,ct=N.context,J=d.contextType,V=Yo,typeof J=="object"&&J!==null&&(V=Mn(J)),L=d.getDerivedStateFromProps,(J=typeof L=="function"||typeof N.getSnapshotBeforeUpdate=="function")||typeof N.UNSAFE_componentWillReceiveProps!="function"&&typeof N.componentWillReceiveProps!="function"||(E!==vt||ct!==V)&&GS(c,N,g,V),Br=!1,ct=c.memoizedState,N.state=ct,Bu(c,g,N,x),Mu();var ft=c.memoizedState;E!==vt||ct!==ft||Br||o!==null&&o.dependencies!==null&&zd(o.dependencies)?(typeof L=="function"&&(ay(c,d,L,g),ft=c.memoizedState),(pt=Br||WS(c,d,pt,g,ct,ft,V)||o!==null&&o.dependencies!==null&&zd(o.dependencies))?(J||typeof N.UNSAFE_componentWillUpdate!="function"&&typeof N.componentWillUpdate!="function"||(typeof N.componentWillUpdate=="function"&&N.componentWillUpdate(g,ft,V),typeof N.UNSAFE_componentWillUpdate=="function"&&N.UNSAFE_componentWillUpdate(g,ft,V)),typeof N.componentDidUpdate=="function"&&(c.flags|=4),typeof N.getSnapshotBeforeUpdate=="function"&&(c.flags|=1024)):(typeof N.componentDidUpdate!="function"||E===o.memoizedProps&&ct===o.memoizedState||(c.flags|=4),typeof N.getSnapshotBeforeUpdate!="function"||E===o.memoizedProps&&ct===o.memoizedState||(c.flags|=1024),c.memoizedProps=g,c.memoizedState=ft),N.props=g,N.state=ft,N.context=V,g=pt):(typeof N.componentDidUpdate!="function"||E===o.memoizedProps&&ct===o.memoizedState||(c.flags|=4),typeof N.getSnapshotBeforeUpdate!="function"||E===o.memoizedProps&&ct===o.memoizedState||(c.flags|=1024),g=!1)}return N=g,Fu(o,c),g=(c.flags&128)!==0,N||g?(N=c.stateNode,d=g&&typeof d.getDerivedStateFromError!="function"?null:N.render(),c.flags|=1,o!==null&&g?(c.child=Bi(c,o.child,null,x),c.child=Bi(c,null,d,x)):Rn(o,c,d,x),c.memoizedState=N.state,o=c.child):o=ar(o,c,x),o}function rN(o,c,d,g){return Cu(),c.flags|=256,Rn(o,c,d,g),c.child}var ly={dehydrated:null,treeContext:null,retryLane:0};function uy(o){return{baseLanes:o,cachePool:oS()}}function cy(o,c,d){return o=o!==null?o.childLanes&~d:0,c&&(o|=Hs),o}function iN(o,c,d){var g=c.pendingProps,x=!1,N=(c.flags&128)!==0,E;if((E=N)||(E=o!==null&&o.memoizedState===null?!1:(hn.current&2)!==0),E&&(x=!0,c.flags&=-129),E=(c.flags&32)!==0,c.flags&=-33,o===null){if(he){if(x?_r(c):Fr(),he){var L=An,V;if(V=L){t:{for(V=L,L=Da;V.nodeType!==8;){if(!L){L=null;break t}if(V=ya(V.nextSibling),V===null){L=null;break t}}L=V}L!==null?(c.memoizedState={dehydrated:L,treeContext:Li!==null?{id:tr,overflow:er}:null,retryLane:536870912},V=Gs(18,null,null,0),V.stateNode=L,V.return=c,c.child=V,Yn=c,An=null,V=!0):V=!1}V||Mi(c)}if(L=c.memoizedState,L!==null&&(L=L.dehydrated,L!==null))return L.data==="$!"?c.lanes=16:c.lanes=536870912,null;nr(c)}return L=g.children,g=g.fallback,x?(Fr(),x=c.mode,L=dy({mode:"hidden",children:L},x),g=Xi(g,x,d,null),L.return=c,g.return=c,L.sibling=g,c.child=L,x=c.child,x.memoizedState=uy(d),x.childLanes=cy(o,E,d),c.memoizedState=ly,g):(_r(c),hy(c,L))}if(V=o.memoizedState,V!==null&&(L=V.dehydrated,L!==null)){if(N)c.flags&256?(_r(c),c.flags&=-257,c=fy(o,c,d)):c.memoizedState!==null?(Fr(),c.child=o.child,c.flags|=128,c=null):(Fr(),x=g.fallback,L=c.mode,g=dy({mode:"visible",children:g.children},L),x=Xi(x,L,d,null),x.flags|=2,g.return=c,x.return=c,g.sibling=x,c.child=g,Bi(c,o.child,null,d),g=c.child,g.memoizedState=uy(d),g.childLanes=cy(o,E,d),c.memoizedState=ly,c=x);else if(_r(c),L.data==="$!"){if(E=L.nextSibling&&L.nextSibling.dataset,E)var J=E.dgst;E=J,g=Error(s(419)),g.stack="",g.digest=E,Tu({value:g,source:null,stack:null}),c=fy(o,c,d)}else if(xn||Lu(o,c,d,!1),E=(d&o.childLanes)!==0,xn||E){if(E=$e,E!==null){if(g=d&-d,(g&42)!==0)g=1;else switch(g){case 2:g=1;break;case 8:g=4;break;case 32:g=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:g=64;break;case 268435456:g=134217728;break;default:g=0}if(g=(g&(E.suspendedLanes|d))!==0?0:g,g!==0&&g!==V.retryLane)throw V.retryLane=g,Or(o,g),Zn(E,o,g),ZS}L.data==="$?"||Py(),c=fy(o,c,d)}else L.data==="$?"?(c.flags|=128,c.child=o.child,c=p_.bind(null,o),L._reactRetry=c,c=null):(o=V.treeContext,An=ya(L.nextSibling),Yn=c,he=!0,ma=null,Da=!1,o!==null&&(Bs[Vs++]=tr,Bs[Vs++]=er,Bs[Vs++]=Li,tr=o.id,er=o.overflow,Li=c),c=hy(c,g.children),c.flags|=4096);return c}return x?(Fr(),x=g.fallback,L=c.mode,V=o.child,J=V.sibling,g=Hr(V,{mode:"hidden",children:g.children}),g.subtreeFlags=V.subtreeFlags&31457280,J!==null?x=Hr(J,x):(x=Xi(x,L,d,null),x.flags|=2),x.return=c,g.return=c,g.sibling=x,c.child=g,g=x,x=c.child,L=o.child.memoizedState,L===null?L=uy(d):(V=L.cachePool,V!==null?(J=dn._currentValue,V=V.parent!==J?{parent:J,pool:J}:V):V=oS(),L={baseLanes:L.baseLanes|d,cachePool:V}),x.memoizedState=L,x.childLanes=cy(o,E,d),c.memoizedState=ly,g):(_r(c),d=o.child,o=d.sibling,d=Hr(d,{mode:"visible",children:g.children}),d.return=c,d.sibling=null,o!==null&&(E=c.deletions,E===null?(c.deletions=[o],c.flags|=16):E.push(o)),c.child=d,c.memoizedState=null,d)}function hy(o,c){return c=dy({mode:"visible",children:c},o.mode),c.return=o,o.child=c}function dy(o,c){return DN(o,c,0,null)}function fy(o,c,d){return Bi(c,o.child,null,d),o=hy(c,c.pendingProps.children),o.flags|=2,c.memoizedState=null,o}function oN(o,c,d){o.lanes|=c;var g=o.alternate;g!==null&&(g.lanes|=c),yy(o.return,c,d)}function py(o,c,d,g,x){var N=o.memoizedState;N===null?o.memoizedState={isBackwards:c,rendering:null,renderingStartTime:0,last:g,tail:d,tailMode:x}:(N.isBackwards=c,N.rendering=null,N.renderingStartTime=0,N.last=g,N.tail=d,N.tailMode=x)}function lN(o,c,d){var g=c.pendingProps,x=g.revealOrder,N=g.tail;if(Rn(o,c,g.children,d),g=hn.current,(g&2)!==0)g=g&1|2,c.flags|=128;else{if(o!==null&&(o.flags&128)!==0)t:for(o=c.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&oN(o,d,c);else if(o.tag===19)oN(o,d,c);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===c)break t;for(;o.sibling===null;){if(o.return===null||o.return===c)break t;o=o.return}o.sibling.return=o.return,o=o.sibling}g&=1}switch(It(hn,g),x){case"forwards":for(d=c.child,x=null;d!==null;)o=d.alternate,o!==null&&Td(o)===null&&(x=d),d=d.sibling;d=x,d===null?(x=c.child,c.child=null):(x=d.sibling,d.sibling=null),py(c,!1,x,d,N);break;case"backwards":for(d=null,x=c.child,c.child=null;x!==null;){if(o=x.alternate,o!==null&&Td(o)===null){c.child=x;break}o=x.sibling,x.sibling=d,d=x,x=o}py(c,!0,d,null,N);break;case"together":py(c,!1,null,null,void 0);break;default:c.memoizedState=null}return c.child}function ar(o,c,d){if(o!==null&&(c.dependencies=o.dependencies),qr|=c.lanes,(d&c.childLanes)===0)if(o!==null){if(Lu(o,c,d,!1),(d&c.childLanes)===0)return null}else return null;if(o!==null&&c.child!==o.child)throw Error(s(153));if(c.child!==null){for(o=c.child,d=Hr(o,o.pendingProps),c.child=d,d.return=c;o.sibling!==null;)o=o.sibling,d=d.sibling=Hr(o,o.pendingProps),d.return=c;d.sibling=null}return c.child}function my(o,c){return(o.lanes&c)!==0?!0:(o=o.dependencies,!!(o!==null&&zd(o)))}function t_(o,c,d){switch(c.tag){case 3:ce(c,c.stateNode.containerInfo),Mr(c,dn,o.memoizedState.cache),Cu();break;case 27:case 5:be(c);break;case 4:ce(c,c.stateNode.containerInfo);break;case 10:Mr(c,c.type,c.memoizedProps.value);break;case 13:var g=c.memoizedState;if(g!==null)return g.dehydrated!==null?(_r(c),c.flags|=128,null):(d&c.child.childLanes)!==0?iN(o,c,d):(_r(c),o=ar(o,c,d),o!==null?o.sibling:null);_r(c);break;case 19:var x=(o.flags&128)!==0;if(g=(d&c.childLanes)!==0,g||(Lu(o,c,d,!1),g=(d&c.childLanes)!==0),x){if(g)return lN(o,c,d);c.flags|=128}if(x=c.memoizedState,x!==null&&(x.rendering=null,x.tail=null,x.lastEffect=null),It(hn,hn.current),g)break;return null;case 22:case 23:return c.lanes=0,eN(o,c,d);case 24:Mr(c,dn,o.memoizedState.cache)}return ar(o,c,d)}function uN(o,c,d){if(o!==null)if(o.memoizedProps!==c.pendingProps)xn=!0;else{if(!my(o,d)&&(c.flags&128)===0)return xn=!1,t_(o,c,d);xn=(o.flags&131072)!==0}else xn=!1,he&&(c.flags&1048576)!==0&&jw(c,vd,c.index);switch(c.lanes=0,c.tag){case 16:t:{o=c.pendingProps;var g=c.elementType,x=g._init;if(g=x(g._payload),c.type=g,typeof g=="function")Ey(g)?(o=Gi(g,o),c.tag=1,c=aN(null,c,g,o,d)):(c.tag=0,c=oy(null,c,g,o,d));else{if(g!=null){if(x=g.$$typeof,x===b){c.tag=11,c=QS(null,c,g,o,d);break t}else if(x===S){c.tag=14,c=JS(null,c,g,o,d);break t}}throw c=B(g)||g,Error(s(306,c,""))}}return c;case 0:return oy(o,c,c.type,c.pendingProps,d);case 1:return g=c.type,x=Gi(g,c.pendingProps),aN(o,c,g,x,d);case 3:t:{if(ce(c,c.stateNode.containerInfo),o===null)throw Error(s(387));var N=c.pendingProps;x=c.memoizedState,g=x.element,vy(o,c),Bu(c,N,null,d);var E=c.memoizedState;if(N=E.cache,Mr(c,dn,N),N!==x.cache&&by(c,[dn],d,!0),Mu(),N=E.element,x.isDehydrated)if(x={element:N,isDehydrated:!1,cache:E.cache},c.updateQueue.baseState=x,c.memoizedState=x,c.flags&256){c=rN(o,c,N,d);break t}else if(N!==g){g=Ms(Error(s(424)),c),Tu(g),c=rN(o,c,N,d);break t}else for(An=ya(c.stateNode.containerInfo.firstChild),Yn=c,he=!0,ma=null,Da=!0,d=nS(c,null,N,d),c.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(Cu(),N===g){c=ar(o,c,d);break t}Rn(o,c,N,d)}c=c.child}return c;case 26:return Fu(o,c),o===null?(d=dC(c.type,null,c.pendingProps,null))?c.memoizedState=d:he||(d=c.type,o=c.pendingProps,g=Jd(ee.current).createElement(d),g[zn]=c,g[as]=o,Dn(g,d,o),bn(g),c.stateNode=g):c.memoizedState=dC(c.type,o.memoizedProps,c.pendingProps,o.memoizedState),null;case 27:return be(c),o===null&&he&&(g=c.stateNode=uC(c.type,c.pendingProps,ee.current),Yn=c,Da=!0,An=ya(g.firstChild)),g=c.pendingProps.children,o!==null||he?Rn(o,c,g,d):c.child=Bi(c,null,g,d),Fu(o,c),c.child;case 5:return o===null&&he&&((x=g=An)&&(g=A_(g,c.type,c.pendingProps,Da),g!==null?(c.stateNode=g,Yn=c,An=ya(g.firstChild),Da=!1,x=!0):x=!1),x||Mi(c)),be(c),x=c.type,N=c.pendingProps,E=o!==null?o.memoizedProps:null,g=N.children,eb(x,N)?g=null:E!==null&&eb(x,E)&&(c.flags|=32),c.memoizedState!==null&&(x=Wg(o,c,jO,null,null,d),tc._currentValue=x),Fu(o,c),Rn(o,c,g,d),c.child;case 6:return o===null&&he&&((o=d=An)&&(d=R_(d,c.pendingProps,Da),d!==null?(c.stateNode=d,Yn=c,An=null,o=!0):o=!1),o||Mi(c)),null;case 13:return iN(o,c,d);case 4:return ce(c,c.stateNode.containerInfo),g=c.pendingProps,o===null?c.child=Bi(c,null,g,d):Rn(o,c,g,d),c.child;case 11:return QS(o,c,c.type,c.pendingProps,d);case 7:return Rn(o,c,c.pendingProps,d),c.child;case 8:return Rn(o,c,c.pendingProps.children,d),c.child;case 12:return Rn(o,c,c.pendingProps.children,d),c.child;case 10:return g=c.pendingProps,Mr(c,c.type,g.value),Rn(o,c,g.children,d),c.child;case 9:return x=c.type._context,g=c.pendingProps.children,qi(c),x=Mn(x),g=g(x),c.flags|=1,Rn(o,c,g,d),c.child;case 14:return JS(o,c,c.type,c.pendingProps,d);case 15:return tN(o,c,c.type,c.pendingProps,d);case 19:return lN(o,c,d);case 22:return eN(o,c,d);case 24:return qi(c),g=Mn(dn),o===null?(x=Pg(),x===null&&(x=$e,N=Bg(),x.pooledCache=N,N.refCount++,N!==null&&(x.pooledCacheLanes|=d),x=N),c.memoizedState={parent:g,cache:x},xy(c),Mr(c,dn,x)):((o.lanes&d)!==0&&(vy(o,c),Bu(c,null,null,d),Mu()),x=o.memoizedState,N=c.memoizedState,x.parent!==g?(x={parent:g,cache:g},c.memoizedState=x,c.lanes===0&&(c.memoizedState=c.updateQueue.baseState=x),Mr(c,dn,g)):(g=N.cache,Mr(c,dn,g),g!==x.cache&&by(c,[dn],d,!0))),Rn(o,c,c.pendingProps.children,d),c.child;case 29:throw c.pendingProps}throw Error(s(156,c.tag))}var gy=wt(null),Hi=null,rr=null;function Mr(o,c,d){It(gy,c._currentValue),c._currentValue=d}function ir(o){o._currentValue=gy.current,Tt(gy)}function yy(o,c,d){for(;o!==null;){var g=o.alternate;if((o.childLanes&c)!==c?(o.childLanes|=c,g!==null&&(g.childLanes|=c)):g!==null&&(g.childLanes&c)!==c&&(g.childLanes|=c),o===d)break;o=o.return}}function by(o,c,d,g){var x=o.child;for(x!==null&&(x.return=o);x!==null;){var N=x.dependencies;if(N!==null){var E=x.child;N=N.firstContext;t:for(;N!==null;){var L=N;N=x;for(var V=0;V<c.length;V++)if(L.context===c[V]){N.lanes|=d,L=N.alternate,L!==null&&(L.lanes|=d),yy(N.return,d,o),g||(E=null);break t}N=L.next}}else if(x.tag===18){if(E=x.return,E===null)throw Error(s(341));E.lanes|=d,N=E.alternate,N!==null&&(N.lanes|=d),yy(E,d,o),E=null}else E=x.child;if(E!==null)E.return=x;else for(E=x;E!==null;){if(E===o){E=null;break}if(x=E.sibling,x!==null){x.return=E.return,E=x;break}E=E.return}x=E}}function Lu(o,c,d,g){o=null;for(var x=c,N=!1;x!==null;){if(!N){if((x.flags&524288)!==0)N=!0;else if((x.flags&262144)!==0)break}if(x.tag===10){var E=x.alternate;if(E===null)throw Error(s(387));if(E=E.memoizedProps,E!==null){var L=x.type;Ns(x.pendingProps.value,E.value)||(o!==null?o.push(L):o=[L])}}else if(x===ye.current){if(E=x.alternate,E===null)throw Error(s(387));E.memoizedState.memoizedState!==x.memoizedState.memoizedState&&(o!==null?o.push(tc):o=[tc])}x=x.return}o!==null&&by(c,o,d,g),c.flags|=262144}function zd(o){for(o=o.firstContext;o!==null;){if(!Ns(o.context._currentValue,o.memoizedValue))return!0;o=o.next}return!1}function qi(o){Hi=o,rr=null,o=o.dependencies,o!==null&&(o.firstContext=null)}function Mn(o){return cN(Hi,o)}function Md(o,c){return Hi===null&&qi(o),cN(o,c)}function cN(o,c){var d=c._currentValue;if(c={context:c,memoizedValue:d,next:null},rr===null){if(o===null)throw Error(s(308));rr=c,o.dependencies={lanes:0,firstContext:c},o.flags|=524288}else rr=rr.next=c;return d}var Br=!1;function xy(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function vy(o,c){o=o.updateQueue,c.updateQueue===o&&(c.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,callbacks:null})}function Vr(o){return{lane:o,tag:0,payload:null,callback:null,next:null}}function Pr(o,c,d){var g=o.updateQueue;if(g===null)return null;if(g=g.shared,(Le&2)!==0){var x=g.pending;return x===null?c.next=c:(c.next=x.next,x.next=c),g.pending=c,c=bd(o),Hw(o,null,d),c}return yd(o,g,c,d),bd(o)}function zu(o,c,d){if(c=c.updateQueue,c!==null&&(c=c.shared,(d&4194176)!==0)){var g=c.lanes;g&=o.pendingLanes,d|=g,c.lanes=d,Jv(o,d)}}function wy(o,c){var d=o.updateQueue,g=o.alternate;if(g!==null&&(g=g.updateQueue,d===g)){var x=null,N=null;if(d=d.firstBaseUpdate,d!==null){do{var E={lane:d.lane,tag:d.tag,payload:d.payload,callback:null,next:null};N===null?x=N=E:N=N.next=E,d=d.next}while(d!==null);N===null?x=N=c:N=N.next=c}else x=N=c;d={baseState:g.baseState,firstBaseUpdate:x,lastBaseUpdate:N,shared:g.shared,callbacks:g.callbacks},o.updateQueue=d;return}o=d.lastBaseUpdate,o===null?d.firstBaseUpdate=c:o.next=c,d.lastBaseUpdate=c}var Sy=!1;function Mu(){if(Sy){var o=nl;if(o!==null)throw o}}function Bu(o,c,d,g){Sy=!1;var x=o.updateQueue;Br=!1;var N=x.firstBaseUpdate,E=x.lastBaseUpdate,L=x.shared.pending;if(L!==null){x.shared.pending=null;var V=L,J=V.next;V.next=null,E===null?N=J:E.next=J,E=V;var pt=o.alternate;pt!==null&&(pt=pt.updateQueue,L=pt.lastBaseUpdate,L!==E&&(L===null?pt.firstBaseUpdate=J:L.next=J,pt.lastBaseUpdate=V))}if(N!==null){var vt=x.baseState;E=0,pt=J=V=null,L=N;do{var ct=L.lane&-536870913,ft=ct!==L.lane;if(ft?(le&ct)===ct:(g&ct)===ct){ct!==0&&ct===el&&(Sy=!0),pt!==null&&(pt=pt.next={lane:0,tag:L.tag,payload:L.payload,callback:null,next:null});t:{var _t=o,Ut=L;ct=c;var We=d;switch(Ut.tag){case 1:if(_t=Ut.payload,typeof _t=="function"){vt=_t.call(We,vt,ct);break t}vt=_t;break t;case 3:_t.flags=_t.flags&-65537|128;case 0:if(_t=Ut.payload,ct=typeof _t=="function"?_t.call(We,vt,ct):_t,ct==null)break t;vt=_({},vt,ct);break t;case 2:Br=!0}}ct=L.callback,ct!==null&&(o.flags|=64,ft&&(o.flags|=8192),ft=x.callbacks,ft===null?x.callbacks=[ct]:ft.push(ct))}else ft={lane:ct,tag:L.tag,payload:L.payload,callback:L.callback,next:null},pt===null?(J=pt=ft,V=vt):pt=pt.next=ft,E|=ct;if(L=L.next,L===null){if(L=x.shared.pending,L===null)break;ft=L,L=ft.next,ft.next=null,x.lastBaseUpdate=ft,x.shared.pending=null}}while(!0);pt===null&&(V=vt),x.baseState=V,x.firstBaseUpdate=J,x.lastBaseUpdate=pt,N===null&&(x.shared.lanes=0),qr|=E,o.lanes=E,o.memoizedState=vt}}function hN(o,c){if(typeof o!="function")throw Error(s(191,o));o.call(c)}function dN(o,c){var d=o.callbacks;if(d!==null)for(o.callbacks=null,o=0;o<d.length;o++)hN(d[o],c)}function Vu(o,c){try{var d=c.updateQueue,g=d!==null?d.lastEffect:null;if(g!==null){var x=g.next;d=x;do{if((d.tag&o)===o){g=void 0;var N=d.create,E=d.inst;g=N(),E.destroy=g}d=d.next}while(d!==x)}}catch(L){Ne(c,c.return,L)}}function Ur(o,c,d){try{var g=c.updateQueue,x=g!==null?g.lastEffect:null;if(x!==null){var N=x.next;g=N;do{if((g.tag&o)===o){var E=g.inst,L=E.destroy;if(L!==void 0){E.destroy=void 0,x=c;var V=d;try{L()}catch(J){Ne(x,V,J)}}}g=g.next}while(g!==N)}}catch(J){Ne(c,c.return,J)}}function fN(o){var c=o.updateQueue;if(c!==null){var d=o.stateNode;try{dN(c,d)}catch(g){Ne(o,o.return,g)}}}function pN(o,c,d){d.props=Gi(o.type,o.memoizedProps),d.state=o.memoizedState;try{d.componentWillUnmount()}catch(g){Ne(o,c,g)}}function ji(o,c){try{var d=o.ref;if(d!==null){var g=o.stateNode;switch(o.tag){case 26:case 27:case 5:var x=g;break;default:x=g}typeof d=="function"?o.refCleanup=d(x):d.current=x}}catch(N){Ne(o,c,N)}}function Cs(o,c){var d=o.ref,g=o.refCleanup;if(d!==null)if(typeof g=="function")try{g()}catch(x){Ne(o,c,x)}finally{o.refCleanup=null,o=o.alternate,o!=null&&(o.refCleanup=null)}else if(typeof d=="function")try{d(null)}catch(x){Ne(o,c,x)}else d.current=null}function mN(o){var c=o.type,d=o.memoizedProps,g=o.stateNode;try{t:switch(c){case"button":case"input":case"select":case"textarea":d.autoFocus&&g.focus();break t;case"img":d.src?g.src=d.src:d.srcSet&&(g.srcset=d.srcSet)}}catch(x){Ne(o,o.return,x)}}function gN(o,c,d){try{var g=o.stateNode;T_(g,o.type,d,c),g[as]=c}catch(x){Ne(o,o.return,x)}}function yN(o){return o.tag===5||o.tag===3||o.tag===26||o.tag===27||o.tag===4}function Ny(o){t:for(;;){for(;o.sibling===null;){if(o.return===null||yN(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==27&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue t;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function Cy(o,c,d){var g=o.tag;if(g===5||g===6)o=o.stateNode,c?d.nodeType===8?d.parentNode.insertBefore(o,c):d.insertBefore(o,c):(d.nodeType===8?(c=d.parentNode,c.insertBefore(o,d)):(c=d,c.appendChild(o)),d=d._reactRootContainer,d!=null||c.onclick!==null||(c.onclick=Qd));else if(g!==4&&g!==27&&(o=o.child,o!==null))for(Cy(o,c,d),o=o.sibling;o!==null;)Cy(o,c,d),o=o.sibling}function Bd(o,c,d){var g=o.tag;if(g===5||g===6)o=o.stateNode,c?d.insertBefore(o,c):d.appendChild(o);else if(g!==4&&g!==27&&(o=o.child,o!==null))for(Bd(o,c,d),o=o.sibling;o!==null;)Bd(o,c,d),o=o.sibling}var or=!1,Pe=!1,Ty=!1,bN=typeof WeakSet=="function"?WeakSet:Set,vn=null,xN=!1;function e_(o,c){if(o=o.containerInfo,Jy=rf,o=Lw(o),kg(o)){if("selectionStart"in o)var d={start:o.selectionStart,end:o.selectionEnd};else t:{d=(d=o.ownerDocument)&&d.defaultView||window;var g=d.getSelection&&d.getSelection();if(g&&g.rangeCount!==0){d=g.anchorNode;var x=g.anchorOffset,N=g.focusNode;g=g.focusOffset;try{d.nodeType,N.nodeType}catch{d=null;break t}var E=0,L=-1,V=-1,J=0,pt=0,vt=o,ct=null;e:for(;;){for(var ft;vt!==d||x!==0&&vt.nodeType!==3||(L=E+x),vt!==N||g!==0&&vt.nodeType!==3||(V=E+g),vt.nodeType===3&&(E+=vt.nodeValue.length),(ft=vt.firstChild)!==null;)ct=vt,vt=ft;for(;;){if(vt===o)break e;if(ct===d&&++J===x&&(L=E),ct===N&&++pt===g&&(V=E),(ft=vt.nextSibling)!==null)break;vt=ct,ct=vt.parentNode}vt=ft}d=L===-1||V===-1?null:{start:L,end:V}}else d=null}d=d||{start:0,end:0}}else d=null;for(tb={focusedElem:o,selectionRange:d},rf=!1,vn=c;vn!==null;)if(c=vn,o=c.child,(c.subtreeFlags&1028)!==0&&o!==null)o.return=c,vn=o;else for(;vn!==null;){switch(c=vn,N=c.alternate,o=c.flags,c.tag){case 0:break;case 11:case 15:break;case 1:if((o&1024)!==0&&N!==null){o=void 0,d=c,x=N.memoizedProps,N=N.memoizedState,g=d.stateNode;try{var _t=Gi(d.type,x,d.elementType===d.type);o=g.getSnapshotBeforeUpdate(_t,N),g.__reactInternalSnapshotBeforeUpdate=o}catch(Ut){Ne(d,d.return,Ut)}}break;case 3:if((o&1024)!==0){if(o=c.stateNode.containerInfo,d=o.nodeType,d===9)ab(o);else if(d===1)switch(o.nodeName){case"HEAD":case"HTML":case"BODY":ab(o);break;default:o.textContent=""}}break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((o&1024)!==0)throw Error(s(163))}if(o=c.sibling,o!==null){o.return=c.return,vn=o;break}vn=c.return}return _t=xN,xN=!1,_t}function vN(o,c,d){var g=d.flags;switch(d.tag){case 0:case 11:case 15:ur(o,d),g&4&&Vu(5,d);break;case 1:if(ur(o,d),g&4)if(o=d.stateNode,c===null)try{o.componentDidMount()}catch(L){Ne(d,d.return,L)}else{var x=Gi(d.type,c.memoizedProps);c=c.memoizedState;try{o.componentDidUpdate(x,c,o.__reactInternalSnapshotBeforeUpdate)}catch(L){Ne(d,d.return,L)}}g&64&&fN(d),g&512&&ji(d,d.return);break;case 3:if(ur(o,d),g&64&&(g=d.updateQueue,g!==null)){if(o=null,d.child!==null)switch(d.child.tag){case 27:case 5:o=d.child.stateNode;break;case 1:o=d.child.stateNode}try{dN(g,o)}catch(L){Ne(d,d.return,L)}}break;case 26:ur(o,d),g&512&&ji(d,d.return);break;case 27:case 5:ur(o,d),c===null&&g&4&&mN(d),g&512&&ji(d,d.return);break;case 12:ur(o,d);break;case 13:ur(o,d),g&4&&NN(o,d);break;case 22:if(x=d.memoizedState!==null||or,!x){c=c!==null&&c.memoizedState!==null||Pe;var N=or,E=Pe;or=x,(Pe=c)&&!E?Wr(o,d,(d.subtreeFlags&8772)!==0):ur(o,d),or=N,Pe=E}g&512&&(d.memoizedProps.mode==="manual"?ji(d,d.return):Cs(d,d.return));break;default:ur(o,d)}}function wN(o){var c=o.alternate;c!==null&&(o.alternate=null,wN(c)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(c=o.stateNode,c!==null&&hg(c)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}var tn=null,Ts=!1;function lr(o,c,d){for(d=d.child;d!==null;)SN(o,c,d),d=d.sibling}function SN(o,c,d){if(Kn&&typeof Kn.onCommitFiberUnmount=="function")try{Kn.onCommitFiberUnmount(Ra,d)}catch{}switch(d.tag){case 26:Pe||Cs(d,c),lr(o,c,d),d.memoizedState?d.memoizedState.count--:d.stateNode&&(d=d.stateNode,d.parentNode.removeChild(d));break;case 27:Pe||Cs(d,c);var g=tn,x=Ts;for(tn=d.stateNode,lr(o,c,d),d=d.stateNode,c=d.attributes;c.length;)d.removeAttributeNode(c[0]);hg(d),tn=g,Ts=x;break;case 5:Pe||Cs(d,c);case 6:x=tn;var N=Ts;if(tn=null,lr(o,c,d),tn=x,Ts=N,tn!==null)if(Ts)try{o=tn,g=d.stateNode,o.nodeType===8?o.parentNode.removeChild(g):o.removeChild(g)}catch(E){Ne(d,c,E)}else try{tn.removeChild(d.stateNode)}catch(E){Ne(d,c,E)}break;case 18:tn!==null&&(Ts?(c=tn,d=d.stateNode,c.nodeType===8?sb(c.parentNode,d):c.nodeType===1&&sb(c,d),ac(c)):sb(tn,d.stateNode));break;case 4:g=tn,x=Ts,tn=d.stateNode.containerInfo,Ts=!0,lr(o,c,d),tn=g,Ts=x;break;case 0:case 11:case 14:case 15:Pe||Ur(2,d,c),Pe||Ur(4,d,c),lr(o,c,d);break;case 1:Pe||(Cs(d,c),g=d.stateNode,typeof g.componentWillUnmount=="function"&&pN(d,c,g)),lr(o,c,d);break;case 21:lr(o,c,d);break;case 22:Pe||Cs(d,c),Pe=(g=Pe)||d.memoizedState!==null,lr(o,c,d),Pe=g;break;default:lr(o,c,d)}}function NN(o,c){if(c.memoizedState===null&&(o=c.alternate,o!==null&&(o=o.memoizedState,o!==null&&(o=o.dehydrated,o!==null))))try{ac(o)}catch(d){Ne(c,c.return,d)}}function n_(o){switch(o.tag){case 13:case 19:var c=o.stateNode;return c===null&&(c=o.stateNode=new bN),c;case 22:return o=o.stateNode,c=o._retryCache,c===null&&(c=o._retryCache=new bN),c;default:throw Error(s(435,o.tag))}}function $y(o,c){var d=n_(o);c.forEach(function(g){var x=m_.bind(null,o,g);d.has(g)||(d.add(g),g.then(x,x))})}function Us(o,c){var d=c.deletions;if(d!==null)for(var g=0;g<d.length;g++){var x=d[g],N=o,E=c,L=E;t:for(;L!==null;){switch(L.tag){case 27:case 5:tn=L.stateNode,Ts=!1;break t;case 3:tn=L.stateNode.containerInfo,Ts=!0;break t;case 4:tn=L.stateNode.containerInfo,Ts=!0;break t}L=L.return}if(tn===null)throw Error(s(160));SN(N,E,x),tn=null,Ts=!1,N=x.alternate,N!==null&&(N.return=null),x.return=null}if(c.subtreeFlags&13878)for(c=c.child;c!==null;)CN(c,o),c=c.sibling}var ga=null;function CN(o,c){var d=o.alternate,g=o.flags;switch(o.tag){case 0:case 11:case 14:case 15:Us(c,o),Ws(o),g&4&&(Ur(3,o,o.return),Vu(3,o),Ur(5,o,o.return));break;case 1:Us(c,o),Ws(o),g&512&&(Pe||d===null||Cs(d,d.return)),g&64&&or&&(o=o.updateQueue,o!==null&&(g=o.callbacks,g!==null&&(d=o.shared.hiddenCallbacks,o.shared.hiddenCallbacks=d===null?g:d.concat(g))));break;case 26:var x=ga;if(Us(c,o),Ws(o),g&512&&(Pe||d===null||Cs(d,d.return)),g&4){var N=d!==null?d.memoizedState:null;if(g=o.memoizedState,d===null)if(g===null)if(o.stateNode===null){t:{g=o.type,d=o.memoizedProps,x=x.ownerDocument||x;e:switch(g){case"title":N=x.getElementsByTagName("title")[0],(!N||N[du]||N[zn]||N.namespaceURI==="http://www.w3.org/2000/svg"||N.hasAttribute("itemprop"))&&(N=x.createElement(g),x.head.insertBefore(N,x.querySelector("head > title"))),Dn(N,g,d),N[zn]=o,bn(N),g=N;break t;case"link":var E=mC("link","href",x).get(g+(d.href||""));if(E){for(var L=0;L<E.length;L++)if(N=E[L],N.getAttribute("href")===(d.href==null?null:d.href)&&N.getAttribute("rel")===(d.rel==null?null:d.rel)&&N.getAttribute("title")===(d.title==null?null:d.title)&&N.getAttribute("crossorigin")===(d.crossOrigin==null?null:d.crossOrigin)){E.splice(L,1);break e}}N=x.createElement(g),Dn(N,g,d),x.head.appendChild(N);break;case"meta":if(E=mC("meta","content",x).get(g+(d.content||""))){for(L=0;L<E.length;L++)if(N=E[L],N.getAttribute("content")===(d.content==null?null:""+d.content)&&N.getAttribute("name")===(d.name==null?null:d.name)&&N.getAttribute("property")===(d.property==null?null:d.property)&&N.getAttribute("http-equiv")===(d.httpEquiv==null?null:d.httpEquiv)&&N.getAttribute("charset")===(d.charSet==null?null:d.charSet)){E.splice(L,1);break e}}N=x.createElement(g),Dn(N,g,d),x.head.appendChild(N);break;default:throw Error(s(468,g))}N[zn]=o,bn(N),g=N}o.stateNode=g}else gC(x,o.type,o.stateNode);else o.stateNode=pC(x,g,o.memoizedProps);else N!==g?(N===null?d.stateNode!==null&&(d=d.stateNode,d.parentNode.removeChild(d)):N.count--,g===null?gC(x,o.type,o.stateNode):pC(x,g,o.memoizedProps)):g===null&&o.stateNode!==null&&gN(o,o.memoizedProps,d.memoizedProps)}break;case 27:if(g&4&&o.alternate===null){x=o.stateNode,N=o.memoizedProps;try{for(var V=x.firstChild;V;){var J=V.nextSibling,pt=V.nodeName;V[du]||pt==="HEAD"||pt==="BODY"||pt==="SCRIPT"||pt==="STYLE"||pt==="LINK"&&V.rel.toLowerCase()==="stylesheet"||x.removeChild(V),V=J}for(var vt=o.type,ct=x.attributes;ct.length;)x.removeAttributeNode(ct[0]);Dn(x,vt,N),x[zn]=o,x[as]=N}catch(_t){Ne(o,o.return,_t)}}case 5:if(Us(c,o),Ws(o),g&512&&(Pe||d===null||Cs(d,d.return)),o.flags&32){x=o.stateNode;try{Wo(x,"")}catch(_t){Ne(o,o.return,_t)}}g&4&&o.stateNode!=null&&(x=o.memoizedProps,gN(o,x,d!==null?d.memoizedProps:x)),g&1024&&(Ty=!0);break;case 6:if(Us(c,o),Ws(o),g&4){if(o.stateNode===null)throw Error(s(162));g=o.memoizedProps,d=o.stateNode;try{d.nodeValue=g}catch(_t){Ne(o,o.return,_t)}}break;case 3:if(nf=null,x=ga,ga=tf(c.containerInfo),Us(c,o),ga=x,Ws(o),g&4&&d!==null&&d.memoizedState.isDehydrated)try{ac(c.containerInfo)}catch(_t){Ne(o,o.return,_t)}Ty&&(Ty=!1,TN(o));break;case 4:g=ga,ga=tf(o.stateNode.containerInfo),Us(c,o),Ws(o),ga=g;break;case 12:Us(c,o),Ws(o);break;case 13:Us(c,o),Ws(o),o.child.flags&8192&&o.memoizedState!==null!=(d!==null&&d.memoizedState!==null)&&(Fy=Ve()),g&4&&(g=o.updateQueue,g!==null&&(o.updateQueue=null,$y(o,g)));break;case 22:if(g&512&&(Pe||d===null||Cs(d,d.return)),V=o.memoizedState!==null,J=d!==null&&d.memoizedState!==null,pt=or,vt=Pe,or=pt||V,Pe=vt||J,Us(c,o),Pe=vt,or=pt,Ws(o),c=o.stateNode,c._current=o,c._visibility&=-3,c._visibility|=c._pendingVisibility&2,g&8192&&(c._visibility=V?c._visibility&-2:c._visibility|1,V&&(c=or||Pe,d===null||J||c||il(o)),o.memoizedProps===null||o.memoizedProps.mode!=="manual"))t:for(d=null,c=o;;){if(c.tag===5||c.tag===26||c.tag===27){if(d===null){J=d=c;try{if(x=J.stateNode,V)N=x.style,typeof N.setProperty=="function"?N.setProperty("display","none","important"):N.display="none";else{E=J.stateNode,L=J.memoizedProps.style;var ft=L!=null&&L.hasOwnProperty("display")?L.display:null;E.style.display=ft==null||typeof ft=="boolean"?"":(""+ft).trim()}}catch(_t){Ne(J,J.return,_t)}}}else if(c.tag===6){if(d===null){J=c;try{J.stateNode.nodeValue=V?"":J.memoizedProps}catch(_t){Ne(J,J.return,_t)}}}else if((c.tag!==22&&c.tag!==23||c.memoizedState===null||c===o)&&c.child!==null){c.child.return=c,c=c.child;continue}if(c===o)break t;for(;c.sibling===null;){if(c.return===null||c.return===o)break t;d===c&&(d=null),c=c.return}d===c&&(d=null),c.sibling.return=c.return,c=c.sibling}g&4&&(g=o.updateQueue,g!==null&&(d=g.retryQueue,d!==null&&(g.retryQueue=null,$y(o,d))));break;case 19:Us(c,o),Ws(o),g&4&&(g=o.updateQueue,g!==null&&(o.updateQueue=null,$y(o,g)));break;case 21:break;default:Us(c,o),Ws(o)}}function Ws(o){var c=o.flags;if(c&2){try{if(o.tag!==27){t:{for(var d=o.return;d!==null;){if(yN(d)){var g=d;break t}d=d.return}throw Error(s(160))}switch(g.tag){case 27:var x=g.stateNode,N=Ny(o);Bd(o,N,x);break;case 5:var E=g.stateNode;g.flags&32&&(Wo(E,""),g.flags&=-33);var L=Ny(o);Bd(o,L,E);break;case 3:case 4:var V=g.stateNode.containerInfo,J=Ny(o);Cy(o,J,V);break;default:throw Error(s(161))}}}catch(pt){Ne(o,o.return,pt)}o.flags&=-3}c&4096&&(o.flags&=-4097)}function TN(o){if(o.subtreeFlags&1024)for(o=o.child;o!==null;){var c=o;TN(c),c.tag===5&&c.flags&1024&&c.stateNode.reset(),o=o.sibling}}function ur(o,c){if(c.subtreeFlags&8772)for(c=c.child;c!==null;)vN(o,c.alternate,c),c=c.sibling}function il(o){for(o=o.child;o!==null;){var c=o;switch(c.tag){case 0:case 11:case 14:case 15:Ur(4,c,c.return),il(c);break;case 1:Cs(c,c.return);var d=c.stateNode;typeof d.componentWillUnmount=="function"&&pN(c,c.return,d),il(c);break;case 26:case 27:case 5:Cs(c,c.return),il(c);break;case 22:Cs(c,c.return),c.memoizedState===null&&il(c);break;default:il(c)}o=o.sibling}}function Wr(o,c,d){for(d=d&&(c.subtreeFlags&8772)!==0,c=c.child;c!==null;){var g=c.alternate,x=o,N=c,E=N.flags;switch(N.tag){case 0:case 11:case 15:Wr(x,N,d),Vu(4,N);break;case 1:if(Wr(x,N,d),g=N,x=g.stateNode,typeof x.componentDidMount=="function")try{x.componentDidMount()}catch(J){Ne(g,g.return,J)}if(g=N,x=g.updateQueue,x!==null){var L=g.stateNode;try{var V=x.shared.hiddenCallbacks;if(V!==null)for(x.shared.hiddenCallbacks=null,x=0;x<V.length;x++)hN(V[x],L)}catch(J){Ne(g,g.return,J)}}d&&E&64&&fN(N),ji(N,N.return);break;case 26:case 27:case 5:Wr(x,N,d),d&&g===null&&E&4&&mN(N),ji(N,N.return);break;case 12:Wr(x,N,d);break;case 13:Wr(x,N,d),d&&E&4&&NN(x,N);break;case 22:N.memoizedState===null&&Wr(x,N,d),ji(N,N.return);break;default:Wr(x,N,d)}c=c.sibling}}function ky(o,c){var d=null;o!==null&&o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(d=o.memoizedState.cachePool.pool),o=null,c.memoizedState!==null&&c.memoizedState.cachePool!==null&&(o=c.memoizedState.cachePool.pool),o!==d&&(o!=null&&o.refCount++,d!=null&&Au(d))}function Iy(o,c){o=null,c.alternate!==null&&(o=c.alternate.memoizedState.cache),c=c.memoizedState.cache,c!==o&&(c.refCount++,o!=null&&Au(o))}function Gr(o,c,d,g){if(c.subtreeFlags&10256)for(c=c.child;c!==null;)$N(o,c,d,g),c=c.sibling}function $N(o,c,d,g){var x=c.flags;switch(c.tag){case 0:case 11:case 15:Gr(o,c,d,g),x&2048&&Vu(9,c);break;case 3:Gr(o,c,d,g),x&2048&&(o=null,c.alternate!==null&&(o=c.alternate.memoizedState.cache),c=c.memoizedState.cache,c!==o&&(c.refCount++,o!=null&&Au(o)));break;case 12:if(x&2048){Gr(o,c,d,g),o=c.stateNode;try{var N=c.memoizedProps,E=N.id,L=N.onPostCommit;typeof L=="function"&&L(E,c.alternate===null?"mount":"update",o.passiveEffectDuration,-0)}catch(V){Ne(c,c.return,V)}}else Gr(o,c,d,g);break;case 23:break;case 22:N=c.stateNode,c.memoizedState!==null?N._visibility&4?Gr(o,c,d,g):Pu(o,c):N._visibility&4?Gr(o,c,d,g):(N._visibility|=4,ol(o,c,d,g,(c.subtreeFlags&10256)!==0)),x&2048&&ky(c.alternate,c);break;case 24:Gr(o,c,d,g),x&2048&&Iy(c.alternate,c);break;default:Gr(o,c,d,g)}}function ol(o,c,d,g,x){for(x=x&&(c.subtreeFlags&10256)!==0,c=c.child;c!==null;){var N=o,E=c,L=d,V=g,J=E.flags;switch(E.tag){case 0:case 11:case 15:ol(N,E,L,V,x),Vu(8,E);break;case 23:break;case 22:var pt=E.stateNode;E.memoizedState!==null?pt._visibility&4?ol(N,E,L,V,x):Pu(N,E):(pt._visibility|=4,ol(N,E,L,V,x)),x&&J&2048&&ky(E.alternate,E);break;case 24:ol(N,E,L,V,x),x&&J&2048&&Iy(E.alternate,E);break;default:ol(N,E,L,V,x)}c=c.sibling}}function Pu(o,c){if(c.subtreeFlags&10256)for(c=c.child;c!==null;){var d=o,g=c,x=g.flags;switch(g.tag){case 22:Pu(d,g),x&2048&&ky(g.alternate,g);break;case 24:Pu(d,g),x&2048&&Iy(g.alternate,g);break;default:Pu(d,g)}c=c.sibling}}var Uu=8192;function ll(o){if(o.subtreeFlags&Uu)for(o=o.child;o!==null;)kN(o),o=o.sibling}function kN(o){switch(o.tag){case 26:ll(o),o.flags&Uu&&o.memoizedState!==null&&G_(ga,o.memoizedState,o.memoizedProps);break;case 5:ll(o);break;case 3:case 4:var c=ga;ga=tf(o.stateNode.containerInfo),ll(o),ga=c;break;case 22:o.memoizedState===null&&(c=o.alternate,c!==null&&c.memoizedState!==null?(c=Uu,Uu=16777216,ll(o),Uu=c):ll(o));break;default:ll(o)}}function IN(o){var c=o.alternate;if(c!==null&&(o=c.child,o!==null)){c.child=null;do c=o.sibling,o.sibling=null,o=c;while(o!==null)}}function Wu(o){var c=o.deletions;if((o.flags&16)!==0){if(c!==null)for(var d=0;d<c.length;d++){var g=c[d];vn=g,AN(g,o)}IN(o)}if(o.subtreeFlags&10256)for(o=o.child;o!==null;)EN(o),o=o.sibling}function EN(o){switch(o.tag){case 0:case 11:case 15:Wu(o),o.flags&2048&&Ur(9,o,o.return);break;case 3:Wu(o);break;case 12:Wu(o);break;case 22:var c=o.stateNode;o.memoizedState!==null&&c._visibility&4&&(o.return===null||o.return.tag!==13)?(c._visibility&=-5,Vd(o)):Wu(o);break;default:Wu(o)}}function Vd(o){var c=o.deletions;if((o.flags&16)!==0){if(c!==null)for(var d=0;d<c.length;d++){var g=c[d];vn=g,AN(g,o)}IN(o)}for(o=o.child;o!==null;){switch(c=o,c.tag){case 0:case 11:case 15:Ur(8,c,c.return),Vd(c);break;case 22:d=c.stateNode,d._visibility&4&&(d._visibility&=-5,Vd(c));break;default:Vd(c)}o=o.sibling}}function AN(o,c){for(;vn!==null;){var d=vn;switch(d.tag){case 0:case 11:case 15:Ur(8,d,c);break;case 23:case 22:if(d.memoizedState!==null&&d.memoizedState.cachePool!==null){var g=d.memoizedState.cachePool.pool;g!=null&&g.refCount++}break;case 24:Au(d.memoizedState.cache)}if(g=d.child,g!==null)g.return=d,vn=g;else t:for(d=o;vn!==null;){g=vn;var x=g.sibling,N=g.return;if(wN(g),g===d){vn=null;break t}if(x!==null){x.return=N,vn=x;break t}vn=N}}}function s_(o,c,d,g){this.tag=o,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=c,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Gs(o,c,d,g){return new s_(o,c,d,g)}function Ey(o){return o=o.prototype,!(!o||!o.isReactComponent)}function Hr(o,c){var d=o.alternate;return d===null?(d=Gs(o.tag,c,o.key,o.mode),d.elementType=o.elementType,d.type=o.type,d.stateNode=o.stateNode,d.alternate=o,o.alternate=d):(d.pendingProps=c,d.type=o.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=o.flags&31457280,d.childLanes=o.childLanes,d.lanes=o.lanes,d.child=o.child,d.memoizedProps=o.memoizedProps,d.memoizedState=o.memoizedState,d.updateQueue=o.updateQueue,c=o.dependencies,d.dependencies=c===null?null:{lanes:c.lanes,firstContext:c.firstContext},d.sibling=o.sibling,d.index=o.index,d.ref=o.ref,d.refCleanup=o.refCleanup,d}function RN(o,c){o.flags&=31457282;var d=o.alternate;return d===null?(o.childLanes=0,o.lanes=c,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=d.childLanes,o.lanes=d.lanes,o.child=d.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=d.memoizedProps,o.memoizedState=d.memoizedState,o.updateQueue=d.updateQueue,o.type=d.type,c=d.dependencies,o.dependencies=c===null?null:{lanes:c.lanes,firstContext:c.firstContext}),o}function Pd(o,c,d,g,x,N){var E=0;if(g=o,typeof o=="function")Ey(o)&&(E=1);else if(typeof o=="string")E=U_(o,d,Mt.current)?26:o==="html"||o==="head"||o==="body"?27:5;else t:switch(o){case u:return Xi(d.children,x,N,c);case h:E=8,x|=24;break;case f:return o=Gs(12,d,c,x|2),o.elementType=f,o.lanes=N,o;case w:return o=Gs(13,d,c,x),o.elementType=w,o.lanes=N,o;case v:return o=Gs(19,d,c,x),o.elementType=v,o.lanes=N,o;case $:return DN(d,x,N,c);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case p:case y:E=10;break t;case m:E=9;break t;case b:E=11;break t;case S:E=14;break t;case C:E=16,g=null;break t}E=29,d=Error(s(130,o===null?"null":typeof o,"")),g=null}return c=Gs(E,d,c,x),c.elementType=o,c.type=g,c.lanes=N,c}function Xi(o,c,d,g){return o=Gs(7,o,g,c),o.lanes=d,o}function DN(o,c,d,g){o=Gs(22,o,g,c),o.elementType=$,o.lanes=d;var x={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var N=x._current;if(N===null)throw Error(s(456));if((x._pendingVisibility&2)===0){var E=Or(N,2);E!==null&&(x._pendingVisibility|=2,Zn(E,N,2))}},attach:function(){var N=x._current;if(N===null)throw Error(s(456));if((x._pendingVisibility&2)!==0){var E=Or(N,2);E!==null&&(x._pendingVisibility&=-3,Zn(E,N,2))}}};return o.stateNode=x,o}function Ay(o,c,d){return o=Gs(6,o,null,c),o.lanes=d,o}function Ry(o,c,d){return c=Gs(4,o.children!==null?o.children:[],o.key,c),c.lanes=d,c.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},c}function cr(o){o.flags|=4}function ON(o,c){if(c.type!=="stylesheet"||(c.state.loading&4)!==0)o.flags&=-16777217;else if(o.flags|=16777216,!yC(c)){if(c=Ps.current,c!==null&&((le&4194176)===le?Oa!==null:(le&62914560)!==le&&(le&536870912)===0||c!==Oa))throw ku=Lg,Yw;o.flags|=8192}}function Ud(o,c){c!==null&&(o.flags|=4),o.flags&16384&&(c=o.tag!==22?Zv():536870912,o.lanes|=c,cl|=c)}function Gu(o,c){if(!he)switch(o.tailMode){case"hidden":c=o.tail;for(var d=null;c!==null;)c.alternate!==null&&(d=c),c=c.sibling;d===null?o.tail=null:d.sibling=null;break;case"collapsed":d=o.tail;for(var g=null;d!==null;)d.alternate!==null&&(g=d),d=d.sibling;g===null?c||o.tail===null?o.tail=null:o.tail.sibling=null:g.sibling=null}}function Fe(o){var c=o.alternate!==null&&o.alternate.child===o.child,d=0,g=0;if(c)for(var x=o.child;x!==null;)d|=x.lanes|x.childLanes,g|=x.subtreeFlags&31457280,g|=x.flags&31457280,x.return=o,x=x.sibling;else for(x=o.child;x!==null;)d|=x.lanes|x.childLanes,g|=x.subtreeFlags,g|=x.flags,x.return=o,x=x.sibling;return o.subtreeFlags|=g,o.childLanes=d,c}function a_(o,c,d){var g=c.pendingProps;switch(_g(c),c.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Fe(c),null;case 1:return Fe(c),null;case 3:return d=c.stateNode,g=null,o!==null&&(g=o.memoizedState.cache),c.memoizedState.cache!==g&&(c.flags|=2048),ir(dn),ne(),d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null),(o===null||o.child===null)&&(Nu(c)?cr(c):o===null||o.memoizedState.isDehydrated&&(c.flags&256)===0||(c.flags|=1024,ma!==null&&(By(ma),ma=null))),Fe(c),null;case 26:return d=c.memoizedState,o===null?(cr(c),d!==null?(Fe(c),ON(c,d)):(Fe(c),c.flags&=-16777217)):d?d!==o.memoizedState?(cr(c),Fe(c),ON(c,d)):(Fe(c),c.flags&=-16777217):(o.memoizedProps!==g&&cr(c),Fe(c),c.flags&=-16777217),null;case 27:fe(c),d=ee.current;var x=c.type;if(o!==null&&c.stateNode!=null)o.memoizedProps!==g&&cr(c);else{if(!g){if(c.stateNode===null)throw Error(s(166));return Fe(c),null}o=Mt.current,Nu(c)?Xw(c):(o=uC(x,g,d),c.stateNode=o,cr(c))}return Fe(c),null;case 5:if(fe(c),d=c.type,o!==null&&c.stateNode!=null)o.memoizedProps!==g&&cr(c);else{if(!g){if(c.stateNode===null)throw Error(s(166));return Fe(c),null}if(o=Mt.current,Nu(c))Xw(c);else{switch(x=Jd(ee.current),o){case 1:o=x.createElementNS("http://www.w3.org/2000/svg",d);break;case 2:o=x.createElementNS("http://www.w3.org/1998/Math/MathML",d);break;default:switch(d){case"svg":o=x.createElementNS("http://www.w3.org/2000/svg",d);break;case"math":o=x.createElementNS("http://www.w3.org/1998/Math/MathML",d);break;case"script":o=x.createElement("div"),o.innerHTML="<script><\/script>",o=o.removeChild(o.firstChild);break;case"select":o=typeof g.is=="string"?x.createElement("select",{is:g.is}):x.createElement("select"),g.multiple?o.multiple=!0:g.size&&(o.size=g.size);break;default:o=typeof g.is=="string"?x.createElement(d,{is:g.is}):x.createElement(d)}}o[zn]=c,o[as]=g;t:for(x=c.child;x!==null;){if(x.tag===5||x.tag===6)o.appendChild(x.stateNode);else if(x.tag!==4&&x.tag!==27&&x.child!==null){x.child.return=x,x=x.child;continue}if(x===c)break t;for(;x.sibling===null;){if(x.return===null||x.return===c)break t;x=x.return}x.sibling.return=x.return,x=x.sibling}c.stateNode=o;t:switch(Dn(o,d,g),d){case"button":case"input":case"select":case"textarea":o=!!g.autoFocus;break t;case"img":o=!0;break t;default:o=!1}o&&cr(c)}}return Fe(c),c.flags&=-16777217,null;case 6:if(o&&c.stateNode!=null)o.memoizedProps!==g&&cr(c);else{if(typeof g!="string"&&c.stateNode===null)throw Error(s(166));if(o=ee.current,Nu(c)){if(o=c.stateNode,d=c.memoizedProps,g=null,x=Yn,x!==null)switch(x.tag){case 27:case 5:g=x.memoizedProps}o[zn]=c,o=!!(o.nodeValue===d||g!==null&&g.suppressHydrationWarning===!0||sC(o.nodeValue,d)),o||Mi(c)}else o=Jd(o).createTextNode(g),o[zn]=c,c.stateNode=o}return Fe(c),null;case 13:if(g=c.memoizedState,o===null||o.memoizedState!==null&&o.memoizedState.dehydrated!==null){if(x=Nu(c),g!==null&&g.dehydrated!==null){if(o===null){if(!x)throw Error(s(318));if(x=c.memoizedState,x=x!==null?x.dehydrated:null,!x)throw Error(s(317));x[zn]=c}else Cu(),(c.flags&128)===0&&(c.memoizedState=null),c.flags|=4;Fe(c),x=!1}else ma!==null&&(By(ma),ma=null),x=!0;if(!x)return c.flags&256?(nr(c),c):(nr(c),null)}if(nr(c),(c.flags&128)!==0)return c.lanes=d,c;if(d=g!==null,o=o!==null&&o.memoizedState!==null,d){g=c.child,x=null,g.alternate!==null&&g.alternate.memoizedState!==null&&g.alternate.memoizedState.cachePool!==null&&(x=g.alternate.memoizedState.cachePool.pool);var N=null;g.memoizedState!==null&&g.memoizedState.cachePool!==null&&(N=g.memoizedState.cachePool.pool),N!==x&&(g.flags|=2048)}return d!==o&&d&&(c.child.flags|=8192),Ud(c,c.updateQueue),Fe(c),null;case 4:return ne(),o===null&&Yy(c.stateNode.containerInfo),Fe(c),null;case 10:return ir(c.type),Fe(c),null;case 19:if(Tt(hn),x=c.memoizedState,x===null)return Fe(c),null;if(g=(c.flags&128)!==0,N=x.rendering,N===null)if(g)Gu(x,!1);else{if(Ue!==0||o!==null&&(o.flags&128)!==0)for(o=c.child;o!==null;){if(N=Td(o),N!==null){for(c.flags|=128,Gu(x,!1),o=N.updateQueue,c.updateQueue=o,Ud(c,o),c.subtreeFlags=0,o=d,d=c.child;d!==null;)RN(d,o),d=d.sibling;return It(hn,hn.current&1|2),c.child}o=o.sibling}x.tail!==null&&Ve()>Wd&&(c.flags|=128,g=!0,Gu(x,!1),c.lanes=4194304)}else{if(!g)if(o=Td(N),o!==null){if(c.flags|=128,g=!0,o=o.updateQueue,c.updateQueue=o,Ud(c,o),Gu(x,!0),x.tail===null&&x.tailMode==="hidden"&&!N.alternate&&!he)return Fe(c),null}else 2*Ve()-x.renderingStartTime>Wd&&d!==536870912&&(c.flags|=128,g=!0,Gu(x,!1),c.lanes=4194304);x.isBackwards?(N.sibling=c.child,c.child=N):(o=x.last,o!==null?o.sibling=N:c.child=N,x.last=N)}return x.tail!==null?(c=x.tail,x.rendering=c,x.tail=c.sibling,x.renderingStartTime=Ve(),c.sibling=null,o=hn.current,It(hn,g?o&1|2:o&1),c):(Fe(c),null);case 22:case 23:return nr(c),Mg(),g=c.memoizedState!==null,o!==null?o.memoizedState!==null!==g&&(c.flags|=8192):g&&(c.flags|=8192),g?(d&536870912)!==0&&(c.flags&128)===0&&(Fe(c),c.subtreeFlags&6&&(c.flags|=8192)):Fe(c),d=c.updateQueue,d!==null&&Ud(c,d.retryQueue),d=null,o!==null&&o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(d=o.memoizedState.cachePool.pool),g=null,c.memoizedState!==null&&c.memoizedState.cachePool!==null&&(g=c.memoizedState.cachePool.pool),g!==d&&(c.flags|=2048),o!==null&&Tt(Vi),null;case 24:return d=null,o!==null&&(d=o.memoizedState.cache),c.memoizedState.cache!==d&&(c.flags|=2048),ir(dn),Fe(c),null;case 25:return null}throw Error(s(156,c.tag))}function r_(o,c){switch(_g(c),c.tag){case 1:return o=c.flags,o&65536?(c.flags=o&-65537|128,c):null;case 3:return ir(dn),ne(),o=c.flags,(o&65536)!==0&&(o&128)===0?(c.flags=o&-65537|128,c):null;case 26:case 27:case 5:return fe(c),null;case 13:if(nr(c),o=c.memoizedState,o!==null&&o.dehydrated!==null){if(c.alternate===null)throw Error(s(340));Cu()}return o=c.flags,o&65536?(c.flags=o&-65537|128,c):null;case 19:return Tt(hn),null;case 4:return ne(),null;case 10:return ir(c.type),null;case 22:case 23:return nr(c),Mg(),o!==null&&Tt(Vi),o=c.flags,o&65536?(c.flags=o&-65537|128,c):null;case 24:return ir(dn),null;case 25:return null;default:return null}}function _N(o,c){switch(_g(c),c.tag){case 3:ir(dn),ne();break;case 26:case 27:case 5:fe(c);break;case 4:ne();break;case 13:nr(c);break;case 19:Tt(hn);break;case 10:ir(c.type);break;case 22:case 23:nr(c),Mg(),o!==null&&Tt(Vi);break;case 24:ir(dn)}}var i_={getCacheForType:function(o){var c=Mn(dn),d=c.data.get(o);return d===void 0&&(d=o(),c.data.set(o,d)),d}},o_=typeof WeakMap=="function"?WeakMap:Map,Le=0,$e=null,Qt=null,le=0,ke=0,$s=null,hr=!1,ul=!1,Dy=!1,dr=0,Ue=0,qr=0,Ki=0,Oy=0,Hs=0,cl=0,Hu=null,Fa=null,_y=!1,Fy=0,Wd=1/0,Gd=null,jr=null,Hd=!1,Yi=null,qu=0,Ly=0,zy=null,ju=0,My=null;function ks(){if((Le&2)!==0&&le!==0)return le&-le;if(R.T!==null){var o=el;return o!==0?o:qy()}return ew()}function FN(){Hs===0&&(Hs=(le&536870912)===0||he?Yv():536870912);var o=Ps.current;return o!==null&&(o.flags|=32),Hs}function Zn(o,c,d){(o===$e&&ke===2||o.cancelPendingCommit!==null)&&(hl(o,0),fr(o,le,Hs,!1)),hu(o,d),((Le&2)===0||o!==$e)&&(o===$e&&((Le&2)===0&&(Ki|=d),Ue===4&&fr(o,le,Hs,!1)),La(o))}function LN(o,c,d){if((Le&6)!==0)throw Error(s(327));var g=!d&&(c&60)===0&&(c&o.expiredLanes)===0||cu(o,c),x=g?c_(o,c):Uy(o,c,!0),N=g;do{if(x===0){ul&&!g&&fr(o,c,0,!1);break}else if(x===6)fr(o,c,0,!hr);else{if(d=o.current.alternate,N&&!l_(d)){x=Uy(o,c,!1),N=!1;continue}if(x===2){if(N=c,o.errorRecoveryDisabledLanes&N)var E=0;else E=o.pendingLanes&-536870913,E=E!==0?E:E&536870912?536870912:0;if(E!==0){c=E;t:{var L=o;x=Hu;var V=L.current.memoizedState.isDehydrated;if(V&&(hl(L,E).flags|=256),E=Uy(L,E,!1),E!==2){if(Dy&&!V){L.errorRecoveryDisabledLanes|=N,Ki|=N,x=4;break t}N=Fa,Fa=x,N!==null&&By(N)}x=E}if(N=!1,x!==2)continue}}if(x===1){hl(o,0),fr(o,c,0,!0);break}t:{switch(g=o,x){case 0:case 1:throw Error(s(345));case 4:if((c&4194176)===c){fr(g,c,Hs,!hr);break t}break;case 2:Fa=null;break;case 3:case 5:break;default:throw Error(s(329))}if(g.finishedWork=d,g.finishedLanes=c,(c&62914560)===c&&(N=Fy+300-Ve(),10<N)){if(fr(g,c,Hs,!hr),ad(g,0)!==0)break t;g.timeoutHandle=iC(zN.bind(null,g,d,Fa,Gd,_y,c,Hs,Ki,cl,hr,2,-0,0),N);break t}zN(g,d,Fa,Gd,_y,c,Hs,Ki,cl,hr,0,-0,0)}}break}while(!0);La(o)}function By(o){Fa===null?Fa=o:Fa.push.apply(Fa,o)}function zN(o,c,d,g,x,N,E,L,V,J,pt,vt,ct){var ft=c.subtreeFlags;if((ft&8192||(ft&16785408)===16785408)&&(Ju={stylesheets:null,count:0,unsuspend:W_},kN(c),c=H_(),c!==null)){o.cancelPendingCommit=c(GN.bind(null,o,d,g,x,E,L,V,1,vt,ct)),fr(o,N,E,!J);return}GN(o,d,g,x,E,L,V,pt,vt,ct)}function l_(o){for(var c=o;;){var d=c.tag;if((d===0||d===11||d===15)&&c.flags&16384&&(d=c.updateQueue,d!==null&&(d=d.stores,d!==null)))for(var g=0;g<d.length;g++){var x=d[g],N=x.getSnapshot;x=x.value;try{if(!Ns(N(),x))return!1}catch{return!1}}if(d=c.child,c.subtreeFlags&16384&&d!==null)d.return=c,c=d;else{if(c===o)break;for(;c.sibling===null;){if(c.return===null||c.return===o)return!0;c=c.return}c.sibling.return=c.return,c=c.sibling}}return!0}function fr(o,c,d,g){c&=~Oy,c&=~Ki,o.suspendedLanes|=c,o.pingedLanes&=~c,g&&(o.warmLanes|=c),g=o.expirationTimes;for(var x=c;0<x;){var N=31-Ss(x),E=1<<N;g[N]=-1,x&=~E}d!==0&&Qv(o,d,c)}function qd(){return(Le&6)===0?(Xu(0),!1):!0}function Vy(){if(Qt!==null){if(ke===0)var o=Qt.return;else o=Qt,rr=Hi=null,qg(o),Jo=null,Iu=0,o=Qt;for(;o!==null;)_N(o.alternate,o),o=o.return;Qt=null}}function hl(o,c){o.finishedWork=null,o.finishedLanes=0;var d=o.timeoutHandle;d!==-1&&(o.timeoutHandle=-1,k_(d)),d=o.cancelPendingCommit,d!==null&&(o.cancelPendingCommit=null,d()),Vy(),$e=o,Qt=d=Hr(o.current,null),le=c,ke=0,$s=null,hr=!1,ul=cu(o,c),Dy=!1,cl=Hs=Oy=Ki=qr=Ue=0,Fa=Hu=null,_y=!1,(c&8)!==0&&(c|=c&32);var g=o.entangledLanes;if(g!==0)for(o=o.entanglements,g&=c;0<g;){var x=31-Ss(g),N=1<<x;c|=o[x],g&=~N}return dr=c,gd(),d}function MN(o,c){Kt=null,R.H=_a,c===$u?(c=Jw(),ke=3):c===Yw?(c=Jw(),ke=4):ke=c===ZS?8:c!==null&&typeof c=="object"&&typeof c.then=="function"?6:1,$s=c,Qt===null&&(Ue=1,Ld(o,Ms(c,o.current)))}function BN(){var o=R.H;return R.H=_a,o===null?_a:o}function VN(){var o=R.A;return R.A=i_,o}function Py(){Ue=4,hr||(le&4194176)!==le&&Ps.current!==null||(ul=!0),(qr&134217727)===0&&(Ki&134217727)===0||$e===null||fr($e,le,Hs,!1)}function Uy(o,c,d){var g=Le;Le|=2;var x=BN(),N=VN();($e!==o||le!==c)&&(Gd=null,hl(o,c)),c=!1;var E=Ue;t:do try{if(ke!==0&&Qt!==null){var L=Qt,V=$s;switch(ke){case 8:Vy(),E=6;break t;case 3:case 2:case 6:Ps.current===null&&(c=!0);var J=ke;if(ke=0,$s=null,dl(o,L,V,J),d&&ul){E=0;break t}break;default:J=ke,ke=0,$s=null,dl(o,L,V,J)}}u_(),E=Ue;break}catch(pt){MN(o,pt)}while(!0);return c&&o.shellSuspendCounter++,rr=Hi=null,Le=g,R.H=x,R.A=N,Qt===null&&($e=null,le=0,gd()),E}function u_(){for(;Qt!==null;)PN(Qt)}function c_(o,c){var d=Le;Le|=2;var g=BN(),x=VN();$e!==o||le!==c?(Gd=null,Wd=Ve()+500,hl(o,c)):ul=cu(o,c);t:do try{if(ke!==0&&Qt!==null){c=Qt;var N=$s;e:switch(ke){case 1:ke=0,$s=null,dl(o,c,N,1);break;case 2:if(Zw(N)){ke=0,$s=null,UN(c);break}c=function(){ke===2&&$e===o&&(ke=7),La(o)},N.then(c,c);break t;case 3:ke=7;break t;case 4:ke=5;break t;case 7:Zw(N)?(ke=0,$s=null,UN(c)):(ke=0,$s=null,dl(o,c,N,7));break;case 5:var E=null;switch(Qt.tag){case 26:E=Qt.memoizedState;case 5:case 27:var L=Qt;if(!E||yC(E)){ke=0,$s=null;var V=L.sibling;if(V!==null)Qt=V;else{var J=L.return;J!==null?(Qt=J,jd(J)):Qt=null}break e}}ke=0,$s=null,dl(o,c,N,5);break;case 6:ke=0,$s=null,dl(o,c,N,6);break;case 8:Vy(),Ue=6;break t;default:throw Error(s(462))}}h_();break}catch(pt){MN(o,pt)}while(!0);return rr=Hi=null,R.H=g,R.A=x,Le=d,Qt!==null?0:($e=null,le=0,gd(),Ue)}function h_(){for(;Qt!==null&&!Xn();)PN(Qt)}function PN(o){var c=uN(o.alternate,o,dr);o.memoizedProps=o.pendingProps,c===null?jd(o):Qt=c}function UN(o){var c=o,d=c.alternate;switch(c.tag){case 15:case 0:c=sN(d,c,c.pendingProps,c.type,void 0,le);break;case 11:c=sN(d,c,c.pendingProps,c.type.render,c.ref,le);break;case 5:qg(c);default:_N(d,c),c=Qt=RN(c,dr),c=uN(d,c,dr)}o.memoizedProps=o.pendingProps,c===null?jd(o):Qt=c}function dl(o,c,d,g){rr=Hi=null,qg(c),Jo=null,Iu=0;var x=c.return;try{if(JO(o,x,c,d,le)){Ue=1,Ld(o,Ms(d,o.current)),Qt=null;return}}catch(N){if(x!==null)throw Qt=x,N;Ue=1,Ld(o,Ms(d,o.current)),Qt=null;return}c.flags&32768?(he||g===1?o=!0:ul||(le&536870912)!==0?o=!1:(hr=o=!0,(g===2||g===3||g===6)&&(g=Ps.current,g!==null&&g.tag===13&&(g.flags|=16384))),WN(c,o)):jd(c)}function jd(o){var c=o;do{if((c.flags&32768)!==0){WN(c,hr);return}o=c.return;var d=a_(c.alternate,c,dr);if(d!==null){Qt=d;return}if(c=c.sibling,c!==null){Qt=c;return}Qt=c=o}while(c!==null);Ue===0&&(Ue=5)}function WN(o,c){do{var d=r_(o.alternate,o);if(d!==null){d.flags&=32767,Qt=d;return}if(d=o.return,d!==null&&(d.flags|=32768,d.subtreeFlags=0,d.deletions=null),!c&&(o=o.sibling,o!==null)){Qt=o;return}Qt=o=d}while(o!==null);Ue=6,Qt=null}function GN(o,c,d,g,x,N,E,L,V,J){var pt=R.T,vt=ut.p;try{ut.p=2,R.T=null,d_(o,c,d,g,vt,x,N,E,L,V,J)}finally{R.T=pt,ut.p=vt}}function d_(o,c,d,g,x,N,E,L){do fl();while(Yi!==null);if((Le&6)!==0)throw Error(s(327));var V=o.finishedWork;if(g=o.finishedLanes,V===null)return null;if(o.finishedWork=null,o.finishedLanes=0,V===o.current)throw Error(s(177));o.callbackNode=null,o.callbackPriority=0,o.cancelPendingCommit=null;var J=V.lanes|V.childLanes;if(J|=Rg,GD(o,g,J,N,E,L),o===$e&&(Qt=$e=null,le=0),(V.subtreeFlags&10256)===0&&(V.flags&10256)===0||Hd||(Hd=!0,Ly=J,zy=d,g_(ws,function(){return fl(),null})),d=(V.flags&15990)!==0,(V.subtreeFlags&15990)!==0||d?(d=R.T,R.T=null,N=ut.p,ut.p=2,E=Le,Le|=4,e_(o,V),CN(V,o),LO(tb,o.containerInfo),rf=!!Jy,tb=Jy=null,o.current=V,vN(o,V.alternate,V),Za(),Le=E,ut.p=N,R.T=d):o.current=V,Hd?(Hd=!1,Yi=o,qu=g):HN(o,J),J=o.pendingLanes,J===0&&(jr=null),lg(V.stateNode),La(o),c!==null)for(x=o.onRecoverableError,V=0;V<c.length;V++)J=c[V],x(J.value,{componentStack:J.stack});return(qu&3)!==0&&fl(),J=o.pendingLanes,(g&4194218)!==0&&(J&42)!==0?o===My?ju++:(ju=0,My=o):ju=0,Xu(0),null}function HN(o,c){(o.pooledCacheLanes&=c)===0&&(c=o.pooledCache,c!=null&&(o.pooledCache=null,Au(c)))}function fl(){if(Yi!==null){var o=Yi,c=Ly;Ly=0;var d=tw(qu),g=R.T,x=ut.p;try{if(ut.p=32>d?32:d,R.T=null,Yi===null)var N=!1;else{d=zy,zy=null;var E=Yi,L=qu;if(Yi=null,qu=0,(Le&6)!==0)throw Error(s(331));var V=Le;if(Le|=4,EN(E.current),$N(E,E.current,L,d),Le=V,Xu(0,!1),Kn&&typeof Kn.onPostCommitFiberRoot=="function")try{Kn.onPostCommitFiberRoot(Ra,E)}catch{}N=!0}return N}finally{ut.p=x,R.T=g,HN(o,c)}}return!1}function qN(o,c,d){c=Ms(d,c),c=iy(o.stateNode,c,2),o=Pr(o,c,2),o!==null&&(hu(o,2),La(o))}function Ne(o,c,d){if(o.tag===3)qN(o,o,d);else for(;c!==null;){if(c.tag===3){qN(c,o,d);break}else if(c.tag===1){var g=c.stateNode;if(typeof c.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(jr===null||!jr.has(g))){o=Ms(d,o),d=KS(2),g=Pr(c,d,2),g!==null&&(YS(d,g,c,o),hu(g,2),La(g));break}}c=c.return}}function Wy(o,c,d){var g=o.pingCache;if(g===null){g=o.pingCache=new o_;var x=new Set;g.set(c,x)}else x=g.get(c),x===void 0&&(x=new Set,g.set(c,x));x.has(d)||(Dy=!0,x.add(d),o=f_.bind(null,o,c,d),c.then(o,o))}function f_(o,c,d){var g=o.pingCache;g!==null&&g.delete(c),o.pingedLanes|=o.suspendedLanes&d,o.warmLanes&=~d,$e===o&&(le&d)===d&&(Ue===4||Ue===3&&(le&62914560)===le&&300>Ve()-Fy?(Le&2)===0&&hl(o,0):Oy|=d,cl===le&&(cl=0)),La(o)}function jN(o,c){c===0&&(c=Zv()),o=Or(o,c),o!==null&&(hu(o,c),La(o))}function p_(o){var c=o.memoizedState,d=0;c!==null&&(d=c.retryLane),jN(o,d)}function m_(o,c){var d=0;switch(o.tag){case 13:var g=o.stateNode,x=o.memoizedState;x!==null&&(d=x.retryLane);break;case 19:g=o.stateNode;break;case 22:g=o.stateNode._retryCache;break;default:throw Error(s(314))}g!==null&&g.delete(c),jN(o,d)}function g_(o,c){return Be(o,c)}var Xd=null,pl=null,Gy=!1,Kd=!1,Hy=!1,Zi=0;function La(o){o!==pl&&o.next===null&&(pl===null?Xd=pl=o:pl=pl.next=o),Kd=!0,Gy||(Gy=!0,b_(y_))}function Xu(o,c){if(!Hy&&Kd){Hy=!0;do for(var d=!1,g=Xd;g!==null;){if(o!==0){var x=g.pendingLanes;if(x===0)var N=0;else{var E=g.suspendedLanes,L=g.pingedLanes;N=(1<<31-Ss(42|o)+1)-1,N&=x&~(E&~L),N=N&201326677?N&201326677|1:N?N|2:0}N!==0&&(d=!0,YN(g,N))}else N=le,N=ad(g,g===$e?N:0),(N&3)===0||cu(g,N)||(d=!0,YN(g,N));g=g.next}while(d);Hy=!1}}function y_(){Kd=Gy=!1;var o=0;Zi!==0&&($_()&&(o=Zi),Zi=0);for(var c=Ve(),d=null,g=Xd;g!==null;){var x=g.next,N=XN(g,c);N===0?(g.next=null,d===null?Xd=x:d.next=x,x===null&&(pl=d)):(d=g,(o!==0||(N&3)!==0)&&(Kd=!0)),g=x}Xu(o)}function XN(o,c){for(var d=o.suspendedLanes,g=o.pingedLanes,x=o.expirationTimes,N=o.pendingLanes&-62914561;0<N;){var E=31-Ss(N),L=1<<E,V=x[E];V===-1?((L&d)===0||(L&g)!==0)&&(x[E]=WD(L,c)):V<=c&&(o.expiredLanes|=L),N&=~L}if(c=$e,d=le,d=ad(o,o===c?d:0),g=o.callbackNode,d===0||o===c&&ke===2||o.cancelPendingCommit!==null)return g!==null&&g!==null&&_s(g),o.callbackNode=null,o.callbackPriority=0;if((d&3)===0||cu(o,d)){if(c=d&-d,c===o.callbackPriority)return c;switch(g!==null&&_s(g),tw(d)){case 2:case 8:d=fa;break;case 32:d=ws;break;case 268435456:d=zo;break;default:d=ws}return g=KN.bind(null,o),d=Be(d,g),o.callbackPriority=c,o.callbackNode=d,c}return g!==null&&g!==null&&_s(g),o.callbackPriority=2,o.callbackNode=null,2}function KN(o,c){var d=o.callbackNode;if(fl()&&o.callbackNode!==d)return null;var g=le;return g=ad(o,o===$e?g:0),g===0?null:(LN(o,g,c),XN(o,Ve()),o.callbackNode!=null&&o.callbackNode===d?KN.bind(null,o):null)}function YN(o,c){if(fl())return null;LN(o,c,!0)}function b_(o){I_(function(){(Le&6)!==0?Be(da,o):o()})}function qy(){return Zi===0&&(Zi=Yv()),Zi}function ZN(o){return o==null||typeof o=="symbol"||typeof o=="boolean"?null:typeof o=="function"?o:ud(""+o)}function QN(o,c){var d=c.ownerDocument.createElement("input");return d.name=c.name,d.value=c.value,o.id&&d.setAttribute("form",o.id),c.parentNode.insertBefore(d,c),o=new FormData(o),d.parentNode.removeChild(d),o}function x_(o,c,d,g,x){if(c==="submit"&&d&&d.stateNode===x){var N=ZN((x[as]||null).action),E=g.submitter;E&&(c=(c=E[as]||null)?ZN(c.formAction):E.getAttribute("formAction"),c!==null&&(N=c,E=null));var L=new fd("action","action",null,g,x);o.push({event:L,listeners:[{instance:null,listener:function(){if(g.defaultPrevented){if(Zi!==0){var V=E?QN(x,E):new FormData(x);ey(d,{pending:!0,data:V,method:x.method,action:N},null,V)}}else typeof N=="function"&&(L.preventDefault(),V=E?QN(x,E):new FormData(x),ey(d,{pending:!0,data:V,method:x.method,action:N},N,V))},currentTarget:x}]})}}for(var jy=0;jy<Gw.length;jy++){var Xy=Gw[jy],v_=Xy.toLowerCase(),w_=Xy[0].toUpperCase()+Xy.slice(1);pa(v_,"on"+w_)}pa(Bw,"onAnimationEnd"),pa(Vw,"onAnimationIteration"),pa(Pw,"onAnimationStart"),pa("dblclick","onDoubleClick"),pa("focusin","onFocus"),pa("focusout","onBlur"),pa(MO,"onTransitionRun"),pa(BO,"onTransitionStart"),pa(VO,"onTransitionCancel"),pa(Uw,"onTransitionEnd"),Po("onMouseEnter",["mouseout","mouseover"]),Po("onMouseLeave",["mouseout","mouseover"]),Po("onPointerEnter",["pointerout","pointerover"]),Po("onPointerLeave",["pointerout","pointerover"]),Di("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),Di("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),Di("onBeforeInput",["compositionend","keypress","textInput","paste"]),Di("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),Di("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),Di("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ku="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),S_=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(Ku));function JN(o,c){c=(c&4)!==0;for(var d=0;d<o.length;d++){var g=o[d],x=g.event;g=g.listeners;t:{var N=void 0;if(c)for(var E=g.length-1;0<=E;E--){var L=g[E],V=L.instance,J=L.currentTarget;if(L=L.listener,V!==N&&x.isPropagationStopped())break t;N=L,x.currentTarget=J;try{N(x)}catch(pt){Fd(pt)}x.currentTarget=null,N=V}else for(E=0;E<g.length;E++){if(L=g[E],V=L.instance,J=L.currentTarget,L=L.listener,V!==N&&x.isPropagationStopped())break t;N=L,x.currentTarget=J;try{N(x)}catch(pt){Fd(pt)}x.currentTarget=null,N=V}}}}function ie(o,c){var d=c[cg];d===void 0&&(d=c[cg]=new Set);var g=o+"__bubble";d.has(g)||(tC(c,o,2,!1),d.add(g))}function Ky(o,c,d){var g=0;c&&(g|=4),tC(d,o,g,c)}var Yd="_reactListening"+Math.random().toString(36).slice(2);function Yy(o){if(!o[Yd]){o[Yd]=!0,sw.forEach(function(d){d!=="selectionchange"&&(S_.has(d)||Ky(d,!1,o),Ky(d,!0,o))});var c=o.nodeType===9?o:o.ownerDocument;c===null||c[Yd]||(c[Yd]=!0,Ky("selectionchange",!1,c))}}function tC(o,c,d,g){switch(NC(c)){case 2:var x=X_;break;case 8:x=K_;break;default:x=ub}d=x.bind(null,c,d,o),x=void 0,!bg||c!=="touchstart"&&c!=="touchmove"&&c!=="wheel"||(x=!0),g?x!==void 0?o.addEventListener(c,d,{capture:!0,passive:x}):o.addEventListener(c,d,!0):x!==void 0?o.addEventListener(c,d,{passive:x}):o.addEventListener(c,d,!1)}function Zy(o,c,d,g,x){var N=g;if((c&1)===0&&(c&2)===0&&g!==null)t:for(;;){if(g===null)return;var E=g.tag;if(E===3||E===4){var L=g.stateNode.containerInfo;if(L===x||L.nodeType===8&&L.parentNode===x)break;if(E===4)for(E=g.return;E!==null;){var V=E.tag;if((V===3||V===4)&&(V=E.stateNode.containerInfo,V===x||V.nodeType===8&&V.parentNode===x))return;E=E.return}for(;L!==null;){if(E=Ri(L),E===null)return;if(V=E.tag,V===5||V===6||V===26||V===27){g=N=E;continue t}L=L.parentNode}}g=g.return}mw(function(){var J=N,pt=gg(d),vt=[];t:{var ct=Ww.get(o);if(ct!==void 0){var ft=fd,_t=o;switch(o){case"keypress":if(hd(d)===0)break t;case"keydown":case"keyup":ft=mO;break;case"focusin":_t="focus",ft=Sg;break;case"focusout":_t="blur",ft=Sg;break;case"beforeblur":case"afterblur":ft=Sg;break;case"click":if(d.button===2)break t;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":ft=bw;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":ft=sO;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":ft=bO;break;case Bw:case Vw:case Pw:ft=iO;break;case Uw:ft=vO;break;case"scroll":case"scrollend":ft=eO;break;case"wheel":ft=SO;break;case"copy":case"cut":case"paste":ft=lO;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":ft=vw;break;case"toggle":case"beforetoggle":ft=CO}var Ut=(c&4)!==0,We=!Ut&&(o==="scroll"||o==="scrollend"),st=Ut?ct!==null?ct+"Capture":null:ct;Ut=[];for(var Z=J,it;Z!==null;){var gt=Z;if(it=gt.stateNode,gt=gt.tag,gt!==5&&gt!==26&&gt!==27||it===null||st===null||(gt=pu(Z,st),gt!=null&&Ut.push(Yu(Z,gt,it))),We)break;Z=Z.return}0<Ut.length&&(ct=new ft(ct,_t,null,d,pt),vt.push({event:ct,listeners:Ut}))}}if((c&7)===0){t:{if(ct=o==="mouseover"||o==="pointerover",ft=o==="mouseout"||o==="pointerout",ct&&d!==mg&&(_t=d.relatedTarget||d.fromElement)&&(Ri(_t)||_t[Mo]))break t;if((ft||ct)&&(ct=pt.window===pt?pt:(ct=pt.ownerDocument)?ct.defaultView||ct.parentWindow:window,ft?(_t=d.relatedTarget||d.toElement,ft=J,_t=_t?Ri(_t):null,_t!==null&&(We=Y(_t),Ut=_t.tag,_t!==We||Ut!==5&&Ut!==27&&Ut!==6)&&(_t=null)):(ft=null,_t=J),ft!==_t)){if(Ut=bw,gt="onMouseLeave",st="onMouseEnter",Z="mouse",(o==="pointerout"||o==="pointerover")&&(Ut=vw,gt="onPointerLeave",st="onPointerEnter",Z="pointer"),We=ft==null?ct:fu(ft),it=_t==null?ct:fu(_t),ct=new Ut(gt,Z+"leave",ft,d,pt),ct.target=We,ct.relatedTarget=it,gt=null,Ri(pt)===J&&(Ut=new Ut(st,Z+"enter",_t,d,pt),Ut.target=it,Ut.relatedTarget=We,gt=Ut),We=gt,ft&&_t)e:{for(Ut=ft,st=_t,Z=0,it=Ut;it;it=ml(it))Z++;for(it=0,gt=st;gt;gt=ml(gt))it++;for(;0<Z-it;)Ut=ml(Ut),Z--;for(;0<it-Z;)st=ml(st),it--;for(;Z--;){if(Ut===st||st!==null&&Ut===st.alternate)break e;Ut=ml(Ut),st=ml(st)}Ut=null}else Ut=null;ft!==null&&eC(vt,ct,ft,Ut,!1),_t!==null&&We!==null&&eC(vt,We,_t,Ut,!0)}}t:{if(ct=J?fu(J):window,ft=ct.nodeName&&ct.nodeName.toLowerCase(),ft==="select"||ft==="input"&&ct.type==="file")var Rt=Iw;else if($w(ct))if(Ew)Rt=_O;else{Rt=DO;var Zt=RO}else ft=ct.nodeName,!ft||ft.toLowerCase()!=="input"||ct.type!=="checkbox"&&ct.type!=="radio"?J&&pg(J.elementType)&&(Rt=Iw):Rt=OO;if(Rt&&(Rt=Rt(o,J))){kw(vt,Rt,d,pt);break t}Zt&&Zt(o,ct,J),o==="focusout"&&J&&ct.type==="number"&&J.memoizedProps.value!=null&&fg(ct,"number",ct.value)}switch(Zt=J?fu(J):window,o){case"focusin":($w(Zt)||Zt.contentEditable==="true")&&(jo=Zt,Ig=J,Su=null);break;case"focusout":Su=Ig=jo=null;break;case"mousedown":Eg=!0;break;case"contextmenu":case"mouseup":case"dragend":Eg=!1,zw(vt,d,pt);break;case"selectionchange":if(zO)break;case"keydown":case"keyup":zw(vt,d,pt)}var zt;if(Cg)t:{switch(o){case"compositionstart":var Bt="onCompositionStart";break t;case"compositionend":Bt="onCompositionEnd";break t;case"compositionupdate":Bt="onCompositionUpdate";break t}Bt=void 0}else qo?Cw(o,d)&&(Bt="onCompositionEnd"):o==="keydown"&&d.keyCode===229&&(Bt="onCompositionStart");Bt&&(ww&&d.locale!=="ko"&&(qo||Bt!=="onCompositionStart"?Bt==="onCompositionEnd"&&qo&&(zt=gw()):(Dr=pt,xg="value"in Dr?Dr.value:Dr.textContent,qo=!0)),Zt=Zd(J,Bt),0<Zt.length&&(Bt=new xw(Bt,o,null,d,pt),vt.push({event:Bt,listeners:Zt}),zt?Bt.data=zt:(zt=Tw(d),zt!==null&&(Bt.data=zt)))),(zt=$O?kO(o,d):IO(o,d))&&(Bt=Zd(J,"onBeforeInput"),0<Bt.length&&(Zt=new xw("onBeforeInput","beforeinput",null,d,pt),vt.push({event:Zt,listeners:Bt}),Zt.data=zt)),x_(vt,o,J,d,pt)}JN(vt,c)})}function Yu(o,c,d){return{instance:o,listener:c,currentTarget:d}}function Zd(o,c){for(var d=c+"Capture",g=[];o!==null;){var x=o,N=x.stateNode;x=x.tag,x!==5&&x!==26&&x!==27||N===null||(x=pu(o,d),x!=null&&g.unshift(Yu(o,x,N)),x=pu(o,c),x!=null&&g.push(Yu(o,x,N))),o=o.return}return g}function ml(o){if(o===null)return null;do o=o.return;while(o&&o.tag!==5&&o.tag!==27);return o||null}function eC(o,c,d,g,x){for(var N=c._reactName,E=[];d!==null&&d!==g;){var L=d,V=L.alternate,J=L.stateNode;if(L=L.tag,V!==null&&V===g)break;L!==5&&L!==26&&L!==27||J===null||(V=J,x?(J=pu(d,N),J!=null&&E.unshift(Yu(d,J,V))):x||(J=pu(d,N),J!=null&&E.push(Yu(d,J,V)))),d=d.return}E.length!==0&&o.push({event:c,listeners:E})}var N_=/\r\n?/g,C_=/\u0000|\uFFFD/g;function nC(o){return(typeof o=="string"?o:""+o).replace(N_,`
`).replace(C_,"")}function sC(o,c){return c=nC(c),nC(o)===c}function Qd(){}function ve(o,c,d,g,x,N){switch(d){case"children":typeof g=="string"?c==="body"||c==="textarea"&&g===""||Wo(o,g):(typeof g=="number"||typeof g=="bigint")&&c!=="body"&&Wo(o,""+g);break;case"className":id(o,"class",g);break;case"tabIndex":id(o,"tabindex",g);break;case"dir":case"role":case"viewBox":case"width":case"height":id(o,d,g);break;case"style":fw(o,g,N);break;case"data":if(c!=="object"){id(o,"data",g);break}case"src":case"href":if(g===""&&(c!=="a"||d!=="href")){o.removeAttribute(d);break}if(g==null||typeof g=="function"||typeof g=="symbol"||typeof g=="boolean"){o.removeAttribute(d);break}g=ud(""+g),o.setAttribute(d,g);break;case"action":case"formAction":if(typeof g=="function"){o.setAttribute(d,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}else typeof N=="function"&&(d==="formAction"?(c!=="input"&&ve(o,c,"name",x.name,x,null),ve(o,c,"formEncType",x.formEncType,x,null),ve(o,c,"formMethod",x.formMethod,x,null),ve(o,c,"formTarget",x.formTarget,x,null)):(ve(o,c,"encType",x.encType,x,null),ve(o,c,"method",x.method,x,null),ve(o,c,"target",x.target,x,null)));if(g==null||typeof g=="symbol"||typeof g=="boolean"){o.removeAttribute(d);break}g=ud(""+g),o.setAttribute(d,g);break;case"onClick":g!=null&&(o.onclick=Qd);break;case"onScroll":g!=null&&ie("scroll",o);break;case"onScrollEnd":g!=null&&ie("scrollend",o);break;case"dangerouslySetInnerHTML":if(g!=null){if(typeof g!="object"||!("__html"in g))throw Error(s(61));if(d=g.__html,d!=null){if(x.children!=null)throw Error(s(60));o.innerHTML=d}}break;case"multiple":o.multiple=g&&typeof g!="function"&&typeof g!="symbol";break;case"muted":o.muted=g&&typeof g!="function"&&typeof g!="symbol";break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":break;case"autoFocus":break;case"xlinkHref":if(g==null||typeof g=="function"||typeof g=="boolean"||typeof g=="symbol"){o.removeAttribute("xlink:href");break}d=ud(""+g),o.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",d);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":g!=null&&typeof g!="function"&&typeof g!="symbol"?o.setAttribute(d,""+g):o.removeAttribute(d);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":g&&typeof g!="function"&&typeof g!="symbol"?o.setAttribute(d,""):o.removeAttribute(d);break;case"capture":case"download":g===!0?o.setAttribute(d,""):g!==!1&&g!=null&&typeof g!="function"&&typeof g!="symbol"?o.setAttribute(d,g):o.removeAttribute(d);break;case"cols":case"rows":case"size":case"span":g!=null&&typeof g!="function"&&typeof g!="symbol"&&!isNaN(g)&&1<=g?o.setAttribute(d,g):o.removeAttribute(d);break;case"rowSpan":case"start":g==null||typeof g=="function"||typeof g=="symbol"||isNaN(g)?o.removeAttribute(d):o.setAttribute(d,g);break;case"popover":ie("beforetoggle",o),ie("toggle",o),rd(o,"popover",g);break;case"xlinkActuate":Ja(o,"http://www.w3.org/1999/xlink","xlink:actuate",g);break;case"xlinkArcrole":Ja(o,"http://www.w3.org/1999/xlink","xlink:arcrole",g);break;case"xlinkRole":Ja(o,"http://www.w3.org/1999/xlink","xlink:role",g);break;case"xlinkShow":Ja(o,"http://www.w3.org/1999/xlink","xlink:show",g);break;case"xlinkTitle":Ja(o,"http://www.w3.org/1999/xlink","xlink:title",g);break;case"xlinkType":Ja(o,"http://www.w3.org/1999/xlink","xlink:type",g);break;case"xmlBase":Ja(o,"http://www.w3.org/XML/1998/namespace","xml:base",g);break;case"xmlLang":Ja(o,"http://www.w3.org/XML/1998/namespace","xml:lang",g);break;case"xmlSpace":Ja(o,"http://www.w3.org/XML/1998/namespace","xml:space",g);break;case"is":rd(o,"is",g);break;case"innerText":case"textContent":break;default:(!(2<d.length)||d[0]!=="o"&&d[0]!=="O"||d[1]!=="n"&&d[1]!=="N")&&(d=JD.get(d)||d,rd(o,d,g))}}function Qy(o,c,d,g,x,N){switch(d){case"style":fw(o,g,N);break;case"dangerouslySetInnerHTML":if(g!=null){if(typeof g!="object"||!("__html"in g))throw Error(s(61));if(d=g.__html,d!=null){if(x.children!=null)throw Error(s(60));o.innerHTML=d}}break;case"children":typeof g=="string"?Wo(o,g):(typeof g=="number"||typeof g=="bigint")&&Wo(o,""+g);break;case"onScroll":g!=null&&ie("scroll",o);break;case"onScrollEnd":g!=null&&ie("scrollend",o);break;case"onClick":g!=null&&(o.onclick=Qd);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":break;case"innerText":case"textContent":break;default:if(!aw.hasOwnProperty(d))t:{if(d[0]==="o"&&d[1]==="n"&&(x=d.endsWith("Capture"),c=d.slice(2,x?d.length-7:void 0),N=o[as]||null,N=N!=null?N[d]:null,typeof N=="function"&&o.removeEventListener(c,N,x),typeof g=="function")){typeof N!="function"&&N!==null&&(d in o?o[d]=null:o.hasAttribute(d)&&o.removeAttribute(d)),o.addEventListener(c,g,x);break t}d in o?o[d]=g:g===!0?o.setAttribute(d,""):rd(o,d,g)}}}function Dn(o,c,d){switch(c){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":ie("error",o),ie("load",o);var g=!1,x=!1,N;for(N in d)if(d.hasOwnProperty(N)){var E=d[N];if(E!=null)switch(N){case"src":g=!0;break;case"srcSet":x=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(s(137,c));default:ve(o,c,N,E,d,null)}}x&&ve(o,c,"srcSet",d.srcSet,d,null),g&&ve(o,c,"src",d.src,d,null);return;case"input":ie("invalid",o);var L=N=E=x=null,V=null,J=null;for(g in d)if(d.hasOwnProperty(g)){var pt=d[g];if(pt!=null)switch(g){case"name":x=pt;break;case"type":E=pt;break;case"checked":V=pt;break;case"defaultChecked":J=pt;break;case"value":N=pt;break;case"defaultValue":L=pt;break;case"children":case"dangerouslySetInnerHTML":if(pt!=null)throw Error(s(137,c));break;default:ve(o,c,g,pt,d,null)}}uw(o,N,L,V,J,E,x,!1),od(o);return;case"select":ie("invalid",o),g=E=N=null;for(x in d)if(d.hasOwnProperty(x)&&(L=d[x],L!=null))switch(x){case"value":N=L;break;case"defaultValue":E=L;break;case"multiple":g=L;default:ve(o,c,x,L,d,null)}c=N,d=E,o.multiple=!!g,c!=null?Uo(o,!!g,c,!1):d!=null&&Uo(o,!!g,d,!0);return;case"textarea":ie("invalid",o),N=x=g=null;for(E in d)if(d.hasOwnProperty(E)&&(L=d[E],L!=null))switch(E){case"value":g=L;break;case"defaultValue":x=L;break;case"children":N=L;break;case"dangerouslySetInnerHTML":if(L!=null)throw Error(s(91));break;default:ve(o,c,E,L,d,null)}hw(o,g,x,N),od(o);return;case"option":for(V in d)if(d.hasOwnProperty(V)&&(g=d[V],g!=null))switch(V){case"selected":o.selected=g&&typeof g!="function"&&typeof g!="symbol";break;default:ve(o,c,V,g,d,null)}return;case"dialog":ie("cancel",o),ie("close",o);break;case"iframe":case"object":ie("load",o);break;case"video":case"audio":for(g=0;g<Ku.length;g++)ie(Ku[g],o);break;case"image":ie("error",o),ie("load",o);break;case"details":ie("toggle",o);break;case"embed":case"source":case"link":ie("error",o),ie("load",o);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(J in d)if(d.hasOwnProperty(J)&&(g=d[J],g!=null))switch(J){case"children":case"dangerouslySetInnerHTML":throw Error(s(137,c));default:ve(o,c,J,g,d,null)}return;default:if(pg(c)){for(pt in d)d.hasOwnProperty(pt)&&(g=d[pt],g!==void 0&&Qy(o,c,pt,g,d,void 0));return}}for(L in d)d.hasOwnProperty(L)&&(g=d[L],g!=null&&ve(o,c,L,g,d,null))}function T_(o,c,d,g){switch(c){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var x=null,N=null,E=null,L=null,V=null,J=null,pt=null;for(ft in d){var vt=d[ft];if(d.hasOwnProperty(ft)&&vt!=null)switch(ft){case"checked":break;case"value":break;case"defaultValue":V=vt;default:g.hasOwnProperty(ft)||ve(o,c,ft,null,g,vt)}}for(var ct in g){var ft=g[ct];if(vt=d[ct],g.hasOwnProperty(ct)&&(ft!=null||vt!=null))switch(ct){case"type":N=ft;break;case"name":x=ft;break;case"checked":J=ft;break;case"defaultChecked":pt=ft;break;case"value":E=ft;break;case"defaultValue":L=ft;break;case"children":case"dangerouslySetInnerHTML":if(ft!=null)throw Error(s(137,c));break;default:ft!==vt&&ve(o,c,ct,ft,g,vt)}}dg(o,E,L,V,J,pt,N,x);return;case"select":ft=E=L=ct=null;for(N in d)if(V=d[N],d.hasOwnProperty(N)&&V!=null)switch(N){case"value":break;case"multiple":ft=V;default:g.hasOwnProperty(N)||ve(o,c,N,null,g,V)}for(x in g)if(N=g[x],V=d[x],g.hasOwnProperty(x)&&(N!=null||V!=null))switch(x){case"value":ct=N;break;case"defaultValue":L=N;break;case"multiple":E=N;default:N!==V&&ve(o,c,x,N,g,V)}c=L,d=E,g=ft,ct!=null?Uo(o,!!d,ct,!1):!!g!=!!d&&(c!=null?Uo(o,!!d,c,!0):Uo(o,!!d,d?[]:"",!1));return;case"textarea":ft=ct=null;for(L in d)if(x=d[L],d.hasOwnProperty(L)&&x!=null&&!g.hasOwnProperty(L))switch(L){case"value":break;case"children":break;default:ve(o,c,L,null,g,x)}for(E in g)if(x=g[E],N=d[E],g.hasOwnProperty(E)&&(x!=null||N!=null))switch(E){case"value":ct=x;break;case"defaultValue":ft=x;break;case"children":break;case"dangerouslySetInnerHTML":if(x!=null)throw Error(s(91));break;default:x!==N&&ve(o,c,E,x,g,N)}cw(o,ct,ft);return;case"option":for(var _t in d)if(ct=d[_t],d.hasOwnProperty(_t)&&ct!=null&&!g.hasOwnProperty(_t))switch(_t){case"selected":o.selected=!1;break;default:ve(o,c,_t,null,g,ct)}for(V in g)if(ct=g[V],ft=d[V],g.hasOwnProperty(V)&&ct!==ft&&(ct!=null||ft!=null))switch(V){case"selected":o.selected=ct&&typeof ct!="function"&&typeof ct!="symbol";break;default:ve(o,c,V,ct,g,ft)}return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var Ut in d)ct=d[Ut],d.hasOwnProperty(Ut)&&ct!=null&&!g.hasOwnProperty(Ut)&&ve(o,c,Ut,null,g,ct);for(J in g)if(ct=g[J],ft=d[J],g.hasOwnProperty(J)&&ct!==ft&&(ct!=null||ft!=null))switch(J){case"children":case"dangerouslySetInnerHTML":if(ct!=null)throw Error(s(137,c));break;default:ve(o,c,J,ct,g,ft)}return;default:if(pg(c)){for(var We in d)ct=d[We],d.hasOwnProperty(We)&&ct!==void 0&&!g.hasOwnProperty(We)&&Qy(o,c,We,void 0,g,ct);for(pt in g)ct=g[pt],ft=d[pt],!g.hasOwnProperty(pt)||ct===ft||ct===void 0&&ft===void 0||Qy(o,c,pt,ct,g,ft);return}}for(var st in d)ct=d[st],d.hasOwnProperty(st)&&ct!=null&&!g.hasOwnProperty(st)&&ve(o,c,st,null,g,ct);for(vt in g)ct=g[vt],ft=d[vt],!g.hasOwnProperty(vt)||ct===ft||ct==null&&ft==null||ve(o,c,vt,ct,g,ft)}var Jy=null,tb=null;function Jd(o){return o.nodeType===9?o:o.ownerDocument}function aC(o){switch(o){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function rC(o,c){if(o===0)switch(c){case"svg":return 1;case"math":return 2;default:return 0}return o===1&&c==="foreignObject"?0:o}function eb(o,c){return o==="textarea"||o==="noscript"||typeof c.children=="string"||typeof c.children=="number"||typeof c.children=="bigint"||typeof c.dangerouslySetInnerHTML=="object"&&c.dangerouslySetInnerHTML!==null&&c.dangerouslySetInnerHTML.__html!=null}var nb=null;function $_(){var o=window.event;return o&&o.type==="popstate"?o===nb?!1:(nb=o,!0):(nb=null,!1)}var iC=typeof setTimeout=="function"?setTimeout:void 0,k_=typeof clearTimeout=="function"?clearTimeout:void 0,oC=typeof Promise=="function"?Promise:void 0,I_=typeof queueMicrotask=="function"?queueMicrotask:typeof oC<"u"?function(o){return oC.resolve(null).then(o).catch(E_)}:iC;function E_(o){setTimeout(function(){throw o})}function sb(o,c){var d=c,g=0;do{var x=d.nextSibling;if(o.removeChild(d),x&&x.nodeType===8)if(d=x.data,d==="/$"){if(g===0){o.removeChild(x),ac(c);return}g--}else d!=="$"&&d!=="$?"&&d!=="$!"||g++;d=x}while(d);ac(c)}function ab(o){var c=o.firstChild;for(c&&c.nodeType===10&&(c=c.nextSibling);c;){var d=c;switch(c=c.nextSibling,d.nodeName){case"HTML":case"HEAD":case"BODY":ab(d),hg(d);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if(d.rel.toLowerCase()==="stylesheet")continue}o.removeChild(d)}}function A_(o,c,d,g){for(;o.nodeType===1;){var x=d;if(o.nodeName.toLowerCase()!==c.toLowerCase()){if(!g&&(o.nodeName!=="INPUT"||o.type!=="hidden"))break}else if(g){if(!o[du])switch(c){case"meta":if(!o.hasAttribute("itemprop"))break;return o;case"link":if(N=o.getAttribute("rel"),N==="stylesheet"&&o.hasAttribute("data-precedence"))break;if(N!==x.rel||o.getAttribute("href")!==(x.href==null?null:x.href)||o.getAttribute("crossorigin")!==(x.crossOrigin==null?null:x.crossOrigin)||o.getAttribute("title")!==(x.title==null?null:x.title))break;return o;case"style":if(o.hasAttribute("data-precedence"))break;return o;case"script":if(N=o.getAttribute("src"),(N!==(x.src==null?null:x.src)||o.getAttribute("type")!==(x.type==null?null:x.type)||o.getAttribute("crossorigin")!==(x.crossOrigin==null?null:x.crossOrigin))&&N&&o.hasAttribute("async")&&!o.hasAttribute("itemprop"))break;return o;default:return o}}else if(c==="input"&&o.type==="hidden"){var N=x.name==null?null:""+x.name;if(x.type==="hidden"&&o.getAttribute("name")===N)return o}else return o;if(o=ya(o.nextSibling),o===null)break}return null}function R_(o,c,d){if(c==="")return null;for(;o.nodeType!==3;)if((o.nodeType!==1||o.nodeName!=="INPUT"||o.type!=="hidden")&&!d||(o=ya(o.nextSibling),o===null))return null;return o}function ya(o){for(;o!=null;o=o.nextSibling){var c=o.nodeType;if(c===1||c===3)break;if(c===8){if(c=o.data,c==="$"||c==="$!"||c==="$?"||c==="F!"||c==="F")break;if(c==="/$")return null}}return o}function lC(o){o=o.previousSibling;for(var c=0;o;){if(o.nodeType===8){var d=o.data;if(d==="$"||d==="$!"||d==="$?"){if(c===0)return o;c--}else d==="/$"&&c++}o=o.previousSibling}return null}function uC(o,c,d){switch(c=Jd(d),o){case"html":if(o=c.documentElement,!o)throw Error(s(452));return o;case"head":if(o=c.head,!o)throw Error(s(453));return o;case"body":if(o=c.body,!o)throw Error(s(454));return o;default:throw Error(s(451))}}var qs=new Map,cC=new Set;function tf(o){return typeof o.getRootNode=="function"?o.getRootNode():o.ownerDocument}var pr=ut.d;ut.d={f:D_,r:O_,D:__,C:F_,L:L_,m:z_,X:B_,S:M_,M:V_};function D_(){var o=pr.f(),c=qd();return o||c}function O_(o){var c=Bo(o);c!==null&&c.tag===5&&c.type==="form"?zS(c):pr.r(o)}var gl=typeof document>"u"?null:document;function hC(o,c,d){var g=gl;if(g&&typeof c=="string"&&c){var x=Ls(c);x='link[rel="'+o+'"][href="'+x+'"]',typeof d=="string"&&(x+='[crossorigin="'+d+'"]'),cC.has(x)||(cC.add(x),o={rel:o,crossOrigin:d,href:c},g.querySelector(x)===null&&(c=g.createElement("link"),Dn(c,"link",o),bn(c),g.head.appendChild(c)))}}function __(o){pr.D(o),hC("dns-prefetch",o,null)}function F_(o,c){pr.C(o,c),hC("preconnect",o,c)}function L_(o,c,d){pr.L(o,c,d);var g=gl;if(g&&o&&c){var x='link[rel="preload"][as="'+Ls(c)+'"]';c==="image"&&d&&d.imageSrcSet?(x+='[imagesrcset="'+Ls(d.imageSrcSet)+'"]',typeof d.imageSizes=="string"&&(x+='[imagesizes="'+Ls(d.imageSizes)+'"]')):x+='[href="'+Ls(o)+'"]';var N=x;switch(c){case"style":N=yl(o);break;case"script":N=bl(o)}qs.has(N)||(o=_({rel:"preload",href:c==="image"&&d&&d.imageSrcSet?void 0:o,as:c},d),qs.set(N,o),g.querySelector(x)!==null||c==="style"&&g.querySelector(Zu(N))||c==="script"&&g.querySelector(Qu(N))||(c=g.createElement("link"),Dn(c,"link",o),bn(c),g.head.appendChild(c)))}}function z_(o,c){pr.m(o,c);var d=gl;if(d&&o){var g=c&&typeof c.as=="string"?c.as:"script",x='link[rel="modulepreload"][as="'+Ls(g)+'"][href="'+Ls(o)+'"]',N=x;switch(g){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":N=bl(o)}if(!qs.has(N)&&(o=_({rel:"modulepreload",href:o},c),qs.set(N,o),d.querySelector(x)===null)){switch(g){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(d.querySelector(Qu(N)))return}g=d.createElement("link"),Dn(g,"link",o),bn(g),d.head.appendChild(g)}}}function M_(o,c,d){pr.S(o,c,d);var g=gl;if(g&&o){var x=Vo(g).hoistableStyles,N=yl(o);c=c||"default";var E=x.get(N);if(!E){var L={loading:0,preload:null};if(E=g.querySelector(Zu(N)))L.loading=5;else{o=_({rel:"stylesheet",href:o,"data-precedence":c},d),(d=qs.get(N))&&rb(o,d);var V=E=g.createElement("link");bn(V),Dn(V,"link",o),V._p=new Promise(function(J,pt){V.onload=J,V.onerror=pt}),V.addEventListener("load",function(){L.loading|=1}),V.addEventListener("error",function(){L.loading|=2}),L.loading|=4,ef(E,c,g)}E={type:"stylesheet",instance:E,count:1,state:L},x.set(N,E)}}}function B_(o,c){pr.X(o,c);var d=gl;if(d&&o){var g=Vo(d).hoistableScripts,x=bl(o),N=g.get(x);N||(N=d.querySelector(Qu(x)),N||(o=_({src:o,async:!0},c),(c=qs.get(x))&&ib(o,c),N=d.createElement("script"),bn(N),Dn(N,"link",o),d.head.appendChild(N)),N={type:"script",instance:N,count:1,state:null},g.set(x,N))}}function V_(o,c){pr.M(o,c);var d=gl;if(d&&o){var g=Vo(d).hoistableScripts,x=bl(o),N=g.get(x);N||(N=d.querySelector(Qu(x)),N||(o=_({src:o,async:!0,type:"module"},c),(c=qs.get(x))&&ib(o,c),N=d.createElement("script"),bn(N),Dn(N,"link",o),d.head.appendChild(N)),N={type:"script",instance:N,count:1,state:null},g.set(x,N))}}function dC(o,c,d,g){var x=(x=ee.current)?tf(x):null;if(!x)throw Error(s(446));switch(o){case"meta":case"title":return null;case"style":return typeof d.precedence=="string"&&typeof d.href=="string"?(c=yl(d.href),d=Vo(x).hoistableStyles,g=d.get(c),g||(g={type:"style",instance:null,count:0,state:null},d.set(c,g)),g):{type:"void",instance:null,count:0,state:null};case"link":if(d.rel==="stylesheet"&&typeof d.href=="string"&&typeof d.precedence=="string"){o=yl(d.href);var N=Vo(x).hoistableStyles,E=N.get(o);if(E||(x=x.ownerDocument||x,E={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},N.set(o,E),(N=x.querySelector(Zu(o)))&&!N._p&&(E.instance=N,E.state.loading=5),qs.has(o)||(d={rel:"preload",as:"style",href:d.href,crossOrigin:d.crossOrigin,integrity:d.integrity,media:d.media,hrefLang:d.hrefLang,referrerPolicy:d.referrerPolicy},qs.set(o,d),N||P_(x,o,d,E.state))),c&&g===null)throw Error(s(528,""));return E}if(c&&g!==null)throw Error(s(529,""));return null;case"script":return c=d.async,d=d.src,typeof d=="string"&&c&&typeof c!="function"&&typeof c!="symbol"?(c=bl(d),d=Vo(x).hoistableScripts,g=d.get(c),g||(g={type:"script",instance:null,count:0,state:null},d.set(c,g)),g):{type:"void",instance:null,count:0,state:null};default:throw Error(s(444,o))}}function yl(o){return'href="'+Ls(o)+'"'}function Zu(o){return'link[rel="stylesheet"]['+o+"]"}function fC(o){return _({},o,{"data-precedence":o.precedence,precedence:null})}function P_(o,c,d,g){o.querySelector('link[rel="preload"][as="style"]['+c+"]")?g.loading=1:(c=o.createElement("link"),g.preload=c,c.addEventListener("load",function(){return g.loading|=1}),c.addEventListener("error",function(){return g.loading|=2}),Dn(c,"link",d),bn(c),o.head.appendChild(c))}function bl(o){return'[src="'+Ls(o)+'"]'}function Qu(o){return"script[async]"+o}function pC(o,c,d){if(c.count++,c.instance===null)switch(c.type){case"style":var g=o.querySelector('style[data-href~="'+Ls(d.href)+'"]');if(g)return c.instance=g,bn(g),g;var x=_({},d,{"data-href":d.href,"data-precedence":d.precedence,href:null,precedence:null});return g=(o.ownerDocument||o).createElement("style"),bn(g),Dn(g,"style",x),ef(g,d.precedence,o),c.instance=g;case"stylesheet":x=yl(d.href);var N=o.querySelector(Zu(x));if(N)return c.state.loading|=4,c.instance=N,bn(N),N;g=fC(d),(x=qs.get(x))&&rb(g,x),N=(o.ownerDocument||o).createElement("link"),bn(N);var E=N;return E._p=new Promise(function(L,V){E.onload=L,E.onerror=V}),Dn(N,"link",g),c.state.loading|=4,ef(N,d.precedence,o),c.instance=N;case"script":return N=bl(d.src),(x=o.querySelector(Qu(N)))?(c.instance=x,bn(x),x):(g=d,(x=qs.get(N))&&(g=_({},d),ib(g,x)),o=o.ownerDocument||o,x=o.createElement("script"),bn(x),Dn(x,"link",g),o.head.appendChild(x),c.instance=x);case"void":return null;default:throw Error(s(443,c.type))}else c.type==="stylesheet"&&(c.state.loading&4)===0&&(g=c.instance,c.state.loading|=4,ef(g,d.precedence,o));return c.instance}function ef(o,c,d){for(var g=d.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),x=g.length?g[g.length-1]:null,N=x,E=0;E<g.length;E++){var L=g[E];if(L.dataset.precedence===c)N=L;else if(N!==x)break}N?N.parentNode.insertBefore(o,N.nextSibling):(c=d.nodeType===9?d.head:d,c.insertBefore(o,c.firstChild))}function rb(o,c){o.crossOrigin==null&&(o.crossOrigin=c.crossOrigin),o.referrerPolicy==null&&(o.referrerPolicy=c.referrerPolicy),o.title==null&&(o.title=c.title)}function ib(o,c){o.crossOrigin==null&&(o.crossOrigin=c.crossOrigin),o.referrerPolicy==null&&(o.referrerPolicy=c.referrerPolicy),o.integrity==null&&(o.integrity=c.integrity)}var nf=null;function mC(o,c,d){if(nf===null){var g=new Map,x=nf=new Map;x.set(d,g)}else x=nf,g=x.get(d),g||(g=new Map,x.set(d,g));if(g.has(o))return g;for(g.set(o,null),d=d.getElementsByTagName(o),x=0;x<d.length;x++){var N=d[x];if(!(N[du]||N[zn]||o==="link"&&N.getAttribute("rel")==="stylesheet")&&N.namespaceURI!=="http://www.w3.org/2000/svg"){var E=N.getAttribute(c)||"";E=o+E;var L=g.get(E);L?L.push(N):g.set(E,[N])}}return g}function gC(o,c,d){o=o.ownerDocument||o,o.head.insertBefore(d,c==="title"?o.querySelector("head > title"):null)}function U_(o,c,d){if(d===1||c.itemProp!=null)return!1;switch(o){case"meta":case"title":return!0;case"style":if(typeof c.precedence!="string"||typeof c.href!="string"||c.href==="")break;return!0;case"link":if(typeof c.rel!="string"||typeof c.href!="string"||c.href===""||c.onLoad||c.onError)break;switch(c.rel){case"stylesheet":return o=c.disabled,typeof c.precedence=="string"&&o==null;default:return!0}case"script":if(c.async&&typeof c.async!="function"&&typeof c.async!="symbol"&&!c.onLoad&&!c.onError&&c.src&&typeof c.src=="string")return!0}return!1}function yC(o){return!(o.type==="stylesheet"&&(o.state.loading&3)===0)}var Ju=null;function W_(){}function G_(o,c,d){if(Ju===null)throw Error(s(475));var g=Ju;if(c.type==="stylesheet"&&(typeof d.media!="string"||matchMedia(d.media).matches!==!1)&&(c.state.loading&4)===0){if(c.instance===null){var x=yl(d.href),N=o.querySelector(Zu(x));if(N){o=N._p,o!==null&&typeof o=="object"&&typeof o.then=="function"&&(g.count++,g=sf.bind(g),o.then(g,g)),c.state.loading|=4,c.instance=N,bn(N);return}N=o.ownerDocument||o,d=fC(d),(x=qs.get(x))&&rb(d,x),N=N.createElement("link"),bn(N);var E=N;E._p=new Promise(function(L,V){E.onload=L,E.onerror=V}),Dn(N,"link",d),c.instance=N}g.stylesheets===null&&(g.stylesheets=new Map),g.stylesheets.set(c,o),(o=c.state.preload)&&(c.state.loading&3)===0&&(g.count++,c=sf.bind(g),o.addEventListener("load",c),o.addEventListener("error",c))}}function H_(){if(Ju===null)throw Error(s(475));var o=Ju;return o.stylesheets&&o.count===0&&ob(o,o.stylesheets),0<o.count?function(c){var d=setTimeout(function(){if(o.stylesheets&&ob(o,o.stylesheets),o.unsuspend){var g=o.unsuspend;o.unsuspend=null,g()}},6e4);return o.unsuspend=c,function(){o.unsuspend=null,clearTimeout(d)}}:null}function sf(){if(this.count--,this.count===0){if(this.stylesheets)ob(this,this.stylesheets);else if(this.unsuspend){var o=this.unsuspend;this.unsuspend=null,o()}}}var af=null;function ob(o,c){o.stylesheets=null,o.unsuspend!==null&&(o.count++,af=new Map,c.forEach(q_,o),af=null,sf.call(o))}function q_(o,c){if(!(c.state.loading&4)){var d=af.get(o);if(d)var g=d.get(null);else{d=new Map,af.set(o,d);for(var x=o.querySelectorAll("link[data-precedence],style[data-precedence]"),N=0;N<x.length;N++){var E=x[N];(E.nodeName==="LINK"||E.getAttribute("media")!=="not all")&&(d.set(E.dataset.precedence,E),g=E)}g&&d.set(null,g)}x=c.instance,E=x.getAttribute("data-precedence"),N=d.get(E)||g,N===g&&d.set(null,x),d.set(E,x),this.count++,g=sf.bind(this),x.addEventListener("load",g),x.addEventListener("error",g),N?N.parentNode.insertBefore(x,N.nextSibling):(o=o.nodeType===9?o.head:o,o.insertBefore(x,o.firstChild)),c.state.loading|=4}}var tc={$$typeof:y,Provider:null,Consumer:null,_currentValue:mt,_currentValue2:mt,_threadCount:0};function j_(o,c,d,g,x,N,E,L){this.tag=1,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=ug(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=ug(0),this.hiddenUpdates=ug(null),this.identifierPrefix=g,this.onUncaughtError=x,this.onCaughtError=N,this.onRecoverableError=E,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=L,this.incompleteTransitions=new Map}function bC(o,c,d,g,x,N,E,L,V,J,pt,vt){return o=new j_(o,c,d,E,L,V,J,vt),c=1,N===!0&&(c|=24),N=Gs(3,null,null,c),o.current=N,N.stateNode=o,c=Bg(),c.refCount++,o.pooledCache=c,c.refCount++,N.memoizedState={element:g,isDehydrated:d,cache:c},xy(N),o}function xC(o){return o?(o=Yo,o):Yo}function vC(o,c,d,g,x,N){x=xC(x),g.context===null?g.context=x:g.pendingContext=x,g=Vr(c),g.payload={element:d},N=N===void 0?null:N,N!==null&&(g.callback=N),d=Pr(o,g,c),d!==null&&(Zn(d,o,c),zu(d,o,c))}function wC(o,c){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var d=o.retryLane;o.retryLane=d!==0&&d<c?d:c}}function lb(o,c){wC(o,c),(o=o.alternate)&&wC(o,c)}function SC(o){if(o.tag===13){var c=Or(o,67108864);c!==null&&Zn(c,o,67108864),lb(o,67108864)}}var rf=!0;function X_(o,c,d,g){var x=R.T;R.T=null;var N=ut.p;try{ut.p=2,ub(o,c,d,g)}finally{ut.p=N,R.T=x}}function K_(o,c,d,g){var x=R.T;R.T=null;var N=ut.p;try{ut.p=8,ub(o,c,d,g)}finally{ut.p=N,R.T=x}}function ub(o,c,d,g){if(rf){var x=cb(g);if(x===null)Zy(o,c,g,of,d),CC(o,g);else if(Z_(x,o,c,d,g))g.stopPropagation();else if(CC(o,g),c&4&&-1<Y_.indexOf(o)){for(;x!==null;){var N=Bo(x);if(N!==null)switch(N.tag){case 3:if(N=N.stateNode,N.current.memoizedState.isDehydrated){var E=Ai(N.pendingLanes);if(E!==0){var L=N;for(L.pendingLanes|=2,L.entangledLanes|=2;E;){var V=1<<31-Ss(E);L.entanglements[1]|=V,E&=~V}La(N),(Le&6)===0&&(Wd=Ve()+500,Xu(0))}}break;case 13:L=Or(N,2),L!==null&&Zn(L,N,2),qd(),lb(N,2)}if(N=cb(g),N===null&&Zy(o,c,g,of,d),N===x)break;x=N}x!==null&&g.stopPropagation()}else Zy(o,c,g,null,d)}}function cb(o){return o=gg(o),hb(o)}var of=null;function hb(o){if(of=null,o=Ri(o),o!==null){var c=Y(o);if(c===null)o=null;else{var d=c.tag;if(d===13){if(o=at(c),o!==null)return o;o=null}else if(d===3){if(c.stateNode.current.memoizedState.isDehydrated)return c.tag===3?c.stateNode.containerInfo:null;o=null}else c!==o&&(o=null)}}return of=o,null}function NC(o){switch(o){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(ha()){case da:return 2;case fa:return 8;case ws:case Ei:return 32;case zo:return 268435456;default:return 32}default:return 32}}var db=!1,Xr=null,Kr=null,Yr=null,ec=new Map,nc=new Map,Zr=[],Y_="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function CC(o,c){switch(o){case"focusin":case"focusout":Xr=null;break;case"dragenter":case"dragleave":Kr=null;break;case"mouseover":case"mouseout":Yr=null;break;case"pointerover":case"pointerout":ec.delete(c.pointerId);break;case"gotpointercapture":case"lostpointercapture":nc.delete(c.pointerId)}}function sc(o,c,d,g,x,N){return o===null||o.nativeEvent!==N?(o={blockedOn:c,domEventName:d,eventSystemFlags:g,nativeEvent:N,targetContainers:[x]},c!==null&&(c=Bo(c),c!==null&&SC(c)),o):(o.eventSystemFlags|=g,c=o.targetContainers,x!==null&&c.indexOf(x)===-1&&c.push(x),o)}function Z_(o,c,d,g,x){switch(c){case"focusin":return Xr=sc(Xr,o,c,d,g,x),!0;case"dragenter":return Kr=sc(Kr,o,c,d,g,x),!0;case"mouseover":return Yr=sc(Yr,o,c,d,g,x),!0;case"pointerover":var N=x.pointerId;return ec.set(N,sc(ec.get(N)||null,o,c,d,g,x)),!0;case"gotpointercapture":return N=x.pointerId,nc.set(N,sc(nc.get(N)||null,o,c,d,g,x)),!0}return!1}function TC(o){var c=Ri(o.target);if(c!==null){var d=Y(c);if(d!==null){if(c=d.tag,c===13){if(c=at(d),c!==null){o.blockedOn=c,HD(o.priority,function(){if(d.tag===13){var g=ks(),x=Or(d,g);x!==null&&Zn(x,d,g),lb(d,g)}});return}}else if(c===3&&d.stateNode.current.memoizedState.isDehydrated){o.blockedOn=d.tag===3?d.stateNode.containerInfo:null;return}}}o.blockedOn=null}function lf(o){if(o.blockedOn!==null)return!1;for(var c=o.targetContainers;0<c.length;){var d=cb(o.nativeEvent);if(d===null){d=o.nativeEvent;var g=new d.constructor(d.type,d);mg=g,d.target.dispatchEvent(g),mg=null}else return c=Bo(d),c!==null&&SC(c),o.blockedOn=d,!1;c.shift()}return!0}function $C(o,c,d){lf(o)&&d.delete(c)}function Q_(){db=!1,Xr!==null&&lf(Xr)&&(Xr=null),Kr!==null&&lf(Kr)&&(Kr=null),Yr!==null&&lf(Yr)&&(Yr=null),ec.forEach($C),nc.forEach($C)}function uf(o,c){o.blockedOn===c&&(o.blockedOn=null,db||(db=!0,n.unstable_scheduleCallback(n.unstable_NormalPriority,Q_)))}var cf=null;function kC(o){cf!==o&&(cf=o,n.unstable_scheduleCallback(n.unstable_NormalPriority,function(){cf===o&&(cf=null);for(var c=0;c<o.length;c+=3){var d=o[c],g=o[c+1],x=o[c+2];if(typeof g!="function"){if(hb(g||d)===null)continue;break}var N=Bo(d);N!==null&&(o.splice(c,3),c-=3,ey(N,{pending:!0,data:x,method:d.method,action:g},g,x))}}))}function ac(o){function c(V){return uf(V,o)}Xr!==null&&uf(Xr,o),Kr!==null&&uf(Kr,o),Yr!==null&&uf(Yr,o),ec.forEach(c),nc.forEach(c);for(var d=0;d<Zr.length;d++){var g=Zr[d];g.blockedOn===o&&(g.blockedOn=null)}for(;0<Zr.length&&(d=Zr[0],d.blockedOn===null);)TC(d),d.blockedOn===null&&Zr.shift();if(d=(o.ownerDocument||o).$$reactFormReplay,d!=null)for(g=0;g<d.length;g+=3){var x=d[g],N=d[g+1],E=x[as]||null;if(typeof N=="function")E||kC(d);else if(E){var L=null;if(N&&N.hasAttribute("formAction")){if(x=N,E=N[as]||null)L=E.formAction;else if(hb(x)!==null)continue}else L=E.action;typeof L=="function"?d[g+1]=L:(d.splice(g,3),g-=3),kC(d)}}}function fb(o){this._internalRoot=o}hf.prototype.render=fb.prototype.render=function(o){var c=this._internalRoot;if(c===null)throw Error(s(409));var d=c.current,g=ks();vC(d,g,o,c,null,null)},hf.prototype.unmount=fb.prototype.unmount=function(){var o=this._internalRoot;if(o!==null){this._internalRoot=null;var c=o.containerInfo;o.tag===0&&fl(),vC(o.current,2,null,o,null,null),qd(),c[Mo]=null}};function hf(o){this._internalRoot=o}hf.prototype.unstable_scheduleHydration=function(o){if(o){var c=ew();o={blockedOn:null,target:o,priority:c};for(var d=0;d<Zr.length&&c!==0&&c<Zr[d].priority;d++);Zr.splice(d,0,o),d===0&&TC(o)}};var IC=t.version;if(IC!=="19.0.0")throw Error(s(527,IC,"19.0.0"));ut.findDOMNode=function(o){var c=o._reactInternals;if(c===void 0)throw typeof o.render=="function"?Error(s(188)):(o=Object.keys(o).join(","),Error(s(268,o)));return o=j(c),o=o!==null?lt(o):null,o=o===null?null:o.stateNode,o};var J_={bundleType:0,version:"19.0.0",rendererPackageName:"react-dom",currentDispatcherRef:R,findFiberByHostInstance:Ri,reconcilerVersion:"19.0.0"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var df=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!df.isDisabled&&df.supportsFiber)try{Ra=df.inject(J_),Kn=df}catch{}}return oc.createRoot=function(o,c){if(!a(o))throw Error(s(299));var d=!1,g="",x=HS,N=qS,E=jS,L=null;return c!=null&&(c.unstable_strictMode===!0&&(d=!0),c.identifierPrefix!==void 0&&(g=c.identifierPrefix),c.onUncaughtError!==void 0&&(x=c.onUncaughtError),c.onCaughtError!==void 0&&(N=c.onCaughtError),c.onRecoverableError!==void 0&&(E=c.onRecoverableError),c.unstable_transitionCallbacks!==void 0&&(L=c.unstable_transitionCallbacks)),c=bC(o,1,!1,null,null,d,g,x,N,E,L,null),o[Mo]=c.current,Yy(o.nodeType===8?o.parentNode:o),new fb(c)},oc.hydrateRoot=function(o,c,d){if(!a(o))throw Error(s(299));var g=!1,x="",N=HS,E=qS,L=jS,V=null,J=null;return d!=null&&(d.unstable_strictMode===!0&&(g=!0),d.identifierPrefix!==void 0&&(x=d.identifierPrefix),d.onUncaughtError!==void 0&&(N=d.onUncaughtError),d.onCaughtError!==void 0&&(E=d.onCaughtError),d.onRecoverableError!==void 0&&(L=d.onRecoverableError),d.unstable_transitionCallbacks!==void 0&&(V=d.unstable_transitionCallbacks),d.formState!==void 0&&(J=d.formState)),c=bC(o,1,!0,c,d??null,g,x,N,E,L,V,J),c.context=xC(null),d=c.current,g=ks(),x=Vr(g),x.callback=null,Pr(d,x,g),c.current.lanes=g,hu(c,g),La(c),o[Mo]=c.current,Yy(o),new hf(c)},oc.version="19.0.0",oc}var MC;function pF(){if(MC)return gb.exports;MC=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(t){console.error(t)}}return n(),gb.exports=fF(),gb.exports}var mF=pF();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gF=1e-7,yF=1e-4;class O2{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class P0{refCount(t){return os("refCount")}incRef(t){return os("incRef")}timerAvailable(){return!0}time(t){return os("time")}read(t){return os("read")}readSync(t){return os("readSync")}readToGPU(t,e){return os("readToGPU")}numDataIds(){return os("numDataIds")}disposeData(t,e){return os("disposeData")}write(t,e,s){return os("write")}move(t,e,s,a,r){return os("move")}createTensorFromGPUData(t,e,s){return os("createTensorFromGPUData")}memory(){return os("memory")}floatPrecision(){return os("floatPrecision")}epsilon(){return this.floatPrecision()===32?gF:yF}dispose(){return os("dispose")}}function os(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,Sl(n,t,e)}function co(n,t,e){return Math.max(n,Math.min(t,e))}function U0(n){return n%2===0?n:n+1}function Sl(n,t,e){const s=n[t];n[t]=n[e],n[e]=s}function xF(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function O(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function bs(n,t,e=""){O(Jt(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function Hl(n){O(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ht(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function vF(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==null&&t[e]!==null&&n[e]!==t[e])return!1;return!0}function Jt(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function Ol(n){return n%1===0}function Pb(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function $l(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function BC(n,t=a=>0,e,s){return new Promise((a,r)=>{let i=0;const l=()=>{if(n()){a();return}i++;const u=t(i);if(e!=null&&i>=e){r();return}s!=null?s(l,u):setTimeout(l,u)};l()})}function _2(n,t){let e=1,s=-1;for(let r=0;r<n.length;++r)if(n[r]>=0)e*=n[r];else if(n[r]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${r}`);s=r}else if(n[r]<0)throw Error(`Shapes can not be < 0. Found ${n[r]} at dim ${r}`);if(s===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(e===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const a=n.slice();return a[s]=t/e,a}function jt(n,t){const e=t.length;return n=n==null?t.map((s,a)=>a):[].concat(n),O(n.every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),O(n.every(s=>Ol(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function yi(n,t){const e=[],s=[],a=t!=null&&Array.isArray(t)&&t.length===0,r=t==null||a?null:jt(t,n).sort();let i=0;for(let l=0;l<n.length;++l){if(r!=null){if(r[i]===l&&n[l]!==1)throw new Error(`Can't squeeze axis ${l} since its dim '${n[l]}' is not 1`);(r[i]==null||r[i]>l)&&n[l]===1&&(e.push(n[l]),s.push(l)),r[i]<=l&&i++}n[l]!==1&&(e.push(n[l]),s.push(l))}return{newShape:e,keptDims:s}}function Cn(n,t){return Ge(n,t)}function Ge(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else if(n==="string")e=new Array(t);else throw new Error(`Unknown data type ${n}`);return e}function wF(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function SF(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function F2(n,t){return!(t==="complex64"||t==="float32"&&n!=="complex64"||t==="int32"&&n!=="float32"&&n!=="complex64"||t==="bool"&&n==="bool")}function Bf(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function NF(n){if(n==null)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function Fc(n){return typeof n=="string"||n instanceof String}function CF(n){return typeof n=="boolean"}function Ub(n){return typeof n=="number"}function ql(n){return Array.isArray(n)?ql(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Ub(n)?"float32":Fc(n)?"string":CF(n)?"bool":"float32"}function Wb(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Gb(n,t){for(let e=t;e<n;++e)if(n%e===0)return e;return n}function Ft(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function L2(n,t,e,s=!1){const a=new Array;if(t.length===1){const r=t[0]*(s?2:1);for(let i=0;i<r;i++)a[i]=e[n+i]}else{const r=t[0],i=t.slice(1),l=i.reduce((u,h)=>u*h)*(s?2:1);for(let u=0;u<r;u++)a[u]=L2(n+u*l,i,e,s)}return a}function sa(n,t,e=!1){if(n.length===0)return t[0];const s=n.reduce((a,r)=>a*r)*(e?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return L2(0,n,t,e)}function TF(n,t){if(Array.isArray(n))return n;if(t==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(t==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${t}`)}function W0(n,t){const e=_n(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function _n(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function z2(n,t){const e=n.reduce((s,a)=>s*a,1);if(t==null||t==="float32")return sa(n,new Float32Array(e));if(t==="int32")return sa(n,new Int32Array(e));if(t==="bool")return sa(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Ds(n){n.forEach(t=>{O(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Pa(n,t,e){if(t===0)return 0;if(t===1)return n[0];let s=n[n.length-1];for(let a=0;a<n.length-1;++a)s+=e[a]*n[a];return s}function jl(n,t,e){if(t===0)return[];if(t===1)return[n];const s=new Array(t);for(let a=0;a<s.length-1;++a)s[a]=Math.floor(n/e[a]),n-=s[a]*e[a];return s[s.length-1]=n,s}function ho(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VC="tfjsflags";class $F{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=kF,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(rt().getBool("IS_TEST")||rt().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},this.urlFlags[t]!=null){const a=this.urlFlags[t];rt().getBool("IS_TEST")||rt().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${a}.`),this.set(t,a)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(ho(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);VC in t&&t[VC].split(",").forEach(s=>{const[a,r]=s.split(":");this.urlFlags[a]=EF(a,r)})}}function kF(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(IF(t,s[0],s[1]),s.join("="))),t}function IF(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}function EF(n,t){const e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function rt(){return M2}let M2=null;function AF(n){M2=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let vb;function B2(){if(vb==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");vb=n}return vb}function RF(){const n=B2();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function G0(n,t){const e=RF();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const pp="Abs",Lc="Acos",zc="Acosh",Xl="Add",mp="AddN",H0="All",q0="Any",gp="ArgMax",yp="ArgMin",Mc="Asin",Bc="Asinh",Vc="Atan",Pc="Atanh",Uc="Atan2",bp="AvgPool",j0="AvgPoolGrad",xp="AvgPool3D",X0="AvgPool3DGrad",vp="BatchMatMul",wp="BatchToSpaceND",K0="Bincount",Sp="BitwiseAnd",DF="BroadcastTo",Y0="BroadcastArgs",Wc="Cast",Gc="Ceil",Hc="ClipByValue",Z0="Complex",Np="ComplexAbs",Cp="Concat",Tp="Conv2D",Q0="Conv2DBackpropFilter",$p="Conv2DBackpropInput",kp="Conv3D",J0="Conv3DBackpropFilterV2",tx="Conv3DBackpropInputV2",qc="Cos",jc="Cosh",ex="Cumprod",Ip="Cumsum",nx="CropAndResize",sx="DenseBincount",ax="DepthToSpace",Ep="DepthwiseConv2dNative",rx="DepthwiseConv2dNativeBackpropFilter",ix="DepthwiseConv2dNativeBackpropInput",ox="Diag",Ap="Dilation2D",Hb="Dilation2DBackpropInput",qb="Dilation2DBackpropFilter",OF="Draw",Xc="RealDiv",lx="Einsum",Kc="Elu",ux="EluGrad",Yc="Erf",Rp="Equal",Zc="Exp",Dp="ExpandDims",Qc="Expm1",cx="FFT",hx="Fill",dx="FlipLeftRight",Jc="Floor",th="FloorDiv",Op="FusedBatchNorm",_p="GatherV2",fx="GatherNd",Fp="Greater",eh="GreaterEqual",nh="Identity",px="IFFT",mx="Imag",sh="IsFinite",ah="IsInf",rh="IsNan",Lp="LeakyRelu",zp="Less",Mp="LessEqual",gx="LinSpace",ih="Log",oh="Log1p",Bp="LogicalAnd",Vp="LogicalNot",Pp="LogicalOr",_F="LogSoftmax",Up="LRN",yx="LRNGrad",Wp="Max",lh="Maximum",Gp="MaxPool",bx="MaxPoolGrad",Hp="MaxPool3D",xx="MaxPool3DGrad",vx="MaxPoolWithArgmax",qp="Mean",jp="Min",uh="Minimum",Xp="MirrorPad",ch="Mod",wx="Multinomial",hh="Multiply",Kp="Neg",Yp="NotEqual",Sx="NonMaxSuppressionV3",Nx="NonMaxSuppressionV4",Cx="NonMaxSuppressionV5",Zp="OnesLike",Qp="OneHot",Jp="Pack",tm="PadV2",dh="Pow",em="Prelu",nm="Prod",Tx="RaggedGather",$x="RaggedRange",kx="RaggedTensorToTensor",Ix="Range",Ex="Real",fh="Reciprocal",ph="Relu",sm="Reshape",am="ResizeNearestNeighbor",Ax="ResizeNearestNeighborGrad",rm="ResizeBilinear",Rx="ResizeBilinearGrad",mh="Relu6",im="Reverse",gh="Round",yh="Rsqrt",Dx="ScatterNd",Ox="TensorScatterUpdate",_x="SearchSorted",om="Select",bh="Selu",lm="Slice",xh="Sin",vh="Sinh",wh="Sign",Sh="Sigmoid",Nh="Softplus",Ch="Sqrt",um="Sum",cm="SpaceToBatchND",hm="SplitV",dm="Softmax",Fx="SparseFillEmptyRows",Lx="SparseReshape",zx="SparseSegmentMean",Mx="SparseSegmentSum",Bx="SparseToDense",Th="SquaredDifference",Vx="Square",fm="StaticRegexReplace",Px="StridedSlice",Ux="StringNGrams",Wx="StringSplit",Gx="StringToHashBucketFast",$h="Sub",kh="Tan",Ih="Tanh",Eh="Tile",Hx="TopK",qx="Transform",kl="Transpose",jx="Unique",pm="Unpack",mm="UnsortedSegmentSum",gm="ZerosLike",Ah="Step",jb="FromPixels",Xx="RotateWithOffset",Vf="_FusedMatMul",Pf="FusedConv2D",Uf="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Is(...n){rt().getBool("IS_TEST")||rt().getBool("PROD")||console.warn(...n)}function FF(...n){rt().getBool("IS_TEST")||rt().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wf=G0("kernelRegistry",()=>new Map),Xb=G0("gradRegistry",()=>new Map);function Kb(n,t){const e=P2(n,t);return Wf.get(e)}function PC(n){return Xb.get(n)}function UC(n){const t=Wf.entries(),e=[];for(;;){const{done:s,value:a}=t.next();if(s)break;const[r,i]=a,[l]=r.split("_");l===n&&e.push(i)}return e}function V2(n){const{kernelName:t,backendName:e}=n,s=P2(t,e);Wf.has(s)&&Is(`The kernel '${t}' for backend '${e}' is already registered`),Wf.set(s,n)}function LF(n){const{kernelName:t}=n;Xb.has(t)&&rt().getBool("DEBUG")&&Is(`Overriding the gradient for '${t}'`),Xb.set(t,n)}function P2(n,t){return`${t}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U2(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var wb,WC;function zF(){if(WC)return wb;WC=1,wb=t;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function t(_,A,W){this.low=_|0,this.high=A|0,this.unsigned=!!W}t.prototype.__isLong__,Object.defineProperty(t.prototype,"__isLong__",{value:!0});function e(_){return(_&&_.__isLong__)===!0}t.isLong=e;var s={},a={};function r(_,A){var W,K,tt;return A?(_>>>=0,(tt=0<=_&&_<256)&&(K=a[_],K)?K:(W=l(_,(_|0)<0?-1:0,!0),tt&&(a[_]=W),W)):(_|=0,(tt=-128<=_&&_<128)&&(K=s[_],K)?K:(W=l(_,_<0?-1:0,!1),tt&&(s[_]=W),W))}t.fromInt=r;function i(_,A){if(isNaN(_))return A?C:S;if(A){if(_<0)return C;if(_>=b)return z}else{if(_<=-9223372036854776e3)return B;if(_+1>=w)return D}return _<0?i(-_,A).neg():l(_%y|0,_/y|0,A)}t.fromNumber=i;function l(_,A,W){return new t(_,A,W)}t.fromBits=l;var u=Math.pow;function h(_,A,W){if(_.length===0)throw Error("empty string");if(_==="NaN"||_==="Infinity"||_==="+Infinity"||_==="-Infinity")return S;if(typeof A=="number"?(W=A,A=!1):A=!!A,W=W||10,W<2||36<W)throw RangeError("radix");var K;if((K=_.indexOf("-"))>0)throw Error("interior hyphen");if(K===0)return h(_.substring(1),A,W).neg();for(var tt=i(u(W,8)),Q=S,P=0;P<_.length;P+=8){var et=Math.min(8,_.length-P),Y=parseInt(_.substring(P,P+et),W);if(et<8){var at=i(u(W,et));Q=Q.mul(at).add(i(Y))}else Q=Q.mul(tt),Q=Q.add(i(Y))}return Q.unsigned=A,Q}t.fromString=h;function f(_,A){return typeof _=="number"?i(_,A):typeof _=="string"?h(_,A):l(_.low,_.high,typeof A=="boolean"?A:_.unsigned)}t.fromValue=f;var p=65536,m=1<<24,y=p*p,b=y*y,w=b/2,v=r(m),S=r(0);t.ZERO=S;var C=r(0,!0);t.UZERO=C;var $=r(1);t.ONE=$;var T=r(1,!0);t.UONE=T;var I=r(-1);t.NEG_ONE=I;var D=l(-1,2147483647,!1);t.MAX_VALUE=D;var z=l(-1,-1,!0);t.MAX_UNSIGNED_VALUE=z;var B=l(0,-2147483648,!1);t.MIN_VALUE=B;var R=t.prototype;return R.toInt=function(){return this.unsigned?this.low>>>0:this.low},R.toNumber=function(){return this.unsigned?(this.high>>>0)*y+(this.low>>>0):this.high*y+(this.low>>>0)},R.toString=function(A){if(A=A||10,A<2||36<A)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(B)){var W=i(A),K=this.div(W),tt=K.mul(W).sub(this);return K.toString(A)+tt.toInt().toString(A)}else return"-"+this.neg().toString(A);for(var Q=i(u(A,6),this.unsigned),P=this,et="";;){var Y=P.div(Q),at=P.sub(Y.mul(Q)).toInt()>>>0,M=at.toString(A);if(P=Y,P.isZero())return M+et;for(;M.length<6;)M="0"+M;et=""+M+et}},R.getHighBits=function(){return this.high},R.getHighBitsUnsigned=function(){return this.high>>>0},R.getLowBits=function(){return this.low},R.getLowBitsUnsigned=function(){return this.low>>>0},R.getNumBitsAbs=function(){if(this.isNegative())return this.eq(B)?64:this.neg().getNumBitsAbs();for(var A=this.high!=0?this.high:this.low,W=31;W>0&&(A&1<<W)==0;W--);return this.high!=0?W+33:W+1},R.isZero=function(){return this.high===0&&this.low===0},R.eqz=R.isZero,R.isNegative=function(){return!this.unsigned&&this.high<0},R.isPositive=function(){return this.unsigned||this.high>=0},R.isOdd=function(){return(this.low&1)===1},R.isEven=function(){return(this.low&1)===0},R.equals=function(A){return e(A)||(A=f(A)),this.unsigned!==A.unsigned&&this.high>>>31===1&&A.high>>>31===1?!1:this.high===A.high&&this.low===A.low},R.eq=R.equals,R.notEquals=function(A){return!this.eq(A)},R.neq=R.notEquals,R.ne=R.notEquals,R.lessThan=function(A){return this.comp(A)<0},R.lt=R.lessThan,R.lessThanOrEqual=function(A){return this.comp(A)<=0},R.lte=R.lessThanOrEqual,R.le=R.lessThanOrEqual,R.greaterThan=function(A){return this.comp(A)>0},R.gt=R.greaterThan,R.greaterThanOrEqual=function(A){return this.comp(A)>=0},R.gte=R.greaterThanOrEqual,R.ge=R.greaterThanOrEqual,R.compare=function(A){if(e(A)||(A=f(A)),this.eq(A))return 0;var W=this.isNegative(),K=A.isNegative();return W&&!K?-1:!W&&K?1:this.unsigned?A.high>>>0>this.high>>>0||A.high===this.high&&A.low>>>0>this.low>>>0?-1:1:this.sub(A).isNegative()?-1:1},R.comp=R.compare,R.negate=function(){return!this.unsigned&&this.eq(B)?B:this.not().add($)},R.neg=R.negate,R.add=function(A){e(A)||(A=f(A));var W=this.high>>>16,K=this.high&65535,tt=this.low>>>16,Q=this.low&65535,P=A.high>>>16,et=A.high&65535,Y=A.low>>>16,at=A.low&65535,M=0,j=0,lt=0,ot=0;return ot+=Q+at,lt+=ot>>>16,ot&=65535,lt+=tt+Y,j+=lt>>>16,lt&=65535,j+=K+et,M+=j>>>16,j&=65535,M+=W+P,M&=65535,l(lt<<16|ot,M<<16|j,this.unsigned)},R.subtract=function(A){return e(A)||(A=f(A)),this.add(A.neg())},R.sub=R.subtract,R.multiply=function(A){if(this.isZero())return S;if(e(A)||(A=f(A)),n){var W=n.mul(this.low,this.high,A.low,A.high);return l(W,n.get_high(),this.unsigned)}if(A.isZero())return S;if(this.eq(B))return A.isOdd()?B:S;if(A.eq(B))return this.isOdd()?B:S;if(this.isNegative())return A.isNegative()?this.neg().mul(A.neg()):this.neg().mul(A).neg();if(A.isNegative())return this.mul(A.neg()).neg();if(this.lt(v)&&A.lt(v))return i(this.toNumber()*A.toNumber(),this.unsigned);var K=this.high>>>16,tt=this.high&65535,Q=this.low>>>16,P=this.low&65535,et=A.high>>>16,Y=A.high&65535,at=A.low>>>16,M=A.low&65535,j=0,lt=0,ot=0,ut=0;return ut+=P*M,ot+=ut>>>16,ut&=65535,ot+=Q*M,lt+=ot>>>16,ot&=65535,ot+=P*at,lt+=ot>>>16,ot&=65535,lt+=tt*M,j+=lt>>>16,lt&=65535,lt+=Q*at,j+=lt>>>16,lt&=65535,lt+=P*Y,j+=lt>>>16,lt&=65535,j+=K*M+tt*at+Q*Y+P*et,j&=65535,l(ot<<16|ut,j<<16|lt,this.unsigned)},R.mul=R.multiply,R.divide=function(A){if(e(A)||(A=f(A)),A.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&A.low===-1&&A.high===-1)return this;var W=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,A.low,A.high);return l(W,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?C:S;var K,tt,Q;if(this.unsigned){if(A.unsigned||(A=A.toUnsigned()),A.gt(this))return C;if(A.gt(this.shru(1)))return T;Q=C}else{if(this.eq(B)){if(A.eq($)||A.eq(I))return B;if(A.eq(B))return $;var P=this.shr(1);return K=P.div(A).shl(1),K.eq(S)?A.isNegative()?$:I:(tt=this.sub(A.mul(K)),Q=K.add(tt.div(A)),Q)}else if(A.eq(B))return this.unsigned?C:S;if(this.isNegative())return A.isNegative()?this.neg().div(A.neg()):this.neg().div(A).neg();if(A.isNegative())return this.div(A.neg()).neg();Q=S}for(tt=this;tt.gte(A);){K=Math.max(1,Math.floor(tt.toNumber()/A.toNumber()));for(var et=Math.ceil(Math.log(K)/Math.LN2),Y=et<=48?1:u(2,et-48),at=i(K),M=at.mul(A);M.isNegative()||M.gt(tt);)K-=Y,at=i(K,this.unsigned),M=at.mul(A);at.isZero()&&(at=$),Q=Q.add(at),tt=tt.sub(M)}return Q},R.div=R.divide,R.modulo=function(A){if(e(A)||(A=f(A)),n){var W=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,A.low,A.high);return l(W,n.get_high(),this.unsigned)}return this.sub(this.div(A).mul(A))},R.mod=R.modulo,R.rem=R.modulo,R.not=function(){return l(~this.low,~this.high,this.unsigned)},R.and=function(A){return e(A)||(A=f(A)),l(this.low&A.low,this.high&A.high,this.unsigned)},R.or=function(A){return e(A)||(A=f(A)),l(this.low|A.low,this.high|A.high,this.unsigned)},R.xor=function(A){return e(A)||(A=f(A)),l(this.low^A.low,this.high^A.high,this.unsigned)},R.shiftLeft=function(A){return e(A)&&(A=A.toInt()),(A&=63)===0?this:A<32?l(this.low<<A,this.high<<A|this.low>>>32-A,this.unsigned):l(0,this.low<<A-32,this.unsigned)},R.shl=R.shiftLeft,R.shiftRight=function(A){return e(A)&&(A=A.toInt()),(A&=63)===0?this:A<32?l(this.low>>>A|this.high<<32-A,this.high>>A,this.unsigned):l(this.high>>A-32,this.high>=0?0:-1,this.unsigned)},R.shr=R.shiftRight,R.shiftRightUnsigned=function(A){if(e(A)&&(A=A.toInt()),A&=63,A===0)return this;var W=this.high;if(A<32){var K=this.low;return l(K>>>A|W<<32-A,W>>>A,this.unsigned)}else return A===32?l(W,0,this.unsigned):l(W>>>A-32,0,this.unsigned)},R.shru=R.shiftRightUnsigned,R.shr_u=R.shiftRightUnsigned,R.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},R.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},R.toBytes=function(A){return A?this.toBytesLE():this.toBytesBE()},R.toBytesLE=function(){var A=this.high,W=this.low;return[W&255,W>>>8&255,W>>>16&255,W>>>24,A&255,A>>>8&255,A>>>16&255,A>>>24]},R.toBytesBE=function(){var A=this.high,W=this.low;return[A>>>24,A>>>16&255,A>>>8&255,A&255,W>>>24,W>>>16&255,W>>>8&255,W&255]},t.fromBytes=function(A,W,K){return K?t.fromBytesLE(A,W):t.fromBytesBE(A,W)},t.fromBytesLE=function(A,W){return new t(A[0]|A[1]<<8|A[2]<<16|A[3]<<24,A[4]|A[5]<<8|A[6]<<16|A[7]<<24,W)},t.fromBytesBE=function(A,W){return new t(A[4]<<24|A[5]<<16|A[6]<<8|A[7],A[0]<<24|A[1]<<16|A[2]<<8|A[3],W)},wb}var W2=zF();const G2=D2(W2),MF=sF({__proto__:null,default:G2},[W2]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const no=G2||MF;function ym(n){return no.fromString(n,!0,16)}const H2=ym("c3a5c85c97cb3127"),eo=ym("b492b66fbe98f273"),Pn=ym("9ae16a3b2f90404f");function Yb(n){return n.xor(n.shru(47))}function q2(n,t,e){const s=n.slice(t,t+e);return no.fromBytes(Array.from(s),!0,!0)}function Ce(n,t){return q2(n,t,8)}function GC(n,t){return q2(n,t,4)}function fn(n,t){return t===0?n:n.shru(t).or(n.shl(64-t))}function si(n,t,e=ym("9ddfea08eb382d69")){let s=n.xor(t).mul(e);s=s.xor(s.shru(47));let a=t.xor(s).mul(e);return a=a.xor(a.shru(47)),a=a.mul(e),a}function BF(n,t,e,s,a,r){a=a.add(n),r=fn(r.add(a).add(s),21);const i=a;return a=a.add(t),a=a.add(e),r=r.add(fn(a,44)),[a.add(s),r.add(i)]}function ff(n,t,e,s){return BF(Ce(n,t),Ce(n,t+8),Ce(n,t+16),Ce(n,t+24),e,s)}function VF(n,t=n.length){if(t>=8){const e=Pn.add(t*2),s=Ce(n,0).add(Pn),a=Ce(n,t-8),r=fn(a,37).mul(e).add(s),i=fn(s,25).add(a).mul(e);return si(r,i,e)}if(t>=4){const e=Pn.add(t*2),s=GC(n,0);return si(s.shl(3).add(t),GC(n,t-4),e)}if(t>0){const e=n[0],s=n[t>>1],a=n[t-1],r=e+(s<<8),i=t+(a<<2);return Yb(Pn.mul(r).xor(H2.mul(i))).mul(Pn)}return Pn}function PF(n,t=n.length){const e=Pn.add(t*2),s=Ce(n,0).mul(eo),a=Ce(n,8),r=Ce(n,t-8).mul(e),i=Ce(n,t-16).mul(Pn);return si(fn(s.add(a),43).add(fn(r,30)).add(i),s.add(fn(a.add(Pn),18)).add(r),e)}function UF(n,t=n.length){const e=Pn.add(t*2),s=Ce(n,0).mul(Pn),a=Ce(n,8),r=Ce(n,t-8).mul(e),i=Ce(n,t-16).mul(Pn),l=fn(s.add(a),43).add(fn(r,30)).add(i),u=si(l,s.add(fn(a.add(Pn),18)).add(r),e),h=Ce(n,16).mul(e),f=Ce(n,24),p=l.add(Ce(n,t-32)).mul(e),m=u.add(Ce(n,t-24)).mul(e);return si(fn(h.add(f),43).add(fn(p,30)).add(m),h.add(fn(f.add(s),18)).add(p),e)}function WF(n,t=n.length){const e=no.fromNumber(81,!0);if(t<=32)return t<=16?VF(n,t):PF(n,t);if(t<=64)return UF(n,t);let s=e,a=e.mul(eo).add(113),r=Yb(a.mul(Pn).add(113)).mul(Pn),i=[no.UZERO,no.UZERO],l=[no.UZERO,no.UZERO];s=s.mul(Pn).add(Ce(n,0));let u=0;const h=(t-1>>6)*64,f=h+(t-1&63)-63;do s=fn(s.add(a).add(i[0]).add(Ce(n,u+8)),37).mul(eo),a=fn(a.add(i[1]).add(Ce(n,u+48)),42).mul(eo),s=s.xor(l[1]),a=a.add(i[0]).add(Ce(n,u+40)),r=fn(r.add(l[0]),33).mul(eo),i=ff(n,u,i[1].mul(eo),s.add(l[0])),l=ff(n,u+32,r.add(l[1]),a.add(Ce(n,u+16))),[r,s]=[s,r],u+=64;while(u!==h);const p=eo.add(r.and(255).shl(1));return u=f,l[0]=l[0].add(t-1&63),i[0]=i[0].add(l[0]),l[0]=l[0].add(i[0]),s=fn(s.add(a).add(i[0]).add(Ce(n,u+8)),37).mul(p),a=fn(a.add(i[1]).add(Ce(n,u+48)),42).mul(p),s=s.xor(l[1].mul(9)),a=a.add(i[0].mul(9).add(Ce(n,u+40))),r=fn(r.add(l[0]),33).mul(p),i=ff(n,u,i[1].mul(p),s.add(l[0])),l=ff(n,u+32,r.add(l[1]),a.add(Ce(n,u+16))),[r,s]=[s,r],si(si(i[0],l[0],p).add(Yb(a).mul(H2)).add(r),si(i[1],l[1],p).add(s),p)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bi(n,t){return t==="string"?ai(n):$o([n],t)}function GF(n,t){return n instanceof Float32Array&&t==="float32"||n instanceof Int32Array&&t==="int32"||n instanceof Uint8Array&&t==="bool"}function $o(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=fo(n)),rt().getBool("DEBUG")&&wF(n,t),GF(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)Math.round(n[s])!==0&&(e[s]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Qn(){return rt().platform.now()}function ai(n,t="utf-8"){return t=t||"utf-8",rt().platform.encode(n,t)}function oi(n,t="utf-8"){return t=t||"utf-8",rt().platform.decode(n,t)}function ra(n){return rt().platform.isTypedArray!=null?rt().platform.isTypedArray(n):U2(n)}function fo(n,t=[],e=!1){if(t==null&&(t=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||ho(n)||n==null||ra(n)&&e)t.push(n);else if(Array.isArray(n)||ra(n))for(let s=0;s<n.length;++s)fo(n[s],t,e);else{let s=-1;for(const a of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(a)&&(s=Math.max(s,Number(a)));for(let a=0;a<=s;a++)fo(n[a],t,e)}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HF{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new jF)}profileKernel(t,e,s){let a;const r=()=>{a=s()};let i;const l=Qn();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const h of a)h.dataSync();i=Promise.resolve({kernelMs:Qn()-l})}if(rt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let h=0;h<a.length;h++){const f=a[h];f.data().then(p=>{qF(p,f.dtype,t)})}return{kernelName:t,outputs:a,inputs:e,timeMs:i.then(h=>h.kernelMs),extraInfo:i.then(h=>h.getExtraProfileInfo!=null?h.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:a,inputs:r,extraInfo:i}=t;s.forEach(l=>{Promise.all([l.data(),a,i]).then(u=>{this.logger.logKernelProfile(e,l,u[0],u[1],r,u[2])})})}}function qF(n,t,e){if(t!=="float32")return!1;for(let s=0;s<n.length;s++){const a=n[s];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${e}'`),!0}return!1}class jF{logKernelProfile(t,e,s,a,r,i){const l=typeof a=="number"?$l(`${a}ms`,9):a.error,u=$l(t,25),h=e.rank,f=e.size,p=$l(e.shape.toString(),14);let m="";for(const y in r){const b=r[y];if(b!=null){const w=b.shape||e.shape,v=w.length;m+=`${y}: ${v}D ${v>0?w:""} `}}console.log(`%c${u}	%c${l}	%c${h}D ${p}	%c${f}	%c${m}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XF(n,t,e){const s={},a={};for(let u=0;u<t.length;u++)s[t[u].id]=!0;for(let u=0;u<n.length;u++){const h=n[u],f=h.inputs;for(const p in f){const m=f[p];let y=!1;for(let b=0;b<t.length;b++)if(s[m.id]){h.outputs.forEach(w=>s[w.id]=!0),y=!0,a[h.id]=!0;break}if(y)break}}const r={};r[e.id]=!0;const i={};for(let u=n.length-1;u>=0;u--){const h=n[u],f=h.inputs;for(let p=0;p<h.outputs.length;p++)if(r[h.outputs[p].id]){for(const m in f)r[f[m].id]=!0,i[h.id]=!0;break}}const l=[];for(let u=0;u<n.length;u++){const h=n[u];if(a[h.id]&&i[h.id]){const f={};for(const m in h.inputs){const y=h.inputs[m];s[y.id]&&(f[m]=y)}const p=Object.assign({},h);p.inputs=f,p.outputs=h.outputs,l.push(p)}}return l}function KF(n,t,e,s){for(let a=t.length-1;a>=0;a--){const r=t[a],i=[];if(r.outputs.forEach(u=>{const h=n[u.id];h!=null?i.push(h):i.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const l=r.gradient(i);for(const u in r.inputs){if(!(u in l))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(l)}.`);const h=e(()=>l[u]());if(h.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${h.dtype}'`);const f=r.inputs[u];if(!Jt(h.shape,f.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${u}' has shape '${h.shape}', which does not match the shape of the input '${f.shape}'`);if(n[f.id]==null)n[f.id]=h;else{const p=n[f.id];n[f.id]=s(p,h),p.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HC=20,lc=3,Sb=7;function YF(n,t,e,s){const a=Ft(t),r=ZF(n,t,e,a),i=t.length,l=If(n,t,e,a,r),u=["Tensor"];return s&&(u.push(`  dtype: ${e}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(l.map(h=>"    "+h).join(`
`)),u.join(`
`)}function ZF(n,t,e,s){const a=ht(t),r=s[s.length-1],i=new Array(r).fill(0),l=t.length,u=e==="complex64"?fc(n):n;if(l>1)for(let h=0;h<a/r;h++){const f=h*r;for(let p=0;p<r;p++)i[p]=Math.max(i[p],dc(u[f+p],0,e).length)}return i}function dc(n,t,e){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Sb))} + ${parseFloat(n[1].toFixed(Sb))}j`:Fc(n)?s=`'${n}'`:e==="bool"?s=j2(n):s=parseFloat(n.toFixed(Sb)).toString(),$l(s,t)}function j2(n){return n===0?"false":"true"}function If(n,t,e,s,a,r=!0){const i=e==="complex64"?2:1,l=t[0],u=t.length;if(u===0){if(e==="complex64"){const w=fc(n);return[dc(w[0],0,e)]}return e==="bool"?[j2(n[0])]:[n[0].toString()]}if(u===1){if(l>HC){const v=lc*i;let S=Array.from(n.slice(0,v)),C=Array.from(n.slice((l-lc)*i,l*i));return e==="complex64"&&(S=fc(S),C=fc(C)),["["+S.map(($,T)=>dc($,a[T],e)).join(", ")+", ..., "+C.map(($,T)=>dc($,a[l-lc+T],e)).join(", ")+"]"]}return["["+(e==="complex64"?fc(n):Array.from(n)).map((v,S)=>dc(v,a[S],e)).join(", ")+"]"]}const h=t.slice(1),f=s.slice(1),p=s[0]*i,m=[];if(l>HC){for(let w=0;w<lc;w++){const v=w*p,S=v+p;m.push(...If(n.slice(v,S),h,e,f,a,!1))}m.push("...");for(let w=l-lc;w<l;w++){const v=w*p,S=v+p;m.push(...If(n.slice(v,S),h,e,f,a,w===l-1))}}else for(let w=0;w<l;w++){const v=w*p,S=v+p;m.push(...If(n.slice(v,S),h,e,f,a,w===l-1))}const y=u===2?",":"";m[0]="["+(l>0?m[0]+y:"");for(let w=1;w<m.length-1;w++)m[w]=" "+m[w]+y;let b=`,
`;for(let w=2;w<u;w++)b+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(r?"":b),m}function fc(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rn{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=ht(t),s!=null){const a=s.length;O(a===this.size,()=>`Length of values '${a}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Ge(e,this.size),this.strides=Ft(t)}set(t,...e){e.length===0&&(e=[0]),O(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const a of t){if(a<0||a>=this.shape[e]){const r=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(r)}e++}let s=t[t.length-1];for(let a=0;a<t.length-1;++a)s+=this.strides[a]*t[a];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return wa().makeTensor(this.values,this.shape,this.dtype)}}let wa=null,Nl=null;function QF(n){wa=n}function JF(n){Nl=n}class De{constructor(t,e,s,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=ht(t),this.strides=Ft(t),this.dataId=s,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Nl.buffer(this.shape,this.dtype,t)}bufferSync(){return Nl.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return sa(this.shape,t,this.dtype==="complex64")}arraySync(){return sa(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=wa().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(s=>oi(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),wa().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=wa().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>oi(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await wa().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),wa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Nl.print(this,t)}clone(){return this.throwIfDisposed(),Nl.clone(this)}toString(t=!1){const e=this.dataSync();return YF(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Nl.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),wa().makeVariable(this,t,e,s)}}Object.defineProperty(De,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function dt(){return G0("Tensor",()=>De)}dt();class Gf extends De{constructor(t,e,s,a){super(t.shape,t.dtype,t.dataId,a),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Jt(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);wa().disposeTensor(this),this.dataId=t.dataId,wa().incRef(this,null)}dispose(){wa().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Gf,Symbol.hasInstance,{value:n=>n instanceof De&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qC;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(qC||(qC={}));var Zb;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Zb||(Zb={}));var Qb;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Qb||(Qb={}));var Jb;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Jb||(Jb={}));var t0;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(t0||(t0={}));const t3={float32:Jb,int32:Zb,bool:Qb,complex64:t0};function ds(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return t3[n][t]}function Kx(n){return ds(n,"int32")}function X2(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function K2(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Me(n,t){if(n.dtype===t.dtype)return[n,t];const e=ds(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function e3(n,t){O(n.dtype===t.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${t.dtype}) input must match`)}function Y2(n){const t=[];return Z2(n,t,new Set),t}function Z2(n,t,e){if(n==null)return;if(n instanceof De){t.push(n);return}if(!n3(n))return;const s=n;for(const a in s){const r=s[a];e.has(r)||(e.add(r),Z2(r,t,e))}}function n3(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nb(n){return n.kernelName!=null}class jC{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class _l{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new jC}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,s=1){return t in this.registryFactory?(Is(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:s}=this.initializeBackend(t);if(!(s?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new HF(this.backendInstance),!0}setupRegisteredKernels(){UC(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){UC(t).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=e.factory();if(s&&!(s instanceof P0)&&typeof s.then=="function"){const a=++this.pendingBackendInitId,r=s.then(i=>a<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,Is(`Initialization of backend ${t} failed`),Is(i.stack||i.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return Is(`Initialization of backend ${t} failed`),Is(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e],{success:a,asyncInit:r}=this.initializeBackend(s);if(r||a)return{name:s,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const s=this.state.tensorInfo.get(e),a=s.backend,r=this.readSync(e),i=a.refCount(e);a.disposeData(e,!0),s.backend=t,t.move(e,r,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let s=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let a;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(a),()=>(a=e(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(t,e,s){t();try{const a=s();return e(),a}catch(a){throw e(),a}}nextTensorId(){return _l.nextTensorId++}nextVariableId(){return _l.nextVariableId++}clone(t){const e=G.runKernel(nh,{x:t}),s={x:t},a=i=>({x:()=>{const l="float32",u={x:i},h={dtype:l};return G.runKernel(Wc,u,h)}}),r=[];return this.addTapeNode(this.state.activeScope.name,s,[e],a,r,{}),e}runKernel(t,e,s){if(this.backendName==null&&this.backend,!(Kb(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,s){const a=this.backend.numDataIds();let r=0;s.forEach(u=>{r+=u.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=a-e-r-i;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${t}'`)}runKernelFunc(t){let e,s=[];const a=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let u;const h=Nb(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Nb(t)){const{kernelName:b,inputs:w,attrs:v}=t;this.backendName==null&&this.backend;const S=Kb(b,this.backendName);O(S!=null,()=>`Cannot find registered kernel '${b}' for backend '${this.backendName}'`),l=()=>{const C=this.backend.numDataIds();u=S.kernelFunc({inputs:w,attrs:v,backend:this.backend});const $=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(b,C,$);const T=$.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(a){const I=this.getTensorsForGradient(b,w,T);s=this.saveTensorsForBackwardMode(I)}return T}}else{const{forwardFunc:b}=t,w=v=>{a&&(s=v.map(S=>this.keep(this.clone(S))))};l=()=>{const v=this.backend.numDataIds();u=this.tidy(()=>b(this.backend,w));const S=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,v,S),S}}const{inputs:f,attrs:p}=t,m=Nb(t)?null:t.backwardsFunc;let y;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=l():(y=this.profiler.profileKernel(h,f,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(y),e=y.outputs)}),a&&this.addTapeNode(h,f,e,m,s,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:h,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(f).map(b=>f[b]!=null?f[b].shape:null),outputShapes:e.map(b=>b.shape),kernelTimeMs:y.timeMs,extraInfo:y.extraInfo}),Array.isArray(u)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(t,e,s){const a=PC(t);if(a!=null){const r=a.inputsToSave||[],i=a.outputsToSave||[];let l;a.saveAllInputs?(O(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(e).map(h=>e[h])):l=r.map(h=>e[h]);const u=s.filter((h,f)=>i[f]);return l.concat(u)}return[]}makeTensor(t,e,s,a){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",a=a||this.backend;let r=t;s==="string"&&Fc(t[0])&&(r=t.map(u=>ai(u)));const i=a.write(r,e,s),l=new De(e,s,i,this.nextTensorId());if(this.trackTensor(l,a),s==="string"){const u=this.state.tensorInfo.get(i),h=NF(r);this.state.numBytes+=h-u.bytes,u.bytes=h}return l}makeTensorFromDataId(t,e,s,a){s=s||"float32";const r={dataId:t,shape:e,dtype:s};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(t,e){const{dataId:s,shape:a,dtype:r}=t,i=new De(a,r,s,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,s,a){s=s||this.nextVariableId().toString(),a!=null&&a!==t.dtype&&(t=t.cast(a));const r=new Gf(t,e,s,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*Bf(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof Gf||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*Bf(t.dtype);this.state.numBytes-=s}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,s,a,r,i){const l={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:s,saved:r},u=PC(t);u!=null&&(a=u.gradFunc),a!=null&&(l.gradient=h=>(h=h.map((f,p)=>{if(f==null){const m=s[p],y=_n(m.size,m.dtype);return this.makeTensor(y,m.shape,m.dtype)}return f}),a(h.length>1?h:h[0],r,i))),this.state.activeTape.push(l)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Y2(t),s=new Set(e.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const i=this.state.activeScope.track[r];!i.kept&&!s.has(i.id)&&i.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(r=>{!r.kept&&r.scopeId===a.id&&this.track(r)})}gradients(t,e,s,a=!1){if(O(e.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));O(r instanceof De,()=>"The result y returned by f() must be a tensor.");const i=XF(this.state.activeTape,e,r);if(!a&&i.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const l={};l[r.id]=s??s3(r.shape),KF(l,i,h=>this.tidy(h),a3);const u=e.map(h=>l[h.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(h=>{for(const f of h.saved)f.dispose()}),this.state.activeTape=null),{value:r,grads:u}})}customGrad(t){return O(Wb(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{O(e.every(l=>l instanceof De),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const a={};e.forEach((l,u)=>{a[u]=l});const r=(l,u)=>(s=t(...e,u),O(s.value instanceof De,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),O(Wb(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(l,u)=>{const h=s.gradFunc(l,u),f=Array.isArray(h)?h:[h];O(f.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),O(f.every(m=>m instanceof De),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const p={};return f.forEach((m,y)=>{p[y]=()=>m}),p};return this.runKernelFunc({forwardFunc:r,backwardsFunc:i,inputs:a})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Qn(),s=await this.backend.time(t);return s.wallMs=Qn()-e,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new jC;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}_l.nextTensorId=0;_l.nextVariableId=0;function s3(n){const t=W0(ht(n),"float32");return G.makeTensor(t,n,"float32")}function Q2(){const n=B2();if(n._tfengine==null){const t=new $F(n);n._tfengine=new _l(t)}return AF(n._tfengine.ENV),QF(()=>n._tfengine),n._tfengine}const G=Q2();function a3(n,t){const e={a:n,b:t};return G.runKernel(Xl,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r3(){return typeof navigator<"u"&&navigator!=null}function J2(n){if(n||r3()){if(n||(n=navigator),n.product==="ReactNative")return!0;const t=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function t$(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ns=rt();ns.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ns.registerFlag("IS_BROWSER",()=>t$());ns.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");ns.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ns.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));ns.registerFlag("PROD",()=>!1);ns.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ns.getBool("DEBUG"));ns.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ns.registerFlag("IS_TEST",()=>!1);ns.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>ns.getBool("DEBUG"));ns.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);ns.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);ns.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xi(n,t){let e=n;if(ra(n))return t==="string"?[]:[n.length];if(X2(n)){const a=n.channels||"RGBA";return[n.height,n.width*a.length]}else if(K2(n))return[n.buffer.size/(t==null?4:Bf(t))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||ra(e)&&t!=="string";)s.push(e.length),e=e[0];return Array.isArray(n)&&rt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&e$(n,s,[]),s}function e$(n,t,e){if(e=e||[],!Array.isArray(n)&&!ra(n)){O(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}O(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),O(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let a=0;a<n.length;++a)e$(n[a],s,e.concat(a))}function XC(n,t,e,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function F(n,t,e,s="numeric"){if(n instanceof dt())return XC(s,n.dtype,t,e),n;let a=ql(n);if(a!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(a=s),XC(s,a,t,e),n==null||!ra(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${u}'`)}const r=xi(n,a);!ra(n)&&!Array.isArray(n)&&(n=[n]);const l=a!=="string"?$o(n,a):fo(n,[],!0);return G.makeTensor(l,r,a)}function Hf(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((r,i)=>F(r,`${t}[${i}]`,e,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n$="__op";function U(n){const t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+n$;const a=(...r)=>{G.startScope(e);try{const i=s(...r);return ho(i)&&console.error("Cannot return a Promise inside of tidy."),G.endScope(i),i}catch(i){throw G.endScope(null),i}};return Object.defineProperty(a,"name",{value:e,configurable:!0}),a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i3(n,t){const e=F(n,"real","complex"),s=F(t,"imag","complex");bs(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`);const a={real:e,imag:s};return G.runKernel(Z0,a)}const li=U({complex_:i3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vi(n,t,e,s){if(s==null)s=ql(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(K2(n)||X2(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return G.backend.createTensorFromGPUData(n,t||e,s)}if(!ra(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Ds(t);const a=ht(t),r=ht(e);O(a===r,()=>`Based on the provided shape, [${t}], the tensor should have ${a} values but has ${r}`);for(let i=0;i<e.length;++i){const l=e[i],u=i===e.length-1?l!==ht(t.slice(i)):!0;O(e[i]===t[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!ra(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n=s!=="string"?$o(n,s):fo(n,[],!0),G.makeTensor(n,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Na(n,t,e){const s=xi(n,e);return vi(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const po={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Ea{static join(t){return new Ea(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(s=>ra(s)?s.buffer:s),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let s=0;s<t.length;s++){const a=t[s];s!==t.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=e+a.byteLength;this.shards.push({buffer:a,start:e,end:r}),e=r}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);const s=this.findShardForByte(t);if(s===-1)throw new Error(`Could not find start shard for byte ${t}`);const a=e-t,r=new ArrayBuffer(a),i=new Uint8Array(r);let l=0;for(let u=s;u<this.shards.length;u++){const h=this.shards[u],p=t+l-h.start,m=l,b=Math.min(e,h.end)-h.start,w=new Uint8Array(h.buffer,p,b-p);if(i.set(w,m),l+=w.length,e<h.end)break}return r}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(a){return t<a.start?-1:t>=a.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=o3(this.shards,e);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function o3(n,t){let e=0,s=n.length;for(;e<=s;){const a=Math.floor((s-e)/2)+e,r=t(n[a]);if(r===0)return a;r<0?s=a:e=a+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ys(){return G}function KC(){return G.memory()}function nt(n,t){return G.tidy(n,t)}function Gt(n){Y2(n).forEach(e=>e.dispose())}function pn(n){return G.keep(n)}function l3(){return G.ready()}function u3(){return G.backendName}function s$(n,t,e=1){return G.registerBackend(n,t,e)}function a$(){return G.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ui=4;async function e0(n,t){const e=[],s=[],a=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<a.length;++i){const l=a[i],u=Array.isArray(n)?n[i].tensor:n[l];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${l}': ${u.dtype}`);const h={name:l,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const f=new Promise(async p=>{const m=await u.bytes(),y=m.reduce((v,S)=>v+S.length,0)+ui*m.length,b=new Uint8Array(y);let w=0;for(let v=0;v<m.length;v++){const S=m[v],C=new Uint8Array(new Uint32Array([S.length]).buffer);b.set(C,w),w+=ui,b.set(S,w),w+=S.length}p(b)});s.push(f)}else s.push(u.data());t!=null&&(h.group=t),e.push(h)}const r=await Promise.all(s);return{data:d3(r),specs:e}}function r$(n,t){const e=new Ea(n),s={};let a=0;for(const r of t){const i=c3(r,(l,u)=>e.slice(a+l,a+u));s[r.name]=i$(r,e.slice(a,a+i)),a+=i}return s}function c3(n,t){const e=ht(n.shape);let s;if("quantization"in n){const a=n.quantization;s=po[a.dtype]}else if(n.dtype==="string"){let a=0;for(let r=0;r<e;r++)a+=ui+new Uint32Array(t(a,a+ui))[0];return a}else s=po[n.dtype];return e*s}async function h3(n,t){const e=ht(n.shape);let s;if("quantization"in n){const a=n.quantization;s=po[a.dtype]}else if(n.dtype==="string"){let a=0;for(let r=0;r<e;r++)a+=ui+new Uint32Array(await t(a,a+ui))[0];return a}else s=po[n.dtype];return e*s}function i$(n,t){const e=n.name,s=n.dtype,a=n.shape,r=ht(a);let i,l=0;if("quantization"in n){const u=n.quantization;if(u.dtype==="uint8"||u.dtype==="uint16"){if(!("min"in u&&"scale"in u))throw new Error(`Weight ${n.name} with quantization ${u.dtype} doesn't have corresponding metadata min and scale.`)}else if(u.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${u.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${u.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const h=po[u.dtype],f=u.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(s==="float32")if(u.dtype==="uint8"||u.dtype==="uint16"){i=new Float32Array(f.length);for(let p=0;p<f.length;p++){const m=f[p];i[p]=m*u.scale+u.min}}else if(u.dtype==="float16")i=b3()(f);else throw new Error(`Unsupported quantization type ${u.dtype} for weight type float32.`);else if(s==="int32"){if(u.dtype!=="uint8"&&u.dtype!=="uint16")throw new Error(`Unsupported quantization type ${u.dtype} for weight type int32.`);i=new Int32Array(f.length);for(let p=0;p<f.length;p++){const m=f[p];i[p]=Math.round(m*u.scale+u.min)}}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);l+=r*h}else if(s==="string"){const u=ht(n.shape);i=[];for(let h=0;h<u;h++){const f=new Uint32Array(t.slice(l,l+ui))[0];l+=ui;const p=new Uint8Array(t.slice(l,l+f));i.push(p),l+=f}}else{const u=po[s];if(s==="float32")i=new Float32Array(t);else if(s==="int32")i=new Int32Array(t);else if(s==="bool")i=new Uint8Array(t);else if(s==="complex64"){i=new Float32Array(t);const h=new Float32Array(i.length/2),f=new Float32Array(i.length/2);for(let b=0;b<h.length;b++)h[b]=i[b*2],f[b]=i[b*2+1];const p=Na(h,a,"float32"),m=Na(f,a,"float32"),y=li(p,m);return p.dispose(),m.dispose(),y}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);l+=r*u}return Na(i,a,s)}async function YC(n,t,e){let s=new Uint8Array(t);for(;s.byteLength<e;){const{done:a,value:r}=await n.read();if(a&&r==null){const l=e-s.byteLength;throw new Error(`Reader is done but ${l} bytes are still expected`)}const i=new Uint8Array(s.length+r.byteLength);i.set(s,0),i.set(new Uint8Array(r),s.length),s=i}return s.buffer}async function o$(n,t){const e={},s=n.getReader();let a=new ArrayBuffer(0);for(const r of t){const i=await h3(r,async(h,f)=>(a=await YC(s,a,f),a.slice(h,f)));a=await YC(s,a,i);const l=a.slice(0,i);a=a.slice(i);const u=i$(r,l);if(e[r.name]=u,u3()==="webgpu"){const h=a$();"uploadToGPU"in h&&ht(u.shape)>=rt().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&h.uploadToGPU(u.dataId)}}return e}function d3(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(r=>{if(t+=r.byteLength,e.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const s=new Uint8Array(t);let a=0;return e.forEach(r=>{s.set(new Uint8Array(r.buffer),a),a+=r.byteLength}),s.buffer}const Yx=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function ZC(n){return Yx?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function f3(n){if(Yx)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,a=t.length;s<a;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function p3(n){if(Yx){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}function l$(n){return Ea.join(n)}function QC(n){const t="/";for(n=n.trim();n.endsWith(t);)n=n.slice(0,n.length-1);const e=n.split(t);return e[e.length-1]}function u$(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return n.signature!=null&&(e.signature=n.signature),n.userDefinedMetadata!=null&&(e.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(e.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(e.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(e.trainingConfig=n.trainingConfig),e}function c$(n,t,e){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=e}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function Zx(n,t){let e,s;return n.weightsManifest!=null&&([e,s]=await t(n.weightsManifest)),c$(n,e,s)}function Rh(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:ZC(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:ZC(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Ea(n.weightData).byteLength}}function n0(n){const t=[];for(const e of n)t.push(...e.weights);return t}function m3(){const n=e=>{let s=e<<13,a=0;for(;(s&8388608)===0;)a-=8388608,s<<=1;return s&=-8388609,a+=947912704,s|a},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=n(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function g3(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let t=1;t<31;t++)n[t]=t<<23;for(let t=33;t<63;t++)n[t]=2147483648+(t-32<<23);return n}function y3(){const n=new Uint32Array(64);for(let t=0;t<64;t++)n[t]=1024;return n[0]=n[32]=0,n}function b3(){const n=m3(),t=g3(),e=y3();return s=>{const a=new ArrayBuffer(4*s.length),r=new Uint32Array(a);for(let i=0;i<s.length;i++){const l=s[i],u=n[e[l>>10]+(l&1023)]+t[l>>10];r[i]=u}return new Float32Array(a)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Re{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Re.instance==null&&(Re.instance=new Re),Re.instance}static registerSaveRouter(t){Re.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Re.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Re.getHandlers(t,"save")}static getLoadHandlers(t,e){return Re.getHandlers(t,"load",e)}static getHandlers(t,e,s){const a=[];return(e==="load"?Re.getInstance().loadRouters:Re.getInstance().saveRouters).forEach(i=>{const l=i(t,s);l!==null&&a.push(l)}),a}}const x3=n=>Re.registerSaveRouter(n),v3=n=>Re.registerLoadRouter(n),h$=n=>Re.getSaveHandlers(n),w3=(n,t)=>Re.getLoadHandlers(n,t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s0="tensorflowjs",a0=1,io="models_store",ti="model_info_store";function d$(){if(!rt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function r0(n){const t=n.result;t.createObjectStore(io,{keyPath:"modelPath"}),t.createObjectStore(ti,{keyPath:"modelPath"})}class mo{constructor(t){if(this.indexedDB=d$(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((s,a)=>{const r=this.indexedDB.open(s0,a0);r.onupgradeneeded=()=>r0(r),r.onsuccess=()=>{const i=r.result;if(e==null){const l=i.transaction(io,"readonly"),h=l.objectStore(io).get(this.modelPath);h.onsuccess=()=>{if(h.result==null)return i.close(),a(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(h.result.modelArtifacts)},h.onerror=f=>(i.close(),a(h.error)),l.oncomplete=()=>i.close()}else{e.weightData=Ea.join(e.weightData);const l=Rh(e),u=i.transaction(ti,"readwrite");let h=u.objectStore(ti),f;try{f=h.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(m){return a(m)}let p;f.onsuccess=()=>{p=i.transaction(io,"readwrite");const m=p.objectStore(io);let y;try{y=m.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:l})}catch(b){return a(b)}y.onsuccess=()=>s({modelArtifactsInfo:l}),y.onerror=b=>{h=u.objectStore(ti);const w=h.delete(this.modelPath);w.onsuccess=()=>(i.close(),a(y.error)),w.onerror=v=>(i.close(),a(y.error))}},f.onerror=m=>(i.close(),a(f.error)),u.oncomplete=()=>{p==null?i.close():p.oncomplete=()=>i.close()}}},r.onerror=i=>a(r.error)})}}mo.URL_SCHEME="indexeddb://";const f$=n=>rt().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(mo.URL_SCHEME)?S3(n.slice(mo.URL_SCHEME.length)):null;Re.registerSaveRouter(f$);Re.registerLoadRouter(f$);function S3(n){return new mo(n)}function N3(n){return n.startsWith(mo.URL_SCHEME)?n.slice(mo.URL_SCHEME.length):n}class C3{constructor(){this.indexedDB=d$()}async listModels(){return new Promise((t,e)=>{const s=this.indexedDB.open(s0,a0);s.onupgradeneeded=()=>r0(s),s.onsuccess=()=>{const a=s.result,r=a.transaction(ti,"readonly"),l=r.objectStore(ti).getAll();l.onsuccess=()=>{const u={};for(const h of l.result)u[h.modelPath]=h.modelArtifactsInfo;t(u)},l.onerror=u=>(a.close(),e(l.error)),r.oncomplete=()=>a.close()},s.onerror=a=>e(s.error)})}async removeModel(t){return t=N3(t),new Promise((e,s)=>{const a=this.indexedDB.open(s0,a0);a.onupgradeneeded=()=>r0(a),a.onsuccess=()=>{const r=a.result,i=r.transaction(ti,"readwrite"),l=i.objectStore(ti),u=l.get(t);let h;u.onsuccess=()=>{if(u.result==null)return r.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const f=l.delete(t),p=()=>{h=r.transaction(io,"readwrite");const y=h.objectStore(io).delete(t);y.onsuccess=()=>e(u.result.modelArtifactsInfo),y.onerror=b=>s(u.error)};f.onsuccess=p,f.onerror=m=>(p(),r.close(),s(u.error))}},u.onerror=f=>(r.close(),s(u.error)),i.oncomplete=()=>{h==null?r.close():h.oncomplete=()=>r.close()}},a.onerror=r=>s(a.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const br="/",Cl="tensorflowjs_models",p$="info",T3="model_topology",$3="weight_specs",k3="weight_data",I3="model_metadata";function m$(n){return{info:[Cl,n,p$].join(br),topology:[Cl,n,T3].join(br),weightSpecs:[Cl,n,$3].join(br),weightData:[Cl,n,k3].join(br),modelMetadata:[Cl,n,I3].join(br)}}function g$(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function E3(n){const t=n.split(br);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(br)}function A3(n){return n.startsWith(go.URL_SCHEME)?n.slice(go.URL_SCHEME.length):n}class go{constructor(t){if(!rt().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=m$(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),a=Rh(t),r=Ea.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,f3(r));const i={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:a}}catch{throw g$(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=s;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(a==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const l=JSON.parse(r);e.format=l.format,e.generatedBy=l.generatedBy,e.convertedBy=l.convertedBy,l.signature!=null&&(e.signature=l.signature),l.userDefinedMetadata!=null&&(e.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(e.modelInitializer=l.modelInitializer),l.initializerSignature!=null&&(e.initializerSignature=l.initializerSignature),l.trainingConfig!=null&&(e.trainingConfig=l.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=p3(i),e}}go.URL_SCHEME="localstorage://";const y$=n=>rt().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(go.URL_SCHEME)?R3(n.slice(go.URL_SCHEME.length)):null;Re.registerSaveRouter(y$);Re.registerLoadRouter(y$);function R3(n){return new go(n)}class D3{constructor(){O(rt().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),O(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=Cl+br,s=br+p$;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(e)&&r.endsWith(s)){const i=E3(r);t[i]=JSON.parse(this.LS.getItem(r))}}return t}async removeModel(t){t=A3(t);const e=m$(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(e.info));return g$(e),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Il="://";class Vn{constructor(){this.managers={}}static getInstance(){return Vn.instance==null&&(Vn.instance=new Vn),Vn.instance}static registerManager(t,e){O(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Il)&&(t=t.slice(0,t.indexOf(Il))),O(t.length>0,()=>"scheme must not be an empty string.");const s=Vn.getInstance();O(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=Vn.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Vn.getInstance().managers)}}function Ef(n){if(n.indexOf(Il)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Vn.getSchemes().join(",")}`);return{scheme:n.split(Il)[0],path:n.split(Il)[1]}}async function b$(n,t,e=!1){O(n!==t,()=>`Old path and new path are the same: '${n}'`);const s=Re.getLoadHandlers(n);O(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),O(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const a=s[0],r=Re.getSaveHandlers(t);O(r.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),O(r.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);const i=r[0],l=Ef(n).scheme,u=Ef(n).path,h=l===Ef(n).scheme,f=await a.load();e&&h&&await Vn.getManager(l).removeModel(u);const p=await i.save(f);return e&&!h&&await Vn.getManager(l).removeModel(u),p.modelArtifactsInfo}async function O3(){const n=Vn.getSchemes(),t={};for(const e of n){const s=await Vn.getManager(e).listModels();for(const a in s){const r=e+Il+a;t[r]=s[a]}}return t}async function _3(n){const t=Ef(n);return Vn.getManager(t.scheme).removeModel(t.path)}async function F3(n,t){return b$(n,t,!1)}async function L3(n,t){return b$(n,t,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z3{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!rt().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const a=this.functionRefs[s.data.index];a(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return U2(t)}}if(rt().get("IS_BROWSER")){rt().setPlatform("browser",new z3);try{Vn.registerManager(go.URL_SCHEME,new D3)}catch{}try{Vn.registerManager(mo.URL_SCHEME,new C3)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M3={importFetch:()=>require("node-fetch")};let Cb;class B3{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return rt().global.fetch!=null?rt().global.fetch(t,e):(Cb==null&&(Cb=M3.importFetch()),Cb(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}}rt().get("IS_NODE")&&!rt().get("IS_BROWSER")&&rt().setPlatform("node",new B3);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ht(n,t="float32",e){return t=t||"float32",Ds(n),new rn(n,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V3(n,t){const e=F(n,"x","cast");if(!SF(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:e},a={dtype:t};return G.runKernel(Wc,s,a)}const Nt=U({cast_:V3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P3(n){const e={x:F(n,"x","clone","string_or_numeric")};return G.runKernel(nh,e)}const xr=U({clone_:P3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x$(n,t=!1){console.log(n.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Q2();const U3={buffer:Ht,cast:Nt,clone:xr,print:x$};JF(U3);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W3(n,t){let e=F(n,"a","add"),s=F(t,"b","add");[e,s]=Me(e,s);const a={a:e,b:s};return G.runKernel(Xl,a)}const yt=U({add_:W3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G3(n,t){let e=F(n,"a","floorDiv"),s=F(t,"b","floorDiv");[e,s]=Me(e,s);const a={a:e,b:s};return G.runKernel(th,a)}const Qx=U({floorDiv_:G3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H3(n,t){let e=F(n,"a","div"),s=F(t,"b","div");if([e,s]=Me(e,s),e.dtype==="int32"&&s.dtype==="int32")return Qx(e,s);const a={a:e,b:s},r={};return G.runKernel(Xc,a,r)}const Dt=U({div_:H3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q3(n,t){let e=F(n,"a","mul"),s=F(t,"b","mul");[e,s]=Me(e,s);const a={a:e,b:s};return G.runKernel(hh,a)}const H=U({mul_:q3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j3(n){const t=F(n,"x","abs");if(t.dtype==="complex64"){const e={x:t};return G.runKernel(Np,e)}else{const e={x:t};return G.runKernel(pp,e)}}const en=U({abs_:j3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X3(n){const e={x:F(n,"x","acos")};return G.runKernel(Lc,e)}const v$=U({acos_:X3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K3(n){const e={x:F(n,"x","acosh")};return G.runKernel(zc,e)}const w$=U({acosh_:K3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y3(n){O(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),O(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const t=n.map((a,r)=>F(a,`tensors${r}`,"addN")),e=t[0];t.forEach(a=>{if(a.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(a=>{if(!Jt(a.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=t;return G.runKernel(mp,s)}const Z3=U({addN_:Y3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q3(n,t=null,e=!1){const a={x:F(n,"x","all","bool")},r={axis:t,keepDims:e};return G.runKernel(H0,a,r)}const Jx=U({all_:Q3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J3(n,t=null,e=!1){const a={x:F(n,"x","any","bool")},r={axis:t,keepDims:e};return G.runKernel(q0,a,r)}const qf=U({any_:J3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tL(n,t=0){const s={x:F(n,"x","argMax")},a={axis:t};return G.runKernel(gp,s,a)}const Fl=U({argMax_:tL});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eL(n,t=0){const s={x:F(n,"x","argMin")},a={axis:t};return G.runKernel(yp,s,a)}const S$=U({argMin_:eL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nL(n){const e={x:F(n,"x","asin")};return G.runKernel(Mc,e)}const N$=U({asin_:nL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sL(n){const e={x:F(n,"x","asinh")};return G.runKernel(Bc,e)}const C$=U({asinh_:sL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aL(n){const e={x:F(n,"x","atan")};return G.runKernel(Vc,e)}const T$=U({atan_:aL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(n,t){let e=F(n,"a","atan2"),s=F(t,"b","atan2");[e,s]=Me(e,s);const a={a:e,b:s};return G.runKernel(Uc,a)}const $$=U({atan2_:rL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iL(n){const e={x:F(n,"x","atanh")};return G.runKernel(Pc,e)}const k$=U({atanh_:iL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dh(n,t,e,s,a="NHWC",r){const i=n[3],l=[...t,i],u=$r(a);return gn(n,l,e,r,s,null,null,u)}function la(n,t,e,s,a,r,i="channelsLast"){const[l,u]=vc(t);let h;if(i==="channelsLast")h=[l,u,n[3],n[3]];else if(i==="channelsFirst")h=[l,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return gn(n,h,e,s,a,r,!1,i)}function Tr(n,t,e,s,a,r,i="NDHWC"){const[l,u,h]=i0(t);let f,p;if(i==="NDHWC")p="channelsLast",f=[l,u,h,n[4],n[4]];else if(i==="NCDHW")p="channelsFirst",f=[l,u,h,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return wi(n,f,e,s,a,!1,p,r)}function gn(n,t,e,s,a,r,i=!1,l="channelsLast"){let[u,h,f,p]=[-1,-1,-1,-1];if(l==="channelsLast")[u,h,f,p]=n;else if(l==="channelsFirst")[u,p,h,f]=n;else throw new Error(`Unknown dataFormat ${l}`);const[m,y,,b]=t,[w,v]=vc(e),[S,C]=vc(s),$=El(m,S),T=El(y,C),{padInfo:I,outHeight:D,outWidth:z}=uL(a,h,f,w,v,$,T,r,l),B=i?b*p:b;let R;return l==="channelsFirst"?R=[u,B,D,z]:l==="channelsLast"&&(R=[u,D,z,B]),{batchSize:u,dataFormat:l,inHeight:h,inWidth:f,inChannels:p,outHeight:D,outWidth:z,outChannels:B,padInfo:I,strideHeight:w,strideWidth:v,filterHeight:m,filterWidth:y,effectiveFilterHeight:$,effectiveFilterWidth:T,dilationHeight:S,dilationWidth:C,inShape:n,outShape:R,filterShape:t}}function wi(n,t,e,s,a,r=!1,i="channelsLast",l){let[u,h,f,p,m]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,h,f,p,m]=n;else if(i==="channelsFirst")[u,m,h,f,p]=n;else throw new Error(`Unknown dataFormat ${i}`);const[y,b,w,,v]=t,[S,C,$]=i0(e),[T,I,D]=i0(s),z=El(y,T),B=El(b,I),R=El(w,D),{padInfo:_,outDepth:A,outHeight:W,outWidth:K}=cL(a,h,f,p,S,C,$,z,B,R,l),tt=r?v*m:v;let Q;return i==="channelsFirst"?Q=[u,tt,A,W,K]:i==="channelsLast"&&(Q=[u,A,W,K,tt]),{batchSize:u,dataFormat:i,inDepth:h,inHeight:f,inWidth:p,inChannels:m,outDepth:A,outHeight:W,outWidth:K,outChannels:tt,padInfo:_,strideDepth:S,strideHeight:C,strideWidth:$,filterDepth:y,filterHeight:b,filterWidth:w,effectiveFilterDepth:z,effectiveFilterHeight:B,effectiveFilterWidth:R,dilationDepth:T,dilationHeight:I,dilationWidth:D,inShape:n,outShape:Q,filterShape:t}}function oL(n,t,e,s,a){s==null&&(s=t1(n,t,e));const r=n[0],i=n[1],l=wc((r-t+2*s)/e+1,a),u=wc((i-t+2*s)/e+1,a);return[l,u]}function lL(n,t,e,s,a,r){a==null&&(a=t1(n,t[0],s[0]));const i=[0,0,0,e];for(let l=0;l<3;l++)n[l]+2*a>=t[l]&&(i[l]=wc((n[l]-t[l]+2*a)/s[l]+1,r));return i}function t1(n,t,e,s=1){const a=El(t,s);return Math.floor((n[0]*(e-1)-e+a)/2)}function vc(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function i0(n){return typeof n=="number"?[n,n,n]:n}function El(n,t){return t<=1?n:n+(n-1)*(t-1)}function uL(n,t,e,s,a,r,i,l,u){let h,f,p;if(typeof n=="number"){h={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const y=oL([t,e],r,s,n,l);f=y[0],p=y[1]}else if(n==="same"){f=Math.ceil(t/s),p=Math.ceil(e/a);const m=Math.max(0,(f-1)*s+r-t),y=Math.max(0,(p-1)*a+i-e),b=Math.floor(m/2),w=m-b,v=Math.floor(y/2),S=y-v;h={top:b,bottom:w,left:v,right:S,type:"SAME"}}else if(n==="valid")h={top:0,bottom:0,left:0,right:0,type:"VALID"},f=Math.ceil((t-r+1)/s),p=Math.ceil((e-i+1)/a);else if(typeof n=="object"){const m=u==="channelsLast"?n[1][0]:n[2][0],y=u==="channelsLast"?n[1][1]:n[2][1],b=u==="channelsLast"?n[2][0]:n[3][0],w=u==="channelsLast"?n[2][1]:n[3][1];h={top:m,bottom:y,left:b,right:w,type:m===0&&y===0&&b===0&&w===0?"VALID":"EXPLICIT"},f=wc((t-r+m+y)/s+1,l),p=wc((e-i+b+w)/a+1,l)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outHeight:f,outWidth:p}}function cL(n,t,e,s,a,r,i,l,u,h,f){let p,m,y,b;if(n==="valid"&&(n=0),typeof n=="number"){p={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const v=lL([t,e,s,1],[l,u,h],1,[a,r,i],n,f);m=v[0],y=v[1],b=v[2]}else if(n==="same"){m=Math.ceil(t/a),y=Math.ceil(e/r),b=Math.ceil(s/i);const w=(m-1)*a+l-t,v=(y-1)*r+u-e,S=(b-1)*i+h-s,C=Math.floor(w/2),$=w-C,T=Math.floor(v/2),I=v-T,D=Math.floor(S/2),z=S-D;p={top:T,bottom:I,left:D,right:z,front:C,back:$,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:p,outDepth:m,outHeight:y,outWidth:b}}function wc(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function ci(n){const[t,e,s]=vc(n);return t===1&&e===1&&s===1}function $n(n,t){return ci(n)||ci(t)}function yo(n){return vc(n).every(t=>t>0)}function $r(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function qn(n,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")O(Ol(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(a=>{O(Ol(a),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${a}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hL(n,t){const s={x:F(n,"x","reshape","string_or_numeric")},a={shape:t};return G.runKernel(sm,s,a)}const q=U({reshape_:hL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dL(n,t,e,s,a){const r=F(n,"x","avgPool","float32"),i=1;O($n(e,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);let l=r,u=!1;r.rank===3&&(u=!0,l=q(r,[1,r.shape[0],r.shape[1],r.shape[2]])),O(l.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${l.rank}.`),qn("avgPool",s,a);const h={x:l},f={filterSize:t,strides:e,pad:s,dimRoundingMode:a};let p=G.runKernel(bp,h,f);return p=Nt(p,r.dtype),u?q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const bm=U({avgPool_:dL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fL(n,t,e,s,a,r="NDHWC"){const i=F(n,"x","avgPool3d","float32");let l=i,u=!1;i.rank===4&&(u=!0,l=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(l.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),O(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),O(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),qn("avgPool3d",s,a);const h={x:l},f={filterSize:t,strides:e,pad:s,dimRoundingMode:a,dataFormat:r};let p=G.runKernel(xp,h,f);return p=Nt(p,l.dtype),u?q(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const I$=U({avgPool3d_:fL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pL(n,t=0){O(n.length>=1,()=>"Pass at least one tensor to concat");const e=Hf(n,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),e.length===1)return xr(e[0]);const s=e,a={axis:t};return G.runKernel(Cp,s,a)}const He=U({concat_:pL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mL(n,t,e=!1,s=!1){let a=F(n,"a","matMul"),r=F(t,"b","matMul");[a,r]=Me(a,r);const i={a,b:r},l={transposeA:e,transposeB:s};return G.runKernel(vp,i,l)}const Yt=U({matMul_:mL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gL(n){const e={x:F(n,"x","sigmoid","float32")};return G.runKernel(Sh,e)}const Ua=U({sigmoid_:gL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yL(n,t,e){const s=F(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const a={x:s},r={begin:t,size:e};return G.runKernel(lm,a,r)}const se=U({slice_:yL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(n){const e={x:F(n,"x","tanh","float32")};return G.runKernel(Ih,e)}const bo=U({tanh_:bL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xL(n,t,e,s,a,r){const i=F(n,"forgetBias","basicLSTMCell"),l=F(t,"lstmKernel","basicLSTMCell"),u=F(e,"lstmBias","basicLSTMCell"),h=F(s,"data","basicLSTMCell"),f=F(a,"c","basicLSTMCell"),p=F(r,"h","basicLSTMCell"),m=He([h,p],1),y=Yt(m,l),b=yt(y,u),w=b.shape[0],v=b.shape[1]/4,S=[w,v],C=se(b,[0,0],S),$=se(b,[0,v],S),T=se(b,[0,v*2],S),I=se(b,[0,v*3],S),D=yt(H(Ua(C),bo($)),H(f,Ua(yt(i,T)))),z=H(bo(D),Ua(I));return[D,z]}const vL=U({basicLSTMCell_:xL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wL(n,t,e){const s=F(n,"x","batchToSpaceND"),a=t.reduce((l,u)=>l*u);O(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),O(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),O(s.shape[0]%a===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);const r={x:s},i={blockShape:t,crops:e};return G.runKernel(wp,r,i)}const xm=U({batchToSpaceND_:wL});function SL(n){let t;return n.rank===0||n.rank===1?t=q(n,[1,1,1,n.size]):n.rank===2?t=q(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?t=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]):t=n,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NL(n,t,e,s,a,r){r==null&&(r=.001);const i=F(n,"x","batchNorm"),l=F(t,"mean","batchNorm"),u=F(e,"variance","batchNorm");let h;a!=null&&(h=F(a,"scale","batchNorm"));let f;s!=null&&(f=F(s,"offset","batchNorm")),O(l.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),O(f==null||l.rank===f.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),O(h==null||l.rank===h.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const m={x:SL(i),scale:h,offset:f,mean:l,variance:u},y={varianceEpsilon:r},b=G.runKernel(Op,m,y);return q(b,i.shape)}const Oh=U({batchNorm_:NL});function CL(n,t,e,s,a,r){const i=F(n,"x","batchNorm"),l=F(t,"mean","batchNorm"),u=F(e,"variance","batchNorm");let h;a!=null&&(h=F(a,"scale","batchNorm"));let f;return s!=null&&(f=F(s,"offset","batchNorm")),O(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),O(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`),O(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),h!=null&&O(h.rank===2||h.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${h.rank}.`),f!=null&&O(f.rank===2||f.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${f.rank}.`),Oh(i,l,u,f,h,r)}const E$=U({batchNorm2d_:CL});function TL(n,t,e,s,a,r){const i=F(n,"x","batchNorm"),l=F(t,"mean","batchNorm"),u=F(e,"variance","batchNorm");let h;a!=null&&(h=F(a,"scale","batchNorm"));let f;return s!=null&&(f=F(s,"offset","batchNorm")),O(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),O(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`),O(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),h!=null&&O(h.rank===3||h.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${h.rank}.`),f!=null&&O(f.rank===3||f.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${f.rank}.`),Oh(i,l,u,f,h,r)}const A$=U({batchNorm3d_:TL});function $L(n,t,e,s,a,r){const i=F(n,"x","batchNorm"),l=F(t,"mean","batchNorm"),u=F(e,"variance","batchNorm");let h;a!=null&&(h=F(a,"scale","batchNorm"));let f;return s!=null&&(f=F(s,"offset","batchNorm")),O(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),O(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`),O(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),h!=null&&O(h.rank===4||h.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${h.rank}.`),f!=null&&O(f.rank===4||f.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${f.rank}.`),Oh(i,l,u,f,h,r)}const R$=U({batchNorm4d_:$L});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kL(n,t,e){const s=F(n,"x","bincount"),a=F(t,"weights","bincount");O(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),O(e>=0,()=>`size must be non-negative, but got ${e}.`),O(a.size===s.size||a.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${a.shape}.`);const r={x:s,weights:a},i={size:e};return G.runKernel(K0,r,i)}const D$=U({bincount_:kL});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IL(n,t){const e=F(n,"x","bitwiseAnd"),s=F(t,"y","bitwiseAnd");if(!Jt(e.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${e.shape}, y: ${s.shape}`);if(e.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${e.dtype} and type of y: ${s.dtype}`);const a={a:e,b:s};return G.runKernel(Sp,a)}const EL=U({bitwiseAnd_:IL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AL(n,t){const e=F(n,"s0","broadcastArgs","int32"),s=F(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const a={s0:e,s1:s};return G.runKernel(Y0,a)}const RL=U({broadcastArgs_:AL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(n,t){let e=F(n,"broadcastTo","x");const s=e.shape;if(Ds(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const h=e.shape.slice();for(;h.length<t.length;)h.unshift(1);e=q(e,h)}const a=e.shape,r=Array.from(t);for(let h=t.length-1;h>=0;h--)if(a[h]===t[h])r[h]=1;else if(e.shape[h]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(r.map((h,f)=>h>1?f:-1).filter(h=>h>=0).length===0)return xr(e);const l={x:e},u={reps:r};return G.runKernel(Eh,l,u)}const Al=U({broadcastTo_:DL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OL(n){const e={x:F(n,"x","ceil","float32")};return G.runKernel(Gc,e)}const O$=U({ceil_:OL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kl(n,t,e){Ds(n),e=e||ql(t);const s={shape:n,value:t,dtype:e};return G.runKernel(hx,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _L(n,t,e){const s=F(n,"x","clipByValue");if(O(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Kl(s.shape,t,s.dtype);const a={x:s},r={clipValueMin:t,clipValueMax:e};return G.runKernel(Hc,a,r)}const fs=U({clipByValue_:_L});function FL(n){return He(n,0)}const _$=U({concat1d_:FL});function LL(n,t){return He(n,t)}const F$=U({concat2d_:LL});function zL(n,t){return He(n,t)}const L$=U({concat3d_:zL});function ML(n,t){return He(n,t)}const z$=U({concat4d_:ML});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BL(n,t,e,s,a="NHWC",r=[1,1],i){const l=F(n,"x","conv2d","float32"),u=F(t,"filter","conv2d","float32");let h=l,f=!1;l.rank===3&&(f=!0,h=q(l,[1,l.shape[0],l.shape[1],l.shape[2]])),O(h.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${h.rank}.`),O(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),qn("conv2d",s,i);const p=a==="NHWC"?h.shape[3]:h.shape[1];O(p===u.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`),O($n(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),O(yo(r),()=>"Error in conv2D: Dilated rates should be larger than 0."),O(yo(e),()=>"Error in conv2D: Strides should be larger than 0.");const m={x:h,filter:u},y={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i},b=G.runKernel(Tp,m,y);return f?q(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const hi=U({conv2d_:BL});function VL(n,t,e,s,a="NWC",r=1,i){const l=F(n,"x","conv1d"),u=F(t,"filter","conv1d");let h=l,f=!1;l.rank===2&&(f=!0,h=q(l,[1,l.shape[0],l.shape[1]])),O(h.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${h.rank}.`),O(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),qn("conv1d",s,i),O(h.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${h.shape[2]}) must match input depth for filter ${u.shape[1]}.`),O($n(e,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${r}'`),O(yo(r),()=>"Error in conv1D: Dilated rates should be larger than 0."),O(yo(e),()=>"Error in conv1D: Stride should be larger than 0."),O(a==="NWC",()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);const p=q(u,[1,u.shape[0],u.shape[1],u.shape[2]]),m=q(h,[h.shape[0],1,h.shape[1],h.shape[2]]),v=hi(m,p,[1,e],s,"NHWC",[1,r],i);return f?q(v,[v.shape[2],v.shape[3]]):q(v,[v.shape[0],v.shape[2],v.shape[3]])}const e1=U({conv1d_:VL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PL(n,t,e,s,a,r="NHWC",i){O(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let l=n,u=t,h=!1;t.rank===3&&(h=!0,u=q(t,[1,t.shape[0],t.shape[1],t.shape[2]]),l=[1,n[0],n[1],n[2]]),O(l.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${l.length}.`),O(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),O(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const f=r==="NHWC"?l[3]:l[1],p=r==="NHWC"?u.shape[3]:u.shape[1];O(f===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${e.shape[2]}.`),O(p===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${e.shape[3]}.`),qn("conv2dDerInput",a,i);const m={dy:u,filter:e},y={strides:s,pad:a,dataFormat:r,dimRoundingMode:i,inputShape:l},b=G.runKernel($p,m,y);return h?q(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const n1=U({conv2DBackpropInput_:PL});function UL(n,t,e,s,a,r){const i=F(n,"x","conv2dTranspose"),l=F(t,"filter","conv2dTranspose");return n1(e,i,l,s,a,"NHWC",r)}const s1=U({conv2dTranspose_:UL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WL(n,t,e,s,a="NDHWC",r=[1,1,1]){const i=F(n,"x","conv3d"),l=F(t,"filter","conv3d");let u=i,h=!1;i.rank===4&&(h=!0,u=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),O(l.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${l.rank}.`),O(u.shape[4]===l.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${l.shape[3]}.`),O($n(e,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),O(a==="NDHWC",()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),O(yo(r),()=>"Error in conv3D: Dilated rates should be larger than 0."),O(yo(e),()=>"Error in conv3D: Strides should be larger than 0.");const f={x:u,filter:l},p={strides:e,pad:s,dataFormat:a,dilations:r},m=G.runKernel(kp,f,p);return h?q(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const M$=U({conv3d_:WL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GL(n,t,e,s,a){O(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let r=n,i=t,l=!1;t.rank===4&&(l=!0,i=q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),r=[1,n[0],n[1],n[2],n[3]]);const u=r[4],h=i.shape[4];O(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),O(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),O(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),O(u===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[3]}.`),O(h===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[4]}.`);const f={dy:i,filter:e},p={pad:a,strides:s,inputShape:r},m=G.runKernel(tx,f,p);return l?q(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const B$=U({conv3DBackpropInput_:GL});function HL(n,t,e,s,a){const r=F(n,"x","conv3dTranspose"),i=F(t,"filter","conv3dTranspose");return B$(e,r,i,s,a)}const V$=U({conv3dTranspose_:HL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qL(n){const e={x:F(n,"x","cos","float32")};return G.runKernel(qc,e)}const vm=U({cos_:qL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jL(n){const e={x:F(n,"x","cosh","float32")};return G.runKernel(jc,e)}const a1=U({cosh_:jL});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(n,t=0,e=!1,s=!1){const r={x:F(n,"x","cumprod")},i={axis:t,exclusive:e,reverse:s};return G.runKernel(ex,r,i)}const jf=U({cumprod_:XL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KL(n,t=0,e=!1,s=!1){const r={x:F(n,"x","cumsum")},i={axis:t,exclusive:e,reverse:s};return G.runKernel(Ip,r,i)}const r1=U({cumsum_:KL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YL(n,t,e,s=!1){const a=F(n,"x","denseBincount"),r=F(t,"weights","denseBincount");O(a.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),O(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),O(e>=0,()=>`size must be non-negative, but got ${e}.`),O(r.size===a.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${r.shape}.`);const i={x:a,weights:r},l={size:e,binaryOutput:s};return G.runKernel(sx,i,l)}const o0=U({denseBincount_:YL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(n,t,e="NHWC"){const s=F(n,"x","depthToSpace","float32"),a=e==="NHWC"?s.shape[1]:s.shape[2],r=e==="NHWC"?s.shape[2]:s.shape[3],i=e==="NHWC"?s.shape[3]:s.shape[1];O(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),O(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    ${s.shape}`),O(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t} for depthToSpace with input shape
        ${s.shape}`),O(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`);const l={x:s},u={blockSize:t,dataFormat:e};return G.runKernel(ax,l,u)}const P$=U({depthToSpace_:ZL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QL(n,t,e,s,a="NHWC",r=[1,1],i){const l=F(n,"x","depthwiseConv2d","float32"),u=F(t,"filter","depthwiseConv2d","float32");let h=l,f=!1;l.rank===3&&(f=!0,h=q(l,[1,l.shape[0],l.shape[1],l.shape[2]])),O(h.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),O(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const p=a==="NHWC"?h.shape[3]:h.shape[1];O(p===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${u.shape[2]}.`),qn("depthwiseConv2d",s,i);const m={x:h,filter:u},y={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i},b=G.runKernel(Ep,m,y);return f?q(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const _h=U({depthwiseConv2d_:QL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JL(n){const e={x:F(n,"x","diag")};return G.runKernel(ox,e)}const tz=U({diag_:JL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ez(n,t,e,s,a=[1,1],r="NHWC"){const i=F(n,"x","dilation2d"),l=F(t,"filter","dilation2d");O(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),O(l.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${l.rank}.`),O(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let u=i,h=!1;i.rank===3&&(u=q(i,[1,i.shape[0],i.shape[1],i.shape[2]]),h=!0),O(u.shape[3]===l.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${l.shape[2]}`);const f={x:u,filter:l},p={strides:e,pad:s,dilations:a},m=G.runKernel(Ap,f,p);return h?q(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const U$=U({dilation2d_:ez});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ll(n,t){const e=n.length,s=[];for(let a=0;a<e;a++){const r=e-1-a,i=n[r]||1;(t[t.length-1-a]||1)>1&&i===1&&s.unshift(r)}return s}function un(n,t){const e=[];for(let s=0;s<t.length;s++){const a=n[n.length-s-1],r=t.length-s-1,i=t[r];(a==null||a===1&&i>1)&&e.unshift(r)}return e}function Pt(n,t){const e=Math.max(n.length,t.length),s=new Array(e);for(let a=0;a<e;a++){let r=n[n.length-a-1];r==null&&(r=1);let i=t[t.length-a-1];if(i==null&&(i=1),r===1)s[e-a-1]=i;else if(i===1)s[e-a-1]=r;else if(r!==i){const l=`Operands could not be broadcast together with shapes ${n} and ${t}.`;throw Error(l)}else s[e-a-1]=r}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nz(n,t){let e=F(n,"a","equal","string_or_numeric"),s=F(t,"b","equal","string_or_numeric");[e,s]=Me(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return G.runKernel(Rp,a)}const Ta=U({equal_:nz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sz(n,t,e){const s=F(t,"a","where"),a=F(e,"b","where"),r=F(n,"condition","where","bool"),i=Pt(Pt(r.shape,s.shape),a.shape),l=Al(r,i),u=Al(s,i),h=Al(a,i),f={condition:l,t:u,e:h};return G.runKernel(om,f)}const On=U({where_:sz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function az(n){const e={x:F(n,"x","zerosLike")};return G.runKernel(gm,e)}const re=U({zerosLike_:az});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rz(n,t){let e=F(n,"a","div"),s=F(t,"b","div");[e,s]=Me(e,s);const a=Dt(e,s),r=re(a),i=Ta(s,r);return On(i,r,a)}const W$=U({divNoNan_:rz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iz(n,t){const e=F(n,"t1","dot"),s=F(t,"t2","dot");O((e.rank===1||e.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const a=e.rank===1?e.size:e.shape[1],r=s.rank===1?s.size:s.shape[0];if(O(a===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${r}.`),e.rank===1&&s.rank===1){const i=q(e,[1,-1]),l=q(s,[-1,1]),u=Yt(i,l);return q(u,[])}else if(e.rank===1&&s.rank===2){const i=q(e,[1,-1]),l=q(s,[s.shape[0],s.shape[1]]),u=Yt(i,l);return q(u,[u.size])}else if(e.rank===2&&s.rank===1){const i=q(s,[-1,1]),l=Yt(e,i);return q(l,[l.size])}else{const i=q(s,[s.shape[0],s.shape[1]]);return Yt(e,i)}}const G$=U({dot_:iz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oz(n,...t){const e=t.map((a,r)=>F(a,`tensors${r}`,"einsum")),s={equation:n};return G.runKernel(lx,e,s)}const Tl=U({einsum_:oz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lz(n){const e={x:F(n,"x","elu","float32")};return G.runKernel(Kc,e)}const Fh=U({elu_:lz});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uz(n,t){const e=F(n,"x","ensureShape","string_or_numeric");if(!vF(e.shape,t))throw new Error(`EnsureShape: Shape of tensor ${e.shape} is not compatible with expected shape ${t}`);return n}const cz=U({ensureShape_:uz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hz(n){let t=F(n,"x","erf");O(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Nt(t,"float32"));const e={x:t};return G.runKernel(Yc,e)}const i1=U({erf_:hz});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o1(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function H$(n,t,e){const s=n.length+t.length,a=[];let r=0,i=0;for(let l=0;l<s;l++)e.indexOf(l)===-1?a.push(n[r++]):a.push(t[i++]);return a}function yn(n,t){const e=[],s=n.length;for(let r=0;r<s;r++)t.indexOf(r)===-1&&e.push(n[r]);const a=t.map(r=>n[r]);return[e,a]}function qe(n,t){const e=t.map(s=>1);return H$(n,e,t)}function kn(n,t,e){O(o1(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function _e(n,t){if(o1(n,t))return null;const e=[];for(let s=0;s<t;++s)n.indexOf(s)===-1&&e.push(s);return n.forEach(s=>e.push(s)),e}function Si(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function je(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dz(n,t=null,e=!1){const a={x:F(n,"x","max")},r={reductionIndices:t,keepDims:e};return G.runKernel(Wp,a,r)}const aa=U({max_:dz});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fz(n,t=null,e=!1){const a={x:F(n,"x","min")},r={axis:t,keepDims:e};return G.runKernel(jp,a,r)}const Sc=U({min_:fz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pz(n,t){let e=F(n,"base","pow"),s=F(t,"exp","pow");[e,s]=Me(e,s);const a={a:e,b:s};return G.runKernel(dh,a)}const wr=U({pow_:pz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lt(n,t){if((ra(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&ra(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return vi(n,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mz(n){const e={x:F(n,"x","sqrt","float32")};return G.runKernel(Ch,e)}const Tn=U({sqrt_:mz});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(n){const t=F(n,"x","square"),e={};return G.runKernel("Square",{x:t},e)}const we=U({square_:gz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yz(n,t=null,e=!1){let s=F(n,"x","sum");s.dtype==="bool"&&(s=Nt(s,"int32"));const a={x:s},r={axis:t,keepDims:e};return G.runKernel(um,a,r)}const Et=U({sum_:yz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bz(n,t="euclidean",e=null,s=!1){n=F(n,"x","norm");const a=q$(n,t,e);let r=a.shape;if(s){const i=jt(e,n.shape);r=qe(a.shape,i)}return q(a,r)}function q$(n,t,e=null){if(n.rank===0)return en(n);if(n.rank!==1&&e===null)return q$(q(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return Et(en(n),e);if(t===1/0)return aa(en(n),e);if(t===-1/0)return Sc(en(n),e);if(t==="euclidean"||t===2)return Tn(Et(wr(en(n),Lt(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return aa(Et(en(n),e[0]),e[1]-1);if(t===1/0)return aa(Et(en(n),e[1]),e[0]);if(t===-1/0)return Sc(Et(en(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Tn(Et(we(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const Lh=U({norm_:bz});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(n,t=null,e=!1){return Lh(n,"euclidean",t,e)}const j$=U({euclideanNorm_:xz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vz(n){const e={x:F(n,"x","exp")};return G.runKernel(Zc,e)}const ps=U({exp_:vz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wz(n,t=0){const e=F(n,"x","expandDims","string_or_numeric");O(t<=e.rank,()=>"Axis must be <= rank of the tensor");const s={input:e},a={dim:t};return G.runKernel(Dp,s,a)}const Un=U({expandDims_:wz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sz(n){const e={x:F(n,"x","expm1")};return G.runKernel(Qc,e)}const X$=U({expm1_:Sz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nz(n,t){const e=F(n,"x","tile","string_or_numeric");O(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const s={x:e},a={reps:t};return G.runKernel(Eh,s,a)}const Js=U({tile_:Nz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cz(n,t,e,s="float32"){t==null&&(t=n);const a=Ht([n,t],s),r=n<=t?n:t;for(let l=0;l<r;++l)a.set(1,l,l);const i=q(a.toTensor(),[n,t]);if(e==null)return i;if(e.length===1)return Js(Un(i,0),[e[0],1,1]);if(e.length===2)return Js(Un(Un(i,0),0),[e[0],e[1],1,1]);if(e.length===3)return Js(Un(Un(Un(i,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const l1=U({eye_:Cz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tz(n){const e={x:F(n,"x","floor","float32")};return G.runKernel(Jc,e)}const zh=U({floor_:Tz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $z(n,t,e=0,s=0){const a=F(n,"x","gather"),r=F(t,"indices","gather","int32"),i={x:a,indices:r},l={axis:e,batchDims:s};return G.runKernel(_p,i,l)}const Mh=U({gather_:$z});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kz(n,t){let e=F(n,"a","greater","string_or_numeric"),s=F(t,"b","greater","string_or_numeric");[e,s]=Me(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return G.runKernel(Fp,a)}const xs=U({greater_:kz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iz(n,t){let e=F(n,"a","greaterEqual","string_or_numeric"),s=F(t,"b","greaterEqual","string_or_numeric");[e,s]=Me(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return G.runKernel(eh,a)}const Ni=U({greaterEqual_:Iz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ez(n){const e={input:F(n,"input","imag")};return G.runKernel(mx,e)}const wm=U({imag_:Ez});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Az(n){const e={x:F(n,"x","isFinite")};return G.runKernel(sh,e)}const K$=U({isFinite_:Az});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rz(n){const e={x:F(n,"x","isInf")};return G.runKernel(ah,e)}const Y$=U({isInf_:Rz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dz(n){const e={x:F(n,"x","isNaN")};return G.runKernel(rh,e)}const Z$=U({isNaN_:Dz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oz(n,t=.2){const s={x:F(n,"x","leakyRelu")},a={alpha:t};return G.runKernel(Lp,s,a)}const Sm=U({leakyRelu_:Oz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(n,t){let e=F(n,"a","less","string_or_numeric"),s=F(t,"b","less","string_or_numeric");[e,s]=Me(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return G.runKernel(zp,a)}const Nc=U({less_:_z});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fz(n,t){let e=F(n,"a","lessEqual","string_or_numeric"),s=F(t,"b","lessEqual","string_or_numeric");[e,s]=Me(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return G.runKernel(Mp,a)}const ko=U({lessEqual_:Fz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lz(n,t,e){if(e<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:t,num:e};return G.runKernel(gx,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zz(n,t=5,e=1,s=1,a=.5){const r=F(n,"x","localResponseNormalization");O(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),O(Ol(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=r,l=!1;r.rank===3&&(l=!0,i=q(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const u={x:i},h={depthRadius:t,bias:e,alpha:s,beta:a},f=G.runKernel(Up,u,h);return l?q(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Q$=U({localResponseNormalization_:zz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mz(n){const e={x:F(n,"x","log","float32")};return G.runKernel(ih,e)}const As=U({log_:Mz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bz(n){const e={x:F(n,"x","log1p")};return G.runKernel(oh,e)}const Nm=U({log1p_:Bz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vz(n,t){O(Wb(n),()=>"The f passed in variableGrads(f) must be a function"),O(t==null||Array.isArray(t)&&t.every(h=>h instanceof Gf),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const h in G.registeredVariables)t.push(G.registeredVariables[h])}const s=e?t.filter(h=>!h.trainable):null,a=t.length;t=t.filter(h=>h.trainable),O(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);const r=!0,{value:i,grads:l}=G.gradients(n,t,null,r);O(l.some(h=>h!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),O(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const u={};return t.forEach((h,f)=>{l[f]!=null&&(u[h.name]=l[f])}),s!=null&&s.forEach(h=>u[h.name]=null),{value:i,grads:u}}function Sr(n){return G.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pz(n){const e={x:F(n,"x","neg")};return G.runKernel(Kp,e)}const Ie=U({neg_:Pz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uz(n){const e={x:F(n,"x","softplus")};return G.runKernel(Nh,e)}const Yl=U({softplus_:Uz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wz(n){const t=F(n,"x","logSigmoid");return Sr(s=>({value:Ie(Yl(Ie(s))),gradFunc:i=>H(i,Ua(Ie(s)))}))(t)}const J$=U({logSigmoid_:Wz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gz(n,t){let e=F(n,"a","sub"),s=F(t,"b","sub");[e,s]=Me(e,s);const a={a:e,b:s};return G.runKernel($h,a)}const kt=U({sub_:Gz});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hz(n,t=-1){const e=F(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Sr((a,r)=>{const l=aa(a,t,!0),u=kt(a,l),h=kt(Nt(u,"float32"),As(Et(ps(u),t,!0)));return r([h]),{value:h,gradFunc:(p,m)=>{const[y]=m,b=!0,w=ps(y);return kt(p,H(Et(p,t,b),w))}}})(e)}const u1=U({logSoftmax_:Hz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qz(n,t=null,e=!1){const s=F(n,"x","logSumExp"),a=jt(t,s.shape),r=aa(s,a,!0),i=kt(s,r),l=ps(i),u=Et(l,a),h=As(u),f=yt(q(r,h.shape),h);if(e){const p=qe(f.shape,a);return q(f,p)}return f}const Cm=U({logSumExp_:qz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(n,t){const e=F(n,"a","logicalAnd","bool"),s=F(t,"b","logicalAnd","bool");Pt(e.shape,s.shape);const a={a:e,b:s};return G.runKernel(Bp,a)}const qa=U({logicalAnd_:jz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xz(n){const e={x:F(n,"x","logicalNot","bool")};return G.runKernel(Vp,e)}const Tm=U({logicalNot_:Xz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kz(n,t){const e=F(n,"a","logicalOr","bool"),s=F(t,"b","logicalOr","bool");Pt(e.shape,s.shape);const a={a:e,b:s};return G.runKernel(Pp,a)}const c1=U({logicalOr_:Kz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yz(n,t){const e=F(n,"a","logicalXor","bool"),s=F(t,"b","logicalXor","bool");return Pt(e.shape,s.shape),qa(c1(n,t),Tm(qa(n,t)))}const tk=U({logicalXor_:Yz});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pf=2147483648;function Zz(n,t,e="left"){const s=F(n,"sortedSequence","searchSorted"),a=F(t,"values","searchSorted"),r=s.shape[s.shape.length-1],i=a.shape[a.shape.length-1],l=q(s,[-1,r]),u=q(a,[-1,i]);if(l.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(l.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ht(u.shape)>=pf)throw new Error(`values tensor size must less than ${pf}`);if(l.shape[1]>=pf)throw new Error(`trailing dim_size must less than ${pf} for int32 output type, was ${l.shape[1]}`);const h={sortedSequence:l,values:u},f={side:e};return G.runKernel(_x,h,f)}const h1=U({searchSorted_:Zz});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qz(n,t){return h1(n,t,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jz(n,t,e,s,a){const r=F(n,"x","maxPool"),i=1;let l=r,u=!1;r.rank===3&&(u=!0,l=q(r,[1,r.shape[0],r.shape[1],r.shape[2]])),O(l.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.rank}.`),O($n(e,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),qn("maxPool",s,a);const h={x:l},f={filterSize:t,strides:e,pad:s,dimRoundingMode:a},p=G.runKernel(Gp,h,f);return u?q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const $m=U({maxPool_:Jz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n,t=[1,1,1],e,s,a,r="NDHWC"){const i=F(n,"x","maxPool3d");let l=i,u=!1;i.rank===4&&(u=!0,l=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(l.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),O(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),qn("maxPool3d",s,a);const h={x:l},f={filterSize:t,strides:e,pad:s,dimRoundingMode:a,dataFormat:r},p=G.runKernel(Hp,h,f);return u?q(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const ek=U({maxPool3d_:tM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eM(n,t,e,s,a=!1){const i={x:F(n,"x","maxPoolWithArgmax")},l={filterSize:t,strides:e,pad:s,includeBatchInIndex:a},u=G.runKernel(vx,i,l);return{result:u[0],indexes:u[1]}}const nM=U({maxPoolWithArgmax_:eM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(n,t){let e=F(n,"a","maximum"),s=F(t,"b","maximum");[e,s]=Me(e,s),e.dtype==="bool"&&(e=Nt(e,"int32"),s=Nt(s,"int32")),Pt(e.shape,s.shape);const a={a:e,b:s};return G.runKernel(lh,a)}const kr=U({maximum_:sM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aM(n,t=null,e=!1){const a={x:F(n,"x","mean")},r={axis:t,keepDims:e};return G.runKernel(qp,a,r)}const ze=U({mean_:aM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nn(n,t="float32"){if(Ds(n),t==="complex64"){const s=nn(n,"float32"),a=nn(n,"float32");return li(s,a)}const e=_n(ht(n),t);return G.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function es(n,t="float32"){if(Ds(n),t==="complex64"){const s=es(n,"float32"),a=nn(n,"float32");return li(s,a)}const e=W0(ht(n),t);return G.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rM(n,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=F(n,"x","meshgrid",n instanceof De?n.dtype:"float32");if(t===void 0)return[s];let a=F(t,"y","meshgrid",t instanceof De?t.dtype:"float32");const r=ht(s.shape),i=ht(a.shape);return e==="xy"?(s=q(s,[1,-1]),a=q(a,[-1,1]),[Yt(es([i,1],s.dtype),s),Yt(a,es([1,r],a.dtype))]):(s=q(s,[-1,1]),a=q(a,[1,-1]),[Yt(s,es([1,i],s.dtype)),Yt(es([r,1],a.dtype),a)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iM(n,t){let e=F(n,"a","minimum"),s=F(t,"b","minimum");[e,s]=Me(e,s),e.dtype==="bool"&&(e=Nt(e,"int32"),s=Nt(s,"int32")),Pt(e.shape,s.shape);const a={a:e,b:s};return G.runKernel(uh,a)}const xo=U({minimum_:iM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oM(n,t,e){O(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=F(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");O(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const a=e==="reflect"?1:0;for(let l=0;l<s.rank;l++)O(t[l].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),O(t[l][0]>=0&&t[l][0]<=s.shape[l]-a&&t[l][1]>=0&&t[l][1]<=s.shape[l]-a,()=>`Padding in dimension ${l} cannot be greater than or equal to ${s.shape[l]-a} or less than 0 for input of shape ${s.shape}`);const r={paddings:t,mode:e},i={x:s};return G.runKernel(Xp,i,r)}const nk=U({mirrorPad_:oM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(n,t){let e=F(n,"a","mod"),s=F(t,"b","mod");[e,s]=Me(e,s);const a={a:e,b:s};return G.runKernel(ch,a)}const sk=U({mod_:lM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uM(n,t=null,e=!1){n=F(n,"x","moments");const s=jt(t,n.shape),a=ze(n,s,e);let r=a.shape;e||(r=qe(a.shape,s));const i=we(kt(Nt(n,"float32"),q(a,r))),l=ze(i,s,e);return{mean:a,variance:l}}const km=U({moments_:uM});function cM(n,t,e,s){const a=F(t,"data","multiRNNCell"),r=Hf(e,"c","multiRNNCell"),i=Hf(s,"h","multiRNNCell");let l=a;const u=[];for(let p=0;p<n.length;p++){const m=n[p](l,r[p],i[p]);u.push(m[0]),u.push(m[1]),l=m[1]}const h=[],f=[];for(let p=0;p<u.length;p+=2)h.push(u[p]),f.push(u[p+1]);return[h,f]}const hM=U({multiRNNCell_:cM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dM(n,t,e,s=!1){const a=F(n,"logits","multinomial"),r=a.size,i=a.rank;if(r<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${r}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);e=e||Math.random();const u={logits:i===1?q(a,[1,-1]):a},h={numSamples:t,seed:e,normalized:s},f=G.runKernel(wx,u,h);return i===1?q(f,[f.size]):f}const fM=U({multinomial_:dM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(n,t){let e=F(n,"a","notEqual","string_or_numeric"),s=F(t,"b","notEqual","string_or_numeric");[e,s]=Me(e,s),Pt(e.shape,s.shape);const a={a:e,b:s};return G.runKernel(Yp,a)}const zl=U({notEqual_:pM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mM(n,t,e=1,s=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:F(n,"indices","oneHot","int32")},l={dtype:a,depth:t,onValue:e,offValue:s};return G.runKernel(Qp,i,l)}const d1=U({oneHot_:mM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gM(n){const e={x:F(n,"x","onesLike")};return G.runKernel(Zp,e)}const Rs=U({onesLike_:gM});function yM(n,t){const e=F(n,"v1","outerProduct"),s=F(t,"v2","outerProduct");O(e.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${s.rank}.`);const a=q(e,[-1,1]),r=q(s,[1,-1]);return Yt(a,r)}const bM=U({outerProduct_:yM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xM(n,t,e=0){const s=F(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:e},r={x:s};return G.runKernel(tm,r,a)}const Ci=U({pad_:xM});function vM(n,t,e=0){return O(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Ci(n,[t],e)}const wM=U({pad1d_:vM});function SM(n,t,e=0){return O(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ci(n,t,e)}const NM=U({pad2d_:SM});function CM(n,t,e=0){return O(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ci(n,t,e)}const TM=U({pad3d_:CM});function $M(n,t,e=0){return O(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ci(n,t,e)}const kM=U({pad4d_:$M});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IM(n,t,e){const s=F(n,"x","spaceToBatchND");O(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),O(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),O(s.shape.reduce((i,l,u)=>u>0&&u<=t.length?i&&(l+e[u-1][0]+e[u-1][1])%t[u-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const a={x:s},r={blockShape:t,paddings:e};return G.runKernel(cm,a,r)}const Im=U({spaceToBatchND_:IM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(n,t,e,s,a,r,i){a==null&&(a=[1,1]),r==null&&(r=1),s===0&&(s="valid");const l=F(n,"x","maxPool");let u=l,h=!1;l.rank===3&&(h=!0,u=q(l,[1,l.shape[0],l.shape[1],l.shape[2]])),O($n(r,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`);const f=la(u.shape,t,r,a,s),p=[f.dilationHeight,f.dilationWidth];let m;s==="same"?m=RM([f.filterHeight,f.filterWidth],p):m=[[0,0],[0,0]];const y=p[0]===1&&p[1]===1,[b,w]=AM([f.inHeight,f.inWidth],p,m),v=y?s:"valid",S=y?u:Im(u,p,b),$=(e==="avg"?()=>bm(S,t,r,v,i):()=>$m(S,t,r,v,i))(),T=y?$:xm($,p,w);return h?q(T,[T.shape[1],T.shape[2],T.shape[3]]):T}function AM(n,t,e){const s=e.map(f=>f[0]),a=e.map(f=>f[1]),r=n.concat(s,a),i=t.map((f,p)=>(f-r[p]%f)%f),l=a.map((f,p)=>f+i[p]),u=t.map((f,p)=>[s[p],l[p]]),h=t.map((f,p)=>[0,i[p]]);return[u,h]}function RM(n,t){const s=n.map((i,l)=>i+(i-1)*(t[l]-1)).map(i=>i-1),a=s.map(i=>Math.floor(i/2)),r=s.map((i,l)=>i-a[l]);return s.map((i,l)=>[a[l],r[l]])}const ak=U({pool_:EM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(n,t){const e=F(n,"x","prelu"),s=F(t,"alpha","prelu"),a={x:e,alpha:s};return G.runKernel(em,a)}const Em=U({prelu_:DM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OM(n,t=null,e=!1){let s=F(n,"x","prod");s.dtype==="bool"&&(s=Nt(s,"int32"));const a={x:s},r={axis:t,keepDims:e};return G.runKernel(nm,a,r)}const rk=U({prod_:OM});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _M(n,t,e,s){const a=n.map((f,p)=>F(f,`tensors${p}`,"raggedGather","int32")),r=F(t,"paramsDenseValues","raggedGather"),i=F(e,"indices","raggedGather","int32"),l={paramsNestedSplits:a,paramsDenseValues:r,indices:i},u={outputRaggedRank:s},h=G.runKernel(Tx,l,u);return{outputNestedSplits:h.slice(0,h.length-1),outputDenseValues:h[h.length-1]}}const FM=U({raggedGather_:_M});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(n,t,e){const s=F(n,"starts","raggedRange"),a=F(t,"limits","raggedRange",s.dtype),r=F(e,"deltas","raggedRange",s.dtype),i={starts:s,limits:a,deltas:r},l=G.runKernel($x,i);return{rtNestedSplits:l[0],rtDenseValues:l[1]}}const zM=U({raggedRange_:LM});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM(n,t,e,s,a){const r=F(n,"shape","raggedTensorToTensor","int32"),i=F(t,"values","raggedTensorToTensor"),l=F(e,"defaultValue","raggedTensorToTensor",i.dtype),u=s.map((p,m)=>F(p,`tensors${m}`,"raggedTensorToTensor","int32")),h={shape:r,values:i,defaultValue:l,rowPartitionTensors:u},f={rowPartitionTypes:a};return G.runKernel(kx,h,f)}const BM=U({raggedTensorToTensor_:MM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VM(n,t,e){Ds(n);const s=ht(n);let a=null;if(e==null||e==="float32")a=new Float32Array(s);else if(e==="int32")a=new Int32Array(s);else if(e==="bool")a=new Uint8Array(s);else throw new Error(`Unknown data type ${e}`);for(let r=0;r<s;r++)a[r]=t();return G.makeTensor(a,n,e)}const PM=U({rand_:VM});var Af={exports:{}},UM=Af.exports,JC;function WM(){return JC||(JC=1,function(n){(function(t,e,s){function a(u){var h=this,f=l();h.next=function(){var p=2091639*h.s0+h.c*23283064365386963e-26;return h.s0=h.s1,h.s1=h.s2,h.s2=p-(h.c=p|0)},h.c=1,h.s0=f(" "),h.s1=f(" "),h.s2=f(" "),h.s0-=f(u),h.s0<0&&(h.s0+=1),h.s1-=f(u),h.s1<0&&(h.s1+=1),h.s2-=f(u),h.s2<0&&(h.s2+=1),f=null}function r(u,h){return h.c=u.c,h.s0=u.s0,h.s1=u.s1,h.s2=u.s2,h}function i(u,h){var f=new a(u),p=h&&h.state,m=f.next;return m.int32=function(){return f.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,p&&(typeof p=="object"&&r(p,f),m.state=function(){return r(f,{})}),m}function l(){var u=4022871197,h=function(f){f=String(f);for(var p=0;p<f.length;p++){u+=f.charCodeAt(p);var m=.02519603282416938*u;u=m>>>0,m-=u,m*=u,u=m>>>0,m-=u,u+=m*4294967296}return(u>>>0)*23283064365386963e-26};return h}e&&e.exports?e.exports=i:this.alea=i})(UM,n)}(Af)),Af.exports}var Rf={exports:{}},GM=Rf.exports,tT;function HM(){return tT||(tT=1,function(n){(function(t,e,s){function a(l){var u=this,h="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var p=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^p^p>>>8},l===(l|0)?u.x=l:h+=l;for(var f=0;f<h.length+64;f++)u.x^=h.charCodeAt(f)|0,u.next()}function r(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function i(l,u){var h=new a(l),f=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,f&&(typeof f=="object"&&r(f,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xor128=i})(GM,n)}(Rf)),Rf.exports}var Df={exports:{}},qM=Df.exports,eT;function jM(){return eT||(eT=1,function(n){(function(t,e,s){function a(l){var u=this,h="";u.next=function(){var p=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(p^p<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:h+=l;for(var f=0;f<h.length+64;f++)u.x^=h.charCodeAt(f)|0,f==h.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function r(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function i(l,u){var h=new a(l),f=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,f&&(typeof f=="object"&&r(f,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xorwow=i})(qM,n)}(Df)),Df.exports}var Of={exports:{}},XM=Of.exports,nT;function KM(){return nT||(nT=1,function(n){(function(t,e,s){function a(l){var u=this;u.next=function(){var f=u.x,p=u.i,m,y;return m=f[p],m^=m>>>7,y=m^m<<24,m=f[p+1&7],y^=m^m>>>10,m=f[p+3&7],y^=m^m>>>3,m=f[p+4&7],y^=m^m<<7,m=f[p+7&7],m=m^m<<13,y^=m^m<<9,f[p]=y,u.i=p+1&7,y};function h(f,p){var m,y=[];if(p===(p|0))y[0]=p;else for(p=""+p,m=0;m<p.length;++m)y[m&7]=y[m&7]<<15^p.charCodeAt(m)+y[m+1&7]<<13;for(;y.length<8;)y.push(0);for(m=0;m<8&&y[m]===0;++m);for(m==8?y[7]=-1:y[m],f.x=y,f.i=0,m=256;m>0;--m)f.next()}h(u,l)}function r(l,u){return u.x=l.x.slice(),u.i=l.i,u}function i(l,u){l==null&&(l=+new Date);var h=new a(l),f=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,f&&(f.x&&r(f,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xorshift7=i})(XM,n)}(Of)),Of.exports}var _f={exports:{}},YM=_f.exports,sT;function ZM(){return sT||(sT=1,function(n){(function(t,e,s){function a(l){var u=this;u.next=function(){var f=u.w,p=u.X,m=u.i,y,b;return u.w=f=f+1640531527|0,b=p[m+34&127],y=p[m=m+1&127],b^=b<<13,y^=y<<17,b^=b>>>15,y^=y>>>12,b=p[m]=b^y,u.i=m,b+(f^f>>>16)|0};function h(f,p){var m,y,b,w,v,S=[],C=128;for(p===(p|0)?(y=p,p=null):(p=p+"\0",y=0,C=Math.max(C,p.length)),b=0,w=-32;w<C;++w)p&&(y^=p.charCodeAt((w+32)%p.length)),w===0&&(v=y),y^=y<<10,y^=y>>>15,y^=y<<4,y^=y>>>13,w>=0&&(v=v+1640531527|0,m=S[w&127]^=y+v,b=m==0?b+1:0);for(b>=128&&(S[(p&&p.length||0)&127]=-1),b=127,w=4*128;w>0;--w)y=S[b+34&127],m=S[b=b+1&127],y^=y<<13,m^=m<<17,y^=y>>>15,m^=m>>>12,S[b]=y^m;f.w=v,f.X=S,f.i=b}h(u,l)}function r(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function i(l,u){l==null&&(l=+new Date);var h=new a(l),f=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,f&&(f.X&&r(f,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xor4096=i})(YM,n)}(_f)),_f.exports}var Ff={exports:{}},QM=Ff.exports,aT;function JM(){return aT||(aT=1,function(n){(function(t,e,s){function a(l){var u=this,h="";u.next=function(){var p=u.b,m=u.c,y=u.d,b=u.a;return p=p<<25^p>>>7^m,m=m-y|0,y=y<<24^y>>>8^b,b=b-p|0,u.b=p=p<<20^p>>>12^m,u.c=m=m-y|0,u.d=y<<16^m>>>16^b,u.a=b-p|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):h+=l;for(var f=0;f<h.length+20;f++)u.b^=h.charCodeAt(f)|0,u.next()}function r(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function i(l,u){var h=new a(l),f=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,f&&(typeof f=="object"&&r(f,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.tychei=i})(QM,n)}(Ff)),Ff.exports}var Lf={exports:{}};const tB={},eB=Object.freeze(Object.defineProperty({__proto__:null,default:tB},Symbol.toStringTag,{value:"Module"})),nB=aF(eB);var sB=Lf.exports,rT;function aB(){return rT||(rT=1,function(n){(function(t,e,s){var a=256,r=6,i=52,l="random",u=s.pow(a,r),h=s.pow(2,i),f=h*2,p=a-1,m;function y(T,I,D){var z=[];I=I==!0?{entropy:!0}:I||{};var B=S(v(I.entropy?[T,$(e)]:T??C(),3),z),R=new b(z),_=function(){for(var A=R.g(r),W=u,K=0;A<h;)A=(A+K)*a,W*=a,K=R.g(1);for(;A>=f;)A/=2,W/=2,K>>>=1;return(A+K)/W};return _.int32=function(){return R.g(4)|0},_.quick=function(){return R.g(4)/4294967296},_.double=_,S($(R.S),e),(I.pass||D||function(A,W,K,tt){return tt&&(tt.S&&w(tt,R),A.state=function(){return w(R,{})}),K?(s[l]=A,W):A})(_,B,"global"in I?I.global:this==s,I.state)}function b(T){var I,D=T.length,z=this,B=0,R=z.i=z.j=0,_=z.S=[];for(D||(T=[D++]);B<a;)_[B]=B++;for(B=0;B<a;B++)_[B]=_[R=p&R+T[B%D]+(I=_[B])],_[R]=I;(z.g=function(A){for(var W,K=0,tt=z.i,Q=z.j,P=z.S;A--;)W=P[tt=p&tt+1],K=K*a+P[p&(P[tt]=P[Q=p&Q+W])+(P[Q]=W)];return z.i=tt,z.j=Q,K})(a)}function w(T,I){return I.i=T.i,I.j=T.j,I.S=T.S.slice(),I}function v(T,I){var D=[],z=typeof T,B;if(I&&z=="object")for(B in T)try{D.push(v(T[B],I-1))}catch{}return D.length?D:z=="string"?T:T+"\0"}function S(T,I){for(var D=T+"",z,B=0;B<D.length;)I[p&B]=p&(z^=I[p&B]*19)+D.charCodeAt(B++);return $(I)}function C(){try{var T;return m&&(T=m.randomBytes)?T=T(a):(T=new Uint8Array(a),(t.crypto||t.msCrypto).getRandomValues(T)),$(T)}catch{var I=t.navigator,D=I&&I.plugins;return[+new Date,t,D,t.screen,$(e)]}}function $(T){return String.fromCharCode.apply(0,T)}if(S(s.random(),e),n.exports){n.exports=y;try{m=nB}catch{}}else s["seed"+l]=y})(typeof self<"u"?self:sB,[],Math)}(Lf)),Lf.exports}var Tb,iT;function rB(){if(iT)return Tb;iT=1;var n=WM(),t=HM(),e=jM(),s=KM(),a=ZM(),r=JM(),i=aB();return i.alea=n,i.xor128=t,i.xorwow=e,i.xorshift7=s,i.xor4096=a,i.tychei=r,Tb=i,Tb}var Am=rB();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class f1{constructor(t,e,s,a,r){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=r||Math.random();this.random=Am.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const a=this.nextVal;return this.nextVal=NaN,a}let t,e,s=!1;for(;!s;){let a,r,i;do a=2*this.random()-1,r=2*this.random()-1,i=a*a+r*r;while(i>=1||i===0);const l=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*a*l,e=this.mean+this.stdDev*r*l,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class iB{constructor(t,e,s,a){this.alpha=t,this.beta=1/e,this.dtype=s;const r=a||Math.random();this.randu=Am.alea(r.toString()),this.randn=new f1(0,1,s,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,s,a,r,i;for(;;){do a=this.randn.nextValue(),i=1+this.c*a;while(i<=0);if(i*=i*i,t=a*a,e=1-.331*t*t,s=.5*t+this.d*(1-i+Math.log(i)),r=this.randu(),r<e||Math.log(r)<s)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}}class oB{constructor(t=0,e=1,s,a){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=s,a==null&&(a=Math.random()),typeof a=="number"&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Am.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(n,t,e=1,s="float32",a){if(Ds(n),e==null&&(e=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const r=new iB(t,e,s,a),i=Ht(n,s);for(let l=0;l<i.values.length;l++)i.values[l]=r.nextValue();return i.toTensor()}const uB=U({randomGamma_:lB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cB(n,t=0,e=1,s,a){if(Ds(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const r=new f1(t,e,s,!1,a),i=Ht(n,s);for(let l=0;l<i.values.length;l++)i.values[l]=r.nextValue();return i.toTensor()}const p1=U({randomNormal_:cB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hB(n,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return p1(n,0,1,t,e)}const dB=U({randomStandardNormal_:hB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fB(n,t=0,e=1,s="float32",a){Ds(n);const r=Ht(n,s),i=new oB(t,e,null,a);for(let l=0;l<r.values.length;l++)r.values[l]=i.nextValue();return r.toTensor()}const Io=U({randomUniform_:fB});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(n,t,e,s){return Io(n,t,e,"int32",s)}const mB=U({randomUniformInt_:pB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ml(n,t,e=1,s="float32"){if(e===0)throw new Error("Cannot have a step of zero");const a={start:n,stop:t,step:e,dtype:s};return G.runKernel(Ix,{},a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gB(n){const e={input:F(n,"input","real")};return G.runKernel(Ex,e)}const Cc=U({real_:gB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(n){const e={x:F(n,"x","reciprocal")};return G.runKernel(fh,e)}const ik=U({reciprocal_:yB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bB(n){const e={x:F(n,"x","relu")};return G.runKernel(ph,e)}const Ka=U({relu_:bB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xB(n){const e={x:F(n,"x","relu6")};return G.runKernel(mh,e)}const m1=U({relu6_:xB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(n,t){const s={x:F(n,"x","reverse")},a={dims:t};return G.runKernel(im,s,a)}const ia=U({reverse_:vB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wB(n){const t=F(n,"x","reverse");return O(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),ia(t,0)}const SB=U({reverse1d_:wB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n,t){const e=F(n,"x","reverse");return O(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),ia(e,t)}const CB=U({reverse2d_:NB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TB(n,t){const e=F(n,"x","reverse");return O(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),ia(e,t)}const $B=U({reverse3d_:TB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(n,t){const e=F(n,"x","reverse");return O(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),ia(e,t)}const IB=U({reverse4d_:kB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EB(n){const e={x:F(n,"x","round")};return G.runKernel(gh,e)}const g1=U({round_:EB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(n){const e={x:F(n,"x","rsqrt","float32")};return G.runKernel(yh,e)}const y1=U({rsqrt_:AB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(n){const e={x:F(n,"x","selu")};return G.runKernel(bh,e)}const b1=U({selu_:RB});function DB(n,t,e,s,a,r=[1,1],i="NHWC"){const l=F(n,"x","separableConv2d"),u=F(t,"depthwiseFilter","separableConv2d"),h=F(e,"pointwiseFilter","separableConv2d");let f=l,p=!1;if(l.rank===3&&(p=!0,f=q(l,[1,l.shape[0],l.shape[1],l.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");O(f.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${f.rank}.`),O(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),O(h.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),O(h.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${h.shape[0]}.`),O(h.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${h.shape[1]}.`);const m=u.shape[2],y=u.shape[3];O(h.shape[2]===m*y,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*y}, but got ${h.shape[2]}.`);const b=_h(f,u,s,a,i,r),v=hi(b,h,1,"valid",i);return p?q(v,[v.shape[1],v.shape[2],v.shape[3]]):v}const x1=U({separableConv2d_:DB});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function OB(n,t){const e=F(n,"x","setdiff1d"),s=F(t,"y","setdiff1d");O(e.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${s.dtype}).`),O(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),O(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const a=await e.data(),r=await s.data(),i=new Set(r);let l=0;for(let f=0;f<a.length;f++)i.has(a[f])||l++;const u=new rn([l],e.dtype),h=new rn([l],"int32");for(let f=0,p=0;f<a.length;f++)i.has(a[f])||(u.values[p]=a[f],h.values[p]=f,p++);return[u.toTensor(),h.toTensor()]}const _B=OB;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FB(n){const e={x:F(n,"x","sign")};return G.runKernel(wh,e)}const ok=U({sign_:FB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n){const e={x:F(n,"x","sin","float32")};return G.runKernel(xh,e)}const v1=U({sin_:LB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zB(n){const e={x:F(n,"x","sinh")};return G.runKernel(vh,e)}const w1=U({sinh_:zB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(n,t,e){const s=F(n,"x","slice1d");return O(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),se(s,[t],[e])}const Rm=U({slice1d_:MB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(n,t,e){const s=F(n,"x","slice2d");return O(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),se(s,t,e)}const S1=U({slice2d_:BB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(n,t,e){const s=F(n,"x","slice3d");return O(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),se(s,t,e)}const Dm=U({slice3d_:VB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PB(n,t,e){const s=F(n,"x","slice4d");return O(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),se(s,t,e)}const Tc=U({slice4d_:PB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(n,t=-1){const e=F(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const s={logits:e},a={dim:t};return G.runKernel(dm,s,a)}const Om=U({softmax_:UB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(n){O(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const t={input:n};return G.runKernel(cx,t)}const _m=U({fft_:WB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(n){O(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const t={input:n};return G.runKernel(px,t)}const $c=U({ifft_:GB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HB(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const a=q(n,[e,t]);s=$c(a)}else{const a=[e,2*(t-1)],r=q(Cc(n),[e,t]),i=q(wm(n),[e,t]),l=ia(se(r,[0,1],[e,t-2]),1),u=H(ia(se(i,[0,1],[e,t-2]),1),Lt(-1)),h=He([r,l],1),f=He([i,u],1),p=q(li(h,f),[a[0],a[1]]);s=$c(p)}if(s=Cc(s),n.rank===3&&n.shape[0]!==0){const a=s,r=n.shape[0];s=q(s,[r,s.shape[0]/r,s.shape[1]]),a.dispose()}return s}const N1=U({irfft_:HB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qB(n,t,e=0){const a={x:F(n,"x","split")},r={numOrSizeSplits:t,axis:e};return G.runKernel(hm,a,r)}const hs=U({split_:qB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(n,t){O(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let a;if(t!=null&&t<e){const b=n.shape.map(v=>0),w=n.shape.map(v=>v);w[n.shape.length-1]=t,a=se(n,b,w),e=t}else if(t!=null&&t>e){const b=n.shape.map(w=>w);b[n.shape.length-1]=t-e,a=He([n,nn(b)],n.shape.length-1),e=t}else a=n;const r=re(a),i=q(li(a,r),[s,e]),l=_m(i),u=Math.floor(e/2)+1,h=Cc(l),f=wm(l),p=hs(h,[u,e-u],h.shape.length-1),m=hs(f,[u,e-u],f.shape.length-1),y=a.shape.slice();return y[a.shape.length-1]=u,q(li(p[0],m[0]),y)}const Fm=U({rfft_:jB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(n,t){let e=F(n,"a","squaredDifference"),s=F(t,"b","squaredDifference");[e,s]=Me(e,s),Pt(e.shape,s.shape);const a={a:e,b:s},r={};return G.runKernel(Th,a,r)}const C1=U({squaredDifference_:XB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(n,t){const e=F(n,"x","squeeze","string_or_numeric");return q(e,yi(e.shape,t).newShape)}const Eo=U({squeeze_:KB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(n,t=0){const e=Hf(n,"tensors","stack","string_or_numeric");O(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&O(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const s=e,a={axis:t};return G.runKernel(Jp,s,a)}const ms=U({stack_:YB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(n,t=0){const s={x:F(n,"x","step")},a={alpha:t};return G.runKernel(Ah,s,a)}const Zl=U({step_:ZB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QB(n,t,e,s,a=0,r=0,i=0,l=0,u=0){const f={x:F(n,"x","stridedSlice","string_or_numeric")},p={begin:t,end:e,strides:s,beginMask:a,endMask:r,ellipsisMask:i,newAxisMask:l,shrinkAxisMask:u};return G.runKernel(Px,f,p)}const lk=U({stridedSlice_:QB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(n){const e={x:F(n,"x","tan","float32")};return G.runKernel(kh,e)}const uk=U({tan_:JB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gn(n,t){Hl(n);const e=xi(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return vi(n,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bc(n,t,e){if(Hl(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=xi(n,e);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return vi(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ck(n,t,e){if(Hl(n),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=xi(n,e);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return vi(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t4(n,t,e){if(Hl(n),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=xi(n,e);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return vi(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(n,t,e){if(Hl(n),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=xi(n,e);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return vi(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(n,t,e){if(Hl(n),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=xi(n,e);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,vi(n,t,s,e)}function hk(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${a}.`;if(e.rank<a)throw new Error(r+` update.rank < ${a}. `);if(n.length<s+(e.rank-a))throw new Error(r+` Output shape length < ${s+(e.rank-a)}`);if(e.rank!==a+n.length-s)throw new Error(r+` update.rank != ${a+n.length-s}`);for(let i=0;i<a;++i)if(e.shape[i]!==t.shape[i])throw new Error(r+` updates.shape[${i}] (${e.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<e.rank-a;++i)if(e.shape[i+a]!==n[i+s])throw new Error(r+` updates.shape[${i+a}] (${e.shape[i+a]}) != shape[${i+a}] (${n[i+a]})`)}function T1(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}hk(e,t,n)}function Ao(n,t,e){const s=t.shape.length,a=s>1?t.shape[s-1]:1,r=e.length;let i=1;for(let p=a;p<r;++p)i*=e[p];const l=a<1?1:a,u=ht(t.shape)/l,h=[...Ft(e.slice(0,a)),1],f=ht(e);return{sliceRank:a,numUpdates:u,sliceSize:i,strides:h,outputSize:f}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(n,t,e){const s=F(n,"tensor","tensorScatterupdate"),a=F(t,"indices","tensorScatterupdate","int32"),r=F(e,"updates","tensorScatterupdate");if(T1(r,a,s.shape),s.dtype!==r.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${r.dtype}.`);const i={tensor:s,indices:a,updates:r},l={};return G.runKernel(Ox,i,l)}const a4=U({tensorScatterUpdate_:s4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4(n,t=1,e=!0){const s=F(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const a=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const r={x:s},i={k:t,sorted:e},[l,u]=G.runKernel(Hx,r,i);return{values:l,indices:u}}const dk=U({topk_:r4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i4(n,t=0,e=1,s,a){if(Ds(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new f1(t,e,s,!0,a),i=Ht(n,s);for(let l=0;l<i.values.length;l++)i.values[l]=r.nextValue();return i.toTensor()}const $1=U({truncatedNormal_:i4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(n,t=0){const e=F(n,"x","unique","string_or_numeric");O(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},a={axis:t},[r,i]=G.runKernel(jx,s,a);return{values:r,indices:i}}const fk=U({unique_:o4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l4(n,t,e){const s=F(n,"x","unsortedSegmentSum"),a=F(t,"segmentIds","unsortedSegmentSum","int32");O(Ol(e),()=>"numSegments must be of dtype int");const r={x:s,segmentIds:a},i={numSegments:e};return G.runKernel(mm,r,i)}const k1=U({unsortedSegmentSum_:l4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(n,t=0){const e=F(n,"x","unstack","string_or_numeric");O(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const s={value:e},a={axis:t};return G.runKernel(pm,s,a)}const oa=U({unstack_:u4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(n,t){return h1(n,t,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pk(n,t=!0,e,s){return G.makeVariable(n,t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I1(n,t){const e=[];for(let r=0;r<t.length;r++)t[r]&&e.push(r);const s=Ht(n,"int32"),a=Ht([e.length,n.length],"int32");for(let r=0;r<e.length;r++){const i=s.indexToLoc(e[r]),l=r*n.length;a.values.set(i,l)}return a.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function h4(n){const t=F(n,"condition","whereAsync","bool"),e=await t.data(),s=I1(t.shape,e);return n!==t&&t.dispose(),s}const mk=h4;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function d4(n,t,e){const s=F(n,"tensor","boolMask"),a=F(t,"mask","boolMask","bool"),r=e??0,i=a.rank,l=s.shape;O(i>0,()=>"mask cannot be scalar"),bs(l.slice(r,r+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let w=r;w<r+i;w++)u*=l[w];const h=l.slice(0,r).concat([u],l.slice(r+i)),f=q(s,h),p=q(a,[-1]),m=await mk(p),y=Eo(m,[1]),b=Mh(f,y,r);return n!==s&&s.dispose(),t!==a&&a.dispose(),y.dispose(),f.dispose(),p.dispose(),m.dispose(),b}const f4=d4;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(n,t,e){const s=F(n,"x","transpose");if(t==null&&(t=s.shape.map((i,l)=>l).reverse()),O(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(i=>{O(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const a={x:s},r={perm:t};return s.dtype==="complex64"?nt(()=>{let i=Cc(s),l=wm(s);return i=G.runKernel(kl,{x:i},r),l=G.runKernel(kl,{x:l},r),e&&(l=Ie(l)),li(i,l)}):G.runKernel(kl,a,r)}const ae=U({transpose_:p4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(n,t,e,s,a=!0){const r=F(n,"v","movingAverage"),i=F(t,"x","movingAverage"),l=F(e,"decay","movingAverage");e3(r,i),O(Jt(r.shape,i.shape),()=>"Shape mismatch in v and x");const u=Lt(1),h=kt(u,l);let f=H(kt(i,r),h);if(a){O(s!=null,()=>"When using zeroDebias: true, step is required.");const p=F(s,"step","movingAverage");f=Dt(f,kt(u,wr(l,p)))}return yt(r,f)}const g4=U({movingAverage_:m4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y4(n,t,e){Ds(e);const s=F(n,"indices","scatterND","int32"),a=F(t,"updates","scatterND");T1(a,s,e);const r={indices:s,updates:a},i={shape:e};return G.runKernel(Dx,r,i)}const b4=U({scatterND_:y4});function x4(n,t,e,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const a=n.rank>0?n.shape[0]:1,r=n.rank>1?n.shape[1]:1;if(e.length!==r)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${r}.`);const i=t.size;if(!(t.rank===0||t.rank===1&&i===a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v4(n,t,e,s=0){Ds(e);const a=F(n,"sparseIndices","sparseToDense","int32"),r=F(t,"sparseValues","sparseToDense","string_or_numeric"),i=F(s,"defaultValue","sparseToDense",r.dtype);x4(a,r,e,i);const l={sparseIndices:a,sparseValues:r,defaultValue:i},u={outputShape:e};return G.runKernel(Bx,l,u)}const w4=U({sparseToDense_:v4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(n,t){const e=F(t,"indices","gatherND","int32"),a={params:F(n,"x","gatherND","string_or_numeric"),indices:e};return G.runKernel(fx,a)}const N4=U({gatherND_:S4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(n,t){if(t==null)return n.shape.slice();if(Jt(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)t[s]==null&&n.shape[s]!=null?e.push(n.shape[s]):e.push(t[s]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(n,t,e,s){const a=F(n,"x","dropout");if(O(a.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),O(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof De?a.clone():a;const r=C4(a,e),i=1-t,l=Dt(zh(yt(Io(r,0,1,"float32",s),i)),i);return H(a,l)}const gk=U({dropout_:T4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yk(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function E1(n,t,e){const s=1-n%2,a=new Float32Array(n);for(let r=0;r<n;++r){const i=2*Math.PI*r/(n+s-1);a[r]=t-e*Math.cos(i)}return Gn(a,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function $4(n,t,e=1){const s=F(n,"predictions","inTopK"),a=F(t,"targets","inTopK");O(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),O(s.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${a.rank}`),bs(s.shape.slice(0,s.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const r=s.shape[s.shape.length-1];O(e>0&&e<=r,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${r}), but got ${e}`);const i=await s.data(),l=await a.data(),[u,h]=[i.length/r,r],f=Cn("bool",u);for(let p=0;p<u;p++){const m=p*h,y=i.subarray(m,m+h),b=[];for(let w=0;w<y.length;w++)b.push({value:y[w],index:w});b.sort((w,v)=>v.value-w.value),f[p]=0;for(let w=0;w<e;w++)if(b[w].index===l[p]){f[p]=1;break}}return n!==s&&s.dispose(),t!==a&&a.dispose(),Na(f,a.shape,"bool")}const k4=$4;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(n,t,e,s,a,r="NHWC",i){let l=n;n.rank===3&&(l=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;u.rank===3&&(u=q(t,[1,t.shape[0],t.shape[1],t.shape[2]])),O(l.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`),O(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),O(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const h=r==="NHWC"?l.shape[3]:l.shape[1],f=r==="NHWC"?u.shape[3]:u.shape[1];O(h===e[2],()=>`Error in conv2dDerFilter: depth of input ${h}) must match input depth in filter (${e[2]}.`),O(f===e[3],()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${e[3]}).`),qn("conv2dDerFilter",a,i);const p={x:l,dy:u},m={strides:s,pad:a,dataFormat:r,dimRoundingMode:i,filterShape:e};return G.runKernel(Q0,p,m)}const A1=U({conv2DBackpropFilter_:I4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lm(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return H(n,Zl(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function zm(n,t){let e=t;const s=un(n.shape,t.shape);return s.length>0&&(e=Et(e,s)),q(e,n.shape)}function Mm(n,t,e,s){if(t==="linear")return n;if(t==="relu")return Ka(n);if(t==="elu")return Fh(n);if(t==="relu6")return m1(n);if(t==="prelu")return Em(n,e);if(t==="leakyrelu")return Sm(n,s);if(t==="sigmoid")return Ua(n);throw new Error(`Unknown fused activation ${t}.`)}const Bm=(n,t)=>!(n>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4({x:n,filter:t,strides:e,pad:s,dataFormat:a="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:l,activation:u="linear",preluActivationWeights:h,leakyreluAlpha:f}){if(u=u||"linear",Bm(G.state.gradientDepth,u)===!1){O(a==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let D=hi(n,t,e,s,a,r,i);return l!=null&&(D=yt(D,l)),Mm(D,u,h,f)}const p=F(n,"x","conv2d","float32"),m=F(t,"filter","conv2d","float32");let y=p,b=!1;p.rank===3&&(b=!0,y=q(p,[1,p.shape[0],p.shape[1],p.shape[2]])),O(y.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${y.rank}.`),O(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),qn("fused conv2d",s,i);const w=a==="NHWC"?y.shape[3]:y.shape[1];O(m.shape[2]===w,()=>`Error in conv2d: depth of input (${w}) must match input depth for filter ${m.shape[2]}.`),O($n(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const v=gn(y.shape,m.shape,e,r,s,i);let S;l!=null&&(S=F(l,"bias","fused conv2d"),[S]=Me(S,p),a==="NHWC"?Pt(v.outShape,S.shape):(O(S.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${S.shape.length}.`),O(S.shape.length===0||S.shape[0]===v.outChannels||S.shape[0]===1,()=>`Error in fused conv2d: bias shape (${S.shape}) is not compatible with the number of output channels (${v.outChannels})`)));let C;if(h!=null){const D=h.shape;if(O(D.length<=1||D.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${D.length}.`),D.length===1)O(D[0]===1||D[0]===v.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${D}) is not compatible with the number of output channels (${v.outChannels}).`);else if(D.length===3)try{Pt(D,v.outShape)}catch{const B=`Error in fused conv2d: PReLU activation weights (${D}) is not compatible with the output shape of the conv2d (${v.outShape}).`;throw Error(B)}C=F(h,"prelu weights","fused conv2d")}const $=(D,z)=>{O(a==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);const[B,R,_,A]=z,W=Lm(D,_,u);O(ci(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const K=n1(R.shape,W,B,e,s),tt=A1(R,W,B.shape,e,s),Q=[K,tt];if(A!=null){const P=zm(A,W);Q.push(P)}return Q},T={x:y,filter:m,bias:S,preluActivationWeights:C},I={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i,activation:u,leakyreluAlpha:f};return l==null?Sr((z,B,R)=>{let _=G.runKernel(Pf,T,I);return R([B,z,_]),b&&(_=q(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:$}})(y,m):Sr((z,B,R,_)=>{let A=G.runKernel(Pf,T,I);return _([B,z,A,R]),b&&(A=q(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:$}})(y,m,S)}const bk=U({fusedConv2d_:E4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(n,t,e,s,a,r=[1,1],i){let l=n;n.rank===3&&(l=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;u.rank===3&&(u=q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:l,dy:u},f={strides:s,pad:a,dimRoundingMode:i,dilations:r,filterShape:e};return G.runKernel(rx,h,f)}const xk=U({depthwiseConv2dNativeBackpropFilter_:A4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R4(n,t,e,s,a,r=[1,1],i){let l=t,u=!1;t.rank===3&&(u=!0,l=q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:l,filter:e},f={strides:s,pad:a,dimRoundingMode:i,dilations:r,inputShape:n},p=G.runKernel(ix,h,f);return u?q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const vk=U({depthwiseConv2dNativeBackpropInput_:R4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D4({x:n,filter:t,strides:e,pad:s,dataFormat:a="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:l,activation:u="linear",preluActivationWeights:h,leakyreluAlpha:f}){if(Bm(G.state.gradientDepth,u)===!1){let I=_h(n,t,e,s,a,r,i);return l!=null&&(I=yt(I,l)),Mm(I,u,h,f)}const p=F(n,"x","depthwiseConv2d","float32"),m=F(t,"filter","depthwiseConv2d","float32");let y=p,b=!1;p.rank===3&&(b=!0,y=q(p,[1,p.shape[0],p.shape[1],p.shape[2]])),O(y.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${y.rank}.`),O(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),O(y.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${y.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),r==null&&(r=[1,1]),O($n(e,r),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),qn("fused depthwiseConv2d",s,i);const w=gn(y.shape,m.shape,e,r,s,i,!0);let v;l!=null&&(v=F(l,"bias","fused conv2d"),[v]=Me(v,p),Pt(w.outShape,v.shape));let S;h!=null&&(S=F(h,"prelu weights","fused depthwiseConv2d"));const C=(I,D)=>{O(ci(r),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${r}'`);const[z,B,R,_]=D,A=Lm(I,R,u),W=vk(B.shape,A,z,e,s,r,i),K=xk(B,A,z.shape,e,s,r,i);if(_!=null){const tt=zm(v,A);return[W,K,tt]}return[W,K]},$={x:y,filter:m,bias:v,preluActivationWeights:S},T={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i,activation:u,leakyreluAlpha:f};return l==null?Sr((D,z,B)=>{let R=G.runKernel(Uf,$,T);return B([z,D,R]),b&&(R=q(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:C}})(y,m):Sr((D,z,B,R)=>{let _=G.runKernel(Uf,$,T);return R([z,D,_,B]),b&&(_=q(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:C}})(y,m,v)}const O4=U({fusedDepthwiseConv2d_:D4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _4({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:a,activation:r="linear",preluActivationWeights:i,leakyreluAlpha:l=.2}){if(Bm(G.state.gradientDepth,r)===!1){let A=Yt(n,t,e,s);return a!=null&&(A=yt(A,a)),Mm(A,r,i,l)}let u=F(n,"a","fused matMul"),h=F(t,"b","fused matMul");[u,h]=Me(u,h);const f=e?u.shape[u.rank-2]:u.shape[u.rank-1],p=s?h.shape[h.rank-1]:h.shape[h.rank-2],m=e?u.shape[u.rank-1]:u.shape[u.rank-2],y=s?h.shape[h.rank-2]:h.shape[h.rank-1],b=u.shape.slice(0,-2),w=h.shape.slice(0,-2),v=ht(b),S=ht(w);O(f===p,()=>`Error in fused matMul: inner shapes (${f}) and (${p}) of Tensors with shapes ${u.shape} and ${h.shape} and transposeA=${e} and transposeB=${s} must match.`);const $=Pt(u.shape.slice(0,-2),h.shape.slice(0,-2)).concat([m,y]),T=e?q(u,[v,f,m]):q(u,[v,m,f]),I=s?q(h,[S,y,p]):q(h,[S,p,y]);let D;a!=null&&(D=F(a,"bias","fused matMul"),[D]=Me(D,u),Pt($,D.shape));let z;i!=null&&(z=F(i,"prelu weights","fused matMul"));const B=(A,W)=>{const[K,tt,Q,P]=W,et=Lm(q(A,Q.shape),Q,r);let Y,at;if(!e&&!s?(Y=Yt(et,tt,!1,!0),at=Yt(K,et,!0,!1)):!e&&s?(Y=Yt(et,tt,!1,!1),at=Yt(et,K,!0,!1)):e&&!s?(Y=Yt(tt,et,!1,!0),at=Yt(K,et,!1,!1)):(Y=Yt(tt,et,!0,!0),at=Yt(et,K,!0,!0)),a!=null){const M=zm(P,et);return[Y,at,M]}else return[Y,at]},R={a:T,b:I,bias:D,preluActivationWeights:z},_={transposeA:e,transposeB:s,activation:r,leakyreluAlpha:l};return a==null?Sr((W,K,tt)=>{const Q=G.runKernel(Vf,R,_);return tt([W,K,Q]),{value:q(Q,$),gradFunc:B}})(T,I):Sr((W,K,tt,Q)=>{const P=G.runKernel(Vf,R,_);return Q([W,K,P,tt]),{value:q(P,$),gradFunc:B}})(T,I,D)}const l0=U({fusedMatMul_:_4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F4=Object.freeze(Object.defineProperty({__proto__:null,conv2d:bk,depthwiseConv2d:O4,matMul:l0},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L4(n){return E1(n,.54,.46)}const z4=U({hammingWindow_:L4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M4(n){return E1(n,.5,.5)}const wk=U({hannWindow_:M4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B4(n,t,e,s=!1,a=0){let r=0;const i=[];for(;r+t<=n.size;)i.push(se(n,r,t)),r+=e;if(s)for(;r<n.size;){const l=r+t-n.size,u=He([se(n,r,t-l),Kl([l],a)]);i.push(u),r+=e}return i.length===0?bc([],[0,t]):q(He(i),[i.length,t])}const Sk=U({frame_:B4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(n,t,e,s,a=wk){s==null&&(s=yk(t));const r=Sk(n,t,e),i=H(r,a(t));return Fm(i,s)}const P4=U({stft_:V4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4(n,t,e,s,a="bilinear",r=0){const i=F(n,"image","cropAndResize"),l=F(t,"boxes","cropAndResize","float32"),u=F(e,"boxInd","cropAndResize","int32"),h=l.shape[0];O(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),O(l.rank===2&&l.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${h},4] but had shape ${l.shape}.`),O(u.rank===1&&u.shape[0]===h,()=>`Error in cropAndResize: boxInd must be have size [${h}] but had shape ${l.shape}.`),O(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),O(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),O(a==="bilinear"||a==="nearest",()=>`method must be bilinear or nearest, but was ${a}`);const f={image:i,boxes:l,boxInd:u},p={method:a,extrapolationValue:r,cropSize:s};return G.runKernel(nx,f,p)}const W4=U({cropAndResize_:U4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(n){const t=F(n,"image","flipLeftRight","float32");O(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return G.runKernel(dx,e,{})}const H4=U({flipLeftRight_:G4});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q4(n){const t=F(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];O(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),O(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const a=new Array(t.rank);return a.fill(1,0,e),a[e]=3,Js(t,a)}const j4=U({grayscaleToRGB_:q4});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X4(n){const t=F(n,"image","RGBToGrayscale"),e=t.rank-1,s=t.shape[e];O(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),O(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const a=t.dtype,r=Nt(t,"float32"),i=Gn([.2989,.587,.114]);let l;switch(t.rank){case 2:l=Tl("ij,j->i",r,i);break;case 3:l=Tl("ijk,k->ij",r,i);break;case 4:l=Tl("ijkl,l->ijk",r,i);break;case 5:l=Tl("ijklm,m->ijkl",r,i);break;case 6:l=Tl("ijklmn,n->ijklm",r,i);break;default:throw new Error("Not a valid tensor rank.")}return l=Un(l,-1),Nt(l,a)}const K4=U({rgbToGrayscale_:X4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(n,t,e=0,s=.5){const a=F(n,"image","rotateWithOffset","float32");O(a.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const r={image:a},i={radians:t,fillValue:e,center:s};return G.runKernel(Xx,r,i)}const Z4=U({rotateWithOffset_:Y4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ql(n,t,e,s,a,r){s==null&&(s=.5),a==null&&(a=Number.NEGATIVE_INFINITY),r==null&&(r=0);const i=n.shape[0];return e=Math.min(e,i),O(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),O(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),O(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),O(t.rank===1,()=>"scores must be a 1D tensor"),O(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),O(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:a,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q4(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY){const r=F(n,"boxes","nonMaxSuppression","float32"),i=F(t,"scores","nonMaxSuppression","float32"),l=Ql(r,i,e,s,a);e=l.maxOutputSize,s=l.iouThreshold,a=l.scoreThreshold;const u={maxOutputSize:e,iouThreshold:s,scoreThreshold:a};return G.runKernel(Sx,{boxes:r,scores:i},u)}const J4=U({nonMaxSuppression_:Q4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tV(n,t,e){const s=eV(n,t,e),a=s<0?-(s+1):s;n.splice(a,0,t)}function eV(n,t,e){return sV(n,t,e||nV)}function nV(n,t){return n>t?1:n<t?-1:0}function sV(n,t,e){let s=0,a=n.length,r=0,i=!1;for(;s<a;){r=s+(a-s>>>1);const l=e(t,n[r]);l>0?s=r+1:(a=r,i=!l)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R1(n,t,e,s,a){return _1(n,t,e,s,a,0)}function D1(n,t,e,s,a,r){return _1(n,t,e,s,a,0,!1,r,!0)}function O1(n,t,e,s,a,r){return _1(n,t,e,s,a,r,!0)}function _1(n,t,e,s,a,r,i=!1,l=!1,u=!1){const h=[];for(let v=0;v<t.length;v++)t[v]>a&&h.push({score:t[v],boxIndex:v,suppressBeginIndex:0});h.sort(oT);const f=r>0?-.5/r:0,p=[],m=[];for(;p.length<e&&h.length>0;){const v=h.pop(),{score:S,boxIndex:C,suppressBeginIndex:$}=v;if(S<a)break;let T=!1;for(let I=p.length-1;I>=$;--I){const D=aV(n,C,p[I]);if(D>=s){T=!0;break}if(v.score=v.score*rV(s,f,D),v.score<=a)break}v.suppressBeginIndex=p.length,T||(v.score===S?(p.push(C),m.push(v.score)):v.score>a&&tV(h,v,oT))}const y=p.length,b=e-y;l&&b>0&&(p.push(...new Array(b).fill(0)),m.push(...new Array(b).fill(0)));const w={selectedIndices:p};return i&&(w.selectedScores=m),u&&(w.validOutputs=y),w}function aV(n,t,e){const s=n.subarray(t*4,t*4+4),a=n.subarray(e*4,e*4+4),r=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),l=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),h=Math.min(a[0],a[2]),f=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),m=Math.max(a[1],a[3]),y=(l-r)*(u-i),b=(p-h)*(m-f);if(y<=0||b<=0)return 0;const w=Math.max(r,h),v=Math.max(i,f),S=Math.min(l,p),C=Math.min(u,m),$=Math.max(S-w,0)*Math.max(C-v,0);return $/(y+b-$)}function rV(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function oT(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function iV(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY){const r=F(n,"boxes","nonMaxSuppressionAsync"),i=F(t,"scores","nonMaxSuppressionAsync"),l=Ql(r,i,e,s,a);e=l.maxOutputSize,s=l.iouThreshold,a=l.scoreThreshold;const u=await Promise.all([r.data(),i.data()]),h=u[0],f=u[1],{selectedIndices:p}=R1(h,f,e,s,a);return r!==n&&r.dispose(),i!==t&&i.dispose(),Gn(p,"int32")}const oV=iV;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lV(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=0){const i=F(n,"boxes","nonMaxSuppression"),l=F(t,"scores","nonMaxSuppression"),u=Ql(i,l,e,s,a,r);e=u.maxOutputSize,s=u.iouThreshold,a=u.scoreThreshold,r=u.softNmsSigma;const h={boxes:i,scores:l},f={maxOutputSize:e,iouThreshold:s,scoreThreshold:a,softNmsSigma:r},p=G.runKernel(Cx,h,f);return{selectedIndices:p[0],selectedScores:p[1]}}const uV=U({nonMaxSuppressionWithScore_:lV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function cV(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=0){const i=F(n,"boxes","nonMaxSuppressionAsync"),l=F(t,"scores","nonMaxSuppressionAsync"),u=Ql(i,l,e,s,a,r);e=u.maxOutputSize,s=u.iouThreshold,a=u.scoreThreshold,r=u.softNmsSigma;const h=await Promise.all([i.data(),l.data()]),f=h[0],p=h[1],{selectedIndices:m,selectedScores:y}=O1(f,p,e,s,a,r);return i!==n&&i.dispose(),l!==t&&l.dispose(),{selectedIndices:Gn(m,"int32"),selectedScores:Gn(y)}}const hV=cV;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=!1){const i=F(n,"boxes","nonMaxSuppression"),l=F(t,"scores","nonMaxSuppression"),u=Ql(i,l,e,s,a,null),h=u.maxOutputSize,f=u.iouThreshold,p=u.scoreThreshold,m={boxes:i,scores:l},y={maxOutputSize:h,iouThreshold:f,scoreThreshold:p,padToMaxOutputSize:r},b=G.runKernel(Nx,m,y);return{selectedIndices:b[0],validOutputs:b[1]}}const fV=U({nonMaxSuppressionPadded_:dV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function pV(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=!1){const i=F(n,"boxes","nonMaxSuppressionAsync"),l=F(t,"scores","nonMaxSuppressionAsync"),u=Ql(i,l,e,s,a,null),h=u.maxOutputSize,f=u.iouThreshold,p=u.scoreThreshold,[m,y]=await Promise.all([i.data(),l.data()]),{selectedIndices:b,validOutputs:w}=D1(m,y,h,f,p,r);return i!==n&&i.dispose(),l!==t&&l.dispose(),{selectedIndices:Gn(b,"int32"),validOutputs:Lt(w,"int32")}}const mV=pV;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(n,t,e=!1,s=!1){const a=F(n,"images","resizeBilinear");O(a.rank===3||a.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),O(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),O(s===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=a,i=!1;a.rank===3&&(i=!0,r=q(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={images:r},u={alignCorners:e,halfPixelCenters:s,size:t},h=G.runKernel(rm,l,u);return i?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Nk=U({resizeBilinear_:gV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(n,t,e=!1,s=!1){const a=F(n,"images","resizeNearestNeighbor");O(a.rank===3||a.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),O(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),O(a.dtype==="float32"||a.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),O(s===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=a,i=!1;a.rank===3&&(i=!0,r=q(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={images:r},u={alignCorners:e,halfPixelCenters:s,size:t},h=G.runKernel(am,l,u);return i?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Ck=U({resizeNearestNeighbor_:yV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(n,t="binary",e=!1,s=.5){const a=F(n,"image","threshold"),r=.2989,i=.587,l=.114,u=a.shape[0]*a.shape[1];let h=H(Gn([s]),255),f,p,m,y;if(O(a.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),O(a.shape[2]===3||a.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),O(a.dtype==="int32"||a.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),O(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),a.shape[2]===3){[f,p,m]=hs(a,[1,1,1],-1);const v=H(f,r),S=H(p,i),C=H(m,l);y=yt(yt(v,S),C)}else y=n;if(t==="otsu"){const v=D$(Nt(g1(y),"int32"),Na([]),256);h=xV(v,u)}const b=e?ko(y,h):xs(y,h);return Nt(H(b,255),"int32")}function xV(n,t){let e=Gn([-1]),s=Gn([0]),a=Gn([0]),r,i,l,u,h,f;for(let p=0;p<n.size-1;p++){r=se(n,0,p+1),i=se(n,p+1),h=Dt(Et(r),t),f=Dt(Et(i),t);const m=Et(H(r,Ml(0,r.size)));l=Dt(m,Et(r));const y=Kl(i.shape,r.size),b=yt(Ml(0,i.size),y),w=H(i,b);u=Dt(Et(w),Et(i));const v=kt(l,u),S=kt(l,u),C=H(h,f);a=H(H(C,v),S);const $=xs(a,s);s=On($,a,s),e=On($,Gn([p]),e)}return e}const vV=U({threshold_:bV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(n,t,e="nearest",s="constant",a=0,r){const i=F(n,"image","transform","float32"),l=F(t,"transforms","transform","float32");O(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),O(l.rank===2&&(l.shape[0]===i.shape[0]||l.shape[0]===1)&&l.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),O(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const u={image:i,transforms:l},h={interpolation:e,fillMode:s,fillValue:a,outputShape:r};return G.runKernel(qx,u,h)}const SV=U({transform_:wV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NV(n,t,e){const s=F(n,"a","bandPart");O(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const a=s.shape,[r,i]=s.shape.slice(-2);let l,u;typeof t=="number"?(O(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),O(t<=r,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${r}).`),l=F(t<0?r:t,"numLower","bandPart")):(O(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),l=On(Nc(t,0),r,xo(t,r))),typeof e=="number"?(O(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),O(e<=i,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${i}).`),u=F(e<0?i:e,"numUpper","bandPart")):(O(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=On(Nc(e,0),i,xo(e,i)));const h=q(Ml(0,r,1,"int32"),[-1,1]),f=Ml(0,i,1,"int32"),p=kt(h,f),m=qa(ko(p,l),Ni(p,Ie(u))),y=nn([r,i],s.dtype);return q(ms(oa(q(s,[-1,r,i])).map(b=>On(m,b,y))),a)}const CV=U({bandPart_:NV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(n){let t;if(Array.isArray(n)){t=!1,O(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const a=n[0].shape[0];for(let r=1;r<n.length;++r)O(n[r].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[r].shape[0]} vs. ${a})`)}else t=!0,n=hs(n,n.shape[0],0).map(a=>Eo(a,[0]));O(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let a=0;a<n.length;++a)e.push(G.tidy(()=>{let r=s[a];if(a>0)for(let i=0;i<a;++i){const l=H(Et(H(e[i],r)),e[i]);r=kt(r,l)}return Dt(r,Lh(r,"euclidean"))}));return t?ms(e,0):e}const $V=U({gramSchmidt_:TV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(n,t=!1){if(O(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return lT(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((u,h)=>u*h),s=oa(q(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),a=[],r=[];s.forEach(u=>{const[h,f]=lT(u,t);a.push(h),r.push(f)});const i=q(ms(a,0),n.shape),l=q(ms(r,0),n.shape);return[i,l]}}function lT(n,t=!1){return G.tidy(()=>{O(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let a=l1(e),r=xr(n);const i=bc([[1]],[1,1]);let l=xr(i);const u=e>=s?s:e;for(let h=0;h<u;++h){const f=r,p=l,m=a;[l,r,a]=G.tidy(()=>{const y=se(r,[h,h],[e-h,1]),b=Lh(y),w=se(r,[h,h],[1,1]),v=On(xs(w,0),bc([[-1]]),bc([[1]])),S=kt(w,H(v,b)),C=Dt(y,S);C.shape[0]===1?l=xr(i):l=He([i,se(C,[1,0],[C.shape[0]-1,C.shape[1]])],0);const $=Ie(Dt(Yt(v,S),b)),T=se(r,[h,0],[e-h,s]),I=H($,l),D=ae(l);if(h===0)r=kt(T,Yt(I,Yt(D,T)));else{const R=kt(T,Yt(I,Yt(D,T)));r=He([se(r,[0,0],[h,s]),R],0)}const z=ae(I),B=se(a,[0,h],[e,a.shape[1]-h]);if(h===0)a=kt(B,Yt(Yt(B,l),z));else{const R=kt(B,Yt(Yt(B,l),z));a=He([se(a,[0,0],[e,h]),R],1)}return[l,r,a]}),Gt([f,p,m])}return!t&&e>s&&(a=se(a,[0,0],[e,s]),r=se(r,[0,0],[s,s])),[a,r]})}const IV=U({qr_:kV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ts;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(ts||(ts={}));function EV(n,t,e=ts.SUM_BY_NONZERO_WEIGHTS){const s=F(n,"losses","computeWeightedLoss");let a=null;t!=null&&(a=F(t,"weights","computeWeightedLoss"));const r=a==null?s:H(s,a);if(e===ts.NONE)return r;if(e===ts.SUM)return Et(r);if(e===ts.MEAN){if(a==null)return ze(r);{const i=s.size/a.size,l=Dt(Et(r),Et(a));return i>1?Dt(l,Lt(i)):l}}if(e===ts.SUM_BY_NONZERO_WEIGHTS){if(a==null)return Dt(Et(r),Lt(s.size));{const i=H(a,es(s.shape)),l=Nt(Et(zl(i,Lt(0))),"float32");return Dt(Et(r),l)}}throw Error(`Unknown reduction: ${e}`)}const Ir=U({computeWeightedLoss_:EV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(n,t,e,s=ts.SUM_BY_NONZERO_WEIGHTS){const a=F(n,"labels","absoluteDifference"),r=F(t,"predictions","absoluteDifference");let i=null;e!=null&&(i=F(e,"weights","absoluteDifference")),bs(a.shape,r.shape,"Error in absoluteDifference: ");const l=en(kt(a,r));return Ir(l,i,s)}const RV=U({absoluteDifference_:AV});function DV(n,t,e,s,a=ts.SUM_BY_NONZERO_WEIGHTS){const r=F(n,"labels","cosineDistance"),i=F(t,"predictions","cosineDistance");let l=null;s!=null&&(l=F(s,"weights","cosineDistance")),bs(r.shape,i.shape,"Error in cosineDistance: ");const u=Lt(1),h=kt(u,Et(H(r,i),e,!0));return Ir(h,l,a)}const OV=U({cosineDistance_:DV});function _V(n,t,e,s=ts.SUM_BY_NONZERO_WEIGHTS){let a=F(n,"labels","hingeLoss");const r=F(t,"predictions","hingeLoss");let i=null;e!=null&&(i=F(e,"weights","hingeLoss")),bs(a.shape,r.shape,"Error in hingeLoss: ");const l=Lt(1);a=kt(H(Lt(2),a),l);const u=Ka(kt(l,H(a,r)));return Ir(u,i,s)}const FV=U({hingeLoss_:_V});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LV(n,t,e,s=1,a=ts.SUM_BY_NONZERO_WEIGHTS){const r=F(n,"labels","huberLoss"),i=F(t,"predictions","huberLoss");let l=null;e!=null&&(l=F(e,"weights","huberLoss")),bs(r.shape,i.shape,"Error in huberLoss: ");const u=Lt(s),h=en(kt(i,r)),f=xo(h,u),p=kt(h,f),m=yt(H(Lt(.5),we(f)),H(u,p));return Ir(m,l,a)}const zV=U({huberLoss_:LV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(n,t,e,s=1e-7,a=ts.SUM_BY_NONZERO_WEIGHTS){const r=F(n,"labels","logLoss"),i=F(t,"predictions","logLoss");let l=null;e!=null&&(l=F(e,"weights","logLoss")),bs(r.shape,i.shape,"Error in logLoss: ");const u=Lt(1),h=Lt(s),f=Ie(H(r,As(yt(i,h)))),p=H(kt(u,r),As(yt(kt(u,i),h))),m=kt(f,p);return Ir(m,l,a)}const BV=U({logLoss_:MV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(n,t,e,s=ts.SUM_BY_NONZERO_WEIGHTS){const a=F(n,"labels","meanSquaredError"),r=F(t,"predictions","meanSquaredError");let i=null;e!=null&&(i=F(e,"weights","meanSquaredError")),bs(a.shape,r.shape,"Error in meanSquaredError: ");const l=C1(a,r);return Ir(l,i,s)}const PV=U({meanSquaredError_:VV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(n,t){const e=F(n,"labels","sigmoidCrossEntropyWithLogits"),s=F(t,"logits","sigmoidCrossEntropyWithLogits");bs(e.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=Ka(s),r=H(s,e),i=Nm(ps(Ie(en(s))));return yt(kt(a,r),i)}function WV(n,t,e,s=0,a=ts.SUM_BY_NONZERO_WEIGHTS){let r=F(n,"multiClassLabels","sigmoidCrossEntropy");const i=F(t,"logits","sigmoidCrossEntropy");let l=null;if(e!=null&&(l=F(e,"weights","sigmoidCrossEntropy")),bs(r.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const h=Lt(s),f=Lt(1),p=Lt(.5);r=yt(H(r,kt(f,h)),H(p,h))}const u=UV(r,i);return Ir(u,l,a)}const GV=U({sigmoidCrossEntropy_:WV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HV(n,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Sr((a,r,i)=>{const u=Cm(r,[e],!0),h=kt(Nt(r,"float32"),u);i([a,h]);const f=Ie(H(h,a));return{value:Et(f,[e]),gradFunc:(y,b)=>{const[w,v]=b,S=qe(y.shape,[e]);return[H(q(y,S),kt(Nt(w,"float32"),ps(v))),H(q(y,S),kt(ps(v),Nt(w,"float32")))]}}})(n,t)}function qV(n,t,e,s=0,a=ts.SUM_BY_NONZERO_WEIGHTS){let r=F(n,"onehotLabels","softmaxCrossEntropy");const i=F(t,"logits","softmaxCrossEntropy");let l=null;if(e!=null&&(l=F(e,"weights","softmaxCrossEntropy")),bs(r.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const h=Lt(s),f=Lt(1),p=Lt(r.shape[1]);r=yt(H(r,kt(f,h)),Dt(h,p))}const u=HV(r,i);return Ir(u,l,a)}const jV=U({softmaxCrossEntropy_:qV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(n,t,e,s){const a=F(n,"indices","sparseFillEmptyRows","int32"),r=F(t,"values","sparseFillEmptyRows"),i=F(e,"denseShape","sparseFillEmptyRows","int32"),l=F(s,"defaultValue","sparseFillEmptyRows",r.dtype);if(a.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(l.rank!==0)throw new Error(`Default value should be a scalar but received shape ${l.shape}`);const u={indices:a,values:r,denseShape:i,defaultValue:l},h=G.runKernel(Fx,u);return{outputIndices:h[0],outputValues:h[1],emptyRowIndicator:h[2],reverseIndexMap:h[3]}}const KV=U({sparseFillEmptyRows_:XV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(n,t,e){const s=F(n,"inputIndices","sparseReshape","int32"),a=F(t,"inputShape","sparseReshape","int32"),r=F(e,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(a.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const i={inputIndices:s,inputShape:a,newShape:r},l=G.runKernel(Lx,i);return{outputIndices:l[0],outputShape:l[1]}}const ZV=U({sparseReshape_:YV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QV(n,t,e){const s=F(n,"data","sparseSegmentMean"),a=F(t,"indices","sparseSegmentMean","int32"),r=F(e,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const i={data:s,indices:a,segmentIds:r};return G.runKernel(zx,i)}const JV=U({sparseSegmentMean_:QV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tP(n,t,e){const s=F(n,"data","sparseSegmentSum"),a=F(t,"indices","sparseSegmentSum","int32"),r=F(e,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const i={data:s,indices:a,segmentIds:r};return G.runKernel(Mx,i)}const eP=U({sparseSegmentSum_:tP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nP(n,t,e,s,a,r,i,l){const u=F(n,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const h=F(t,"dataSplits","stringNGrams");if(h.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const f={separator:e,nGramWidths:s,leftPad:a,rightPad:r,padWidth:i,preserveShortSequences:l},p={data:u,dataSplits:h},m=G.runKernel(Ux,p,f);return{nGrams:m[0],nGramsSplits:m[1]}}const sP=U({stringNGrams_:nP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(n,t,e=!0){const s=F(n,"input","stringSplit","string"),a=F(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(a.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const r={skipEmpty:e},i={input:s,delimiter:a},l=G.runKernel(Wx,i,r);return{indices:l[0],values:l[1],shape:l[2]}}const rP=U({stringSplit_:aP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iP(n,t){const e=F(n,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:e};return G.runKernel(Gx,a,s)}const oP=U({stringToHashBucketFast_:iP});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(n,t,e,s=!0){const a=F(n,"input","staticRegexReplace","string"),r={pattern:t,rewrite:e,replaceGlobal:s};return G.runKernel(fm,{x:a},r)}const uP=U({staticRegexReplace_:lP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cP={fft:_m,ifft:$c,rfft:Fm,irfft:N1},hP={hammingWindow:z4,hannWindow:wk,frame:Sk,stft:P4},ta={flipLeftRight:H4,grayscaleToRGB:j4,resizeNearestNeighbor:Ck,resizeBilinear:Nk,rgbToGrayscale:K4,rotateWithOffset:Z4,cropAndResize:W4,nonMaxSuppression:J4,nonMaxSuppressionAsync:oV,nonMaxSuppressionWithScore:uV,nonMaxSuppressionWithScoreAsync:hV,nonMaxSuppressionPadded:fV,nonMaxSuppressionPaddedAsync:mV,threshold:vV,transform:SV},Tk={bandPart:CV,gramSchmidt:$V,qr:IV},dP={absoluteDifference:RV,computeWeightedLoss:Ir,cosineDistance:OV,hingeLoss:FV,huberLoss:zV,logLoss:BV,meanSquaredError:PV,sigmoidCrossEntropy:GV,softmaxCrossEntropy:jV},fP={sparseFillEmptyRows:KV,sparseReshape:ZV,sparseSegmentMean:JV,sparseSegmentSum:eP},pP={stringNGrams:sP,stringSplit:rP,stringToHashBucketFast:oP,staticRegexReplace:uP};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mP=new Map,gP=new Map;class Jl{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Qs{constructor(){this.classNameMap={}}static getMap(){return Qs.instance==null&&(Qs.instance=new Qs),Qs.instance}static register(t){Qs.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function xt(n,t,e){O(n.className!=null,()=>"Class being registered does not have the static className property defined."),O(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),O(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=n.className);const s=e,a=t+">"+s;return Qs.register(n),mP.set(a,n),gP.set(n,a),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ti extends Jl{minimize(t,e=!1,s){const{value:a,grads:r}=this.computeGradients(t,s);if(s!=null){const i=s.map(l=>({name:l.name,tensor:r[l.name]}));this.applyGradients(i)}else this.applyGradients(r);return Gt(r),e?a:(a.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Vz(t,e)}dispose(){this.iterations_!=null&&Gt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Lt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Ti,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $k extends Ti{static get className(){return"Adadelta"}constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=G.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=G.registeredVariables[s],i=!1;this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${s}/accum_grad`,variable:nt(()=>re(r).variable(i))}),this.accumulatedUpdates[a]==null&&(this.accumulatedUpdates[a]={originalName:`${s}/accum_var`,variable:nt(()=>re(r).variable(i))});const l=Array.isArray(t)?t[a].tensor:t[s];if(l==null)return;const u=this.accumulatedGrads[a].variable,h=this.accumulatedUpdates[a].variable;nt(()=>{const f=yt(H(u,this.rho),H(we(l),1-this.rho)),p=H(Dt(Tn(yt(h,this.epsilon)),Tn(yt(u,this.epsilon))),l),m=yt(H(h,this.rho),H(we(p),1-this.rho));u.assign(f),h.assign(m);const y=yt(H(p,-this.learningRate),r);r.assign(y)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Gt(this.accumulatedGrads.map(t=>t.variable)),Gt(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,s=!1;this.accumulatedGrads=t.slice(0,e).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedUpdates=t.slice(e,e*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kk extends Ti{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=G.registeredVariables[s];this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${s}/accumulator`,variable:nt(()=>Kl(r.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(t)?t[a].tensor:t[s];if(i==null)return;const l=this.accumulatedGrads[a].variable;nt(()=>{const u=yt(l,we(i));l.assign(u);const h=yt(H(Dt(i,Tn(yt(u,G.backend.epsilon()))),-this.learningRate),r);r.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Gt(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ik extends Ti{static get className(){return"Adam"}constructor(t,e,s,a=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],nt(()=>{this.accBeta1=Lt(e).variable(),this.accBeta2=Lt(s).variable()}),a==null&&(this.epsilon=G.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);nt(()=>{const s=kt(1,this.accBeta1),a=kt(1,this.accBeta2);e.forEach((r,i)=>{const l=G.registeredVariables[r],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:nt(()=>re(l).variable(u))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${r}/v`,variable:nt(()=>re(l).variable(u))});const h=Array.isArray(t)?t[i].tensor:t[r];if(h==null)return;const f=this.accumulatedFirstMoment[i].variable,p=this.accumulatedSecondMoment[i].variable,m=yt(H(f,this.beta1),H(h,1-this.beta1)),y=yt(H(p,this.beta2),H(we(h),1-this.beta2)),b=Dt(m,s),w=Dt(y,a);f.assign(m),p.assign(y);const v=yt(H(Dt(b,yt(Tn(w),this.epsilon)),-this.learningRate),l);l.assign(v)}),this.accBeta1.assign(H(this.accBeta1,this.beta1)),this.accBeta2.assign(H(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Gt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&Gt(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),nt(()=>{this.accBeta1.assign(wr(this.beta1,this.iterations_+1)),this.accBeta2.assign(wr(this.beta2,this.iterations_+1))});const e=t.length/2,s=!1;this.accumulatedFirstMoment=t.slice(0,e).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ek extends Ti{static get className(){return"Adamax"}constructor(t,e,s,a=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],nt(()=>{this.iteration=Lt(0).variable(),this.accBeta1=Lt(e).variable()}),a==null&&(this.epsilon=G.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);nt(()=>{const s=kt(1,this.accBeta1),a=Dt(-this.learningRate,yt(H(this.iteration,this.decay),1));e.forEach((r,i)=>{const l=G.registeredVariables[r],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:re(l).variable(u)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${r}/v`,variable:re(l).variable(u)});const h=Array.isArray(t)?t[i].tensor:t[r];if(h==null)return;const f=this.accumulatedFirstMoment[i].variable,p=this.accumulatedWeightedInfNorm[i].variable,m=yt(H(f,this.beta1),H(h,1-this.beta1)),y=H(p,this.beta2),b=en(h),w=kr(y,b);f.assign(m),p.assign(w);const v=yt(H(Dt(a,s),Dt(m,yt(w,this.epsilon))),l);l.assign(v)}),this.iteration.assign(yt(this.iteration,1)),this.accBeta1.assign(H(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Gt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&Gt(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F1 extends Ti{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=Array.isArray(t)?t[a].tensor:t[s];if(r==null)return;const i=G.registeredVariables[s];nt(()=>{const l=yt(H(this.c,r),i);i.assign(l)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=pn(Lt(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ak extends F1{static get className(){return"Momentum"}constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=Lt(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=G.registeredVariables[s];this.accumulations[a]==null&&(this.accumulations[a]={originalName:`${s}/momentum`,variable:nt(()=>re(r).variable(!1))});const i=this.accumulations[a].variable,l=Array.isArray(t)?t[a].tensor:t[s];l!=null&&nt(()=>{let u;const h=yt(H(this.m,i),l);this.useNesterov?u=yt(H(this.c,yt(l,H(h,this.m))),r):u=yt(H(this.c,h),r),i.assign(h),r.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Gt(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rk extends Ti{static get className(){return"RMSProp"}constructor(t,e=.9,s=0,a=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,a==null&&(this.epsilon=G.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=G.registeredVariables[s],i=!1;this.accumulatedMeanSquares[a]==null&&(this.accumulatedMeanSquares[a]={originalName:`${s}/rms`,variable:nt(()=>re(r).variable(i))}),this.accumulatedMoments[a]==null&&(this.accumulatedMoments[a]={originalName:`${s}/momentum`,variable:nt(()=>re(r).variable(i))}),this.accumulatedMeanGrads[a]==null&&this.centered&&(this.accumulatedMeanGrads[a]={originalName:`${s}/mg`,variable:nt(()=>re(r).variable(i))});const l=Array.isArray(t)?t[a].tensor:t[s];if(l==null)return;const u=this.accumulatedMeanSquares[a].variable,h=this.accumulatedMoments[a].variable;nt(()=>{const f=yt(H(u,this.decay),H(we(l),1-this.decay));if(this.centered){const p=this.accumulatedMeanGrads[a].variable,m=yt(H(p,this.decay),H(l,1-this.decay)),y=Dt(H(l,this.learningRate),Tn(kt(f,yt(we(m),this.epsilon)))),b=yt(H(h,this.momentum),y);u.assign(f),p.assign(m),h.assign(b);const w=kt(r,b);r.assign(w)}else{const p=yt(H(u,this.decay),H(we(l),1-this.decay)),m=yt(H(h,this.momentum),Dt(H(l,this.learningRate),Tn(yt(p,this.epsilon))));u.assign(p),h.assign(m);const y=kt(r,m);r.assign(y)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Gt(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Gt(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&Gt(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,s=!1;this.accumulatedMeanSquares=t.slice(0,e).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedMoments=t.slice(e,e*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yP=[$k,kk,Ik,Ek,Ak,Rk,F1];function bP(){for(const n of yP)xt(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xP="model",vP=".json",wP=".weights.bin";function uT(n){return new Promise(t=>setTimeout(t)).then(n)}class vo{constructor(t){if(!rt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(vo.URL_SCHEME)&&(t=t.slice(vo.URL_SCHEME.length)),(t==null||t.length===0)&&(t=xP),this.modelJsonFileName=t+vP,this.weightDataFileName=t+wP}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=Ea.join(t.weightData),s=window.URL.createObjectURL(new Blob([e],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const a=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r=u$(t,a),i=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),l=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(l.download=this.modelJsonFileName,l.href=i,await uT(()=>l.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=s,await uT(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Rh(t)}}}}vo.URL_SCHEME="downloads://";class SP{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{const s=new FileReader;s.onload=a=>{const r=JSON.parse(a.target.result),i=r.modelTopology;if(i==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:i});return}const u=Zx(r,h=>this.loadWeights(h));t(u)},s.onerror=a=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(t){const e=[],s=[];for(const i of t)e.push(...i.weights),s.push(...i.paths);const a=this.checkManifestAndWeightFiles(t),r=s.map(i=>this.loadWeightsFile(i,a[i]));return Promise.all(r).then(i=>[e,i])}loadWeightsFile(t,e){return new Promise((s,a)=>{const r=new FileReader;r.onload=i=>{const l=i.target.result;s(l)},r.onerror=i=>a(`Failed to weights data from file of path '${t}'.`),r.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){const e=[],s=this.weightsFiles.map(r=>QC(r.name)),a={};for(const r of t)r.paths.forEach(i=>{const l=QC(i);if(e.indexOf(l)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${l}'`);if(e.push(l),s.indexOf(l)===-1)throw new Error(`Weight file with basename '${l}' is not provided.`);a[i]=this.weightsFiles[s.indexOf(l)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return a}}const NP=n=>rt().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(vo.URL_SCHEME)?CP(n.slice(vo.URL_SCHEME.length)):null;Re.registerSaveRouter(NP);function CP(n="model"){return new vo(n)}function TP(n){return new SP(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cT(n,t,e,s){i(n),e=e??0,s=s??1,l(e,s);let a=0;const r=u=>(u.then(h=>{const f=e+ ++a/n.length*(s-e);return t(f),h}),u);function i(u){O(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function l(u,h){O(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),O(h>=0&&h<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${h}`),O(h>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${h}`)}return Promise.all(n.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Dk(n,t){t==null&&(t={});const e=t.fetchFunc==null?rt().platform.fetch:t.fetchFunc,s=n.map(p=>e(p,t.requestInit,{isBinary:!0})),l=(t.onProgress==null?await Promise.all(s):await cT(s,t.onProgress,0,.5)).map(p=>p.arrayBuffer());return t.onProgress==null?await Promise.all(l):await cT(l,t.onProgress,.5,1)}function $P(n,t){var e;const s=t.fetchFunc==null?rt().platform.fetch:t.fetchFunc;let a=0,r;return(e=t.onProgress)===null||e===void 0||e.call(t,0),new ReadableStream({pull:async i=>{for(var l;a<n.length;){r||(r=(await s(n[a],t.requestInit,{isBinary:!0})).body.getReader());const{done:u,value:h}=await r.read();if(u){a++,r=void 0,(l=t.onProgress)===null||l===void 0||l.call(t,a/n.length);continue}i.enqueue(h);return}i.close()}})}async function kP(n,t="",e,s){return Ok(i=>Dk(i,{requestInit:s}))(n,t,e)}function Ok(n){return async(t,e="",s)=>{const a=t.map(()=>!1),r={},i=s!=null?s.map(()=>!1):[],l=[];if(t.forEach((y,b)=>{let w=0;y.weights.forEach(v=>{const S="quantization"in v?v.quantization.dtype:v.dtype,C=po[S]*ht(v.shape),$=()=>{a[b]=!0,r[b]==null&&(r[b]=[]),r[b].push({manifestEntry:v,groupOffset:w,sizeBytes:C})};s!=null?s.forEach((T,I)=>{T===v.name&&($(),i[I]=!0)}):$(),l.push(v.name),w+=C})}),!i.every(y=>y)){const y=s.filter((b,w)=>!i[w]);throw new Error(`Could not find weights in manifest with names: ${y.join(", ")}. 
Manifest JSON has weights with names: ${l.join(", ")}.`)}const u=a.reduce((y,b,w)=>(b&&y.push(w),y),[]),h=[];u.forEach(y=>{t[y].paths.forEach(b=>{const w=e+(e.endsWith("/")?"":"/")+b;h.push(w)})});const f=await n(h),p={};let m=0;return u.forEach(y=>{const b=t[y].paths.length,w=new Ea(f.slice(m,m+b));r[y].forEach(S=>{const C=w.slice(S.groupOffset,S.groupOffset+S.sizeBytes),$=r$(C,[S.manifestEntry]);for(const T in $)p[T]=$[T]}),m+=b}),p}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IP="application/octet-stream",EP="application/json";class L1{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(O(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=rt().platform.fetch,O(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&O(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{},this.loadOptions=e}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],a=u$(t,s);if(e.body.append("model.json",new Blob([JSON.stringify(a)],{type:EP}),"model.json"),t.weightData!=null){const i=Ea.join(t.weightData);e.body.append("model.weights.bin",new Blob([i],{type:IP}),"model.weights.bin")}const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:Rh(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=e.modelTopology,a=e.weightsManifest;if(s==null&&a==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const t=await this.loadModelJSON();return Zx(t,e=>this.loadWeights(e))}async loadStream(){const t=await this.loadModelJSON(),e=await this.getWeightUrls(t.weightsManifest),s=n0(t.weightsManifest),a=()=>$P(e,this.loadOptions);return Object.assign(Object.assign({},t),{weightSpecs:s,getWeightStream:a})}async getWeightUrls(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[s,a]=AP(e),r=this.weightPathPrefix||s,i=[],l=[];for(const u of t)for(const h of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):i.push(r+h+a);return this.weightUrlConverter&&i.push(...await Promise.all(l)),i}async loadWeights(t){const e=await this.getWeightUrls(t),s=n0(t),a=await Dk(e,this.loadOptions);return[s,a]}}L1.URL_SCHEME_REGEX=/^https?:\/\//;function AP(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?"),s=n.substring(0,t),a=e>t?n.substring(e):"";return[s+"/",a]}function u0(n){return n.match(L1.URL_SCHEME_REGEX)!=null}const _k=(n,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(n)?e=n.every(s=>u0(s)):e=u0(n),e)return z1(n,t)}return null};Re.registerSaveRouter(_k);Re.registerLoadRouter(_k);function z1(n,t){return new L1(n,t)}function RP(n,t){return z1(n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $b{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class Fk{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class DP{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}function OP(n,t,e,s){const a=arguments;return new DP(Lk(...a))}function Lk(n,t,e,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new $b(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $b({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $b({modelTopology:n,weightSpecs:t,weightData:e,trainingConfig:s}))}function _P(n){return new Fk(n)}function FP(n){return new Fk(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zk=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Ea,browserFiles:TP,browserHTTPRequest:RP,concatenateArrayBuffers:l$,copyModel:F3,decodeWeights:r$,decodeWeightsStream:o$,encodeWeights:e0,fromMemory:OP,fromMemorySync:Lk,getLoadHandlers:w3,getModelArtifactsForJSON:Zx,getModelArtifactsForJSONSync:c$,getModelArtifactsInfoForJSON:Rh,getSaveHandlers:h$,getWeightSpecs:n0,http:z1,isHTTPScheme:u0,listModels:O3,loadWeights:kP,moveModel:L3,registerLoadRouter:v3,registerSaveRouter:x3,removeModel:_3,weightsLoaderFactory:Ok,withSaveHandler:_P,withSaveHandlerSync:FP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Qi;function LP(n,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,s=!1,a=!1,r=!1,i=!1,l=!1;if(n.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)r=!0;else if(n.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)l=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(Kb(jb,G.backendName)!=null){const b={pixels:n},w={numChannels:t};return G.runKernel(jb,b,w)}const[h,f]=a?[n.videoWidth,n.videoHeight]:[n.width,n.height];let p;if(i)p=n.getContext("2d").getImageData(0,0,h,f).data;else if(s||e)p=n.data;else if(r||a||l){if(Qi==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Qi=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Qi=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Qi.canvas.width=h,Qi.canvas.height=f,Qi.drawImage(n,0,0,h,f),p=Qi.getImageData(0,0,h,f).data}let m;if(t===4)m=new Int32Array(p);else{const b=h*f;m=new Int32Array(b*t);for(let w=0;w<b;w++)for(let v=0;v<t;++v)m[w*t+v]=p[w*4+v]}return ck(m,[f,h,t],"int32")}const zP=U({fromPixels_:LP});function M1(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(ht(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const a=t.shape,r=a[a.length-1];let i=1;for(let p=0;p<a.length-1;++p)i*=a[p];const l=n.shape,u=a.slice();u.pop();let h=1;for(let p=r;p<e;++p)h*=l[p],u.push(l[p]);const f=[...Ft(n.shape).map(p=>p/h),1].slice(0,r);return[u,i,h,f]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c0=-2,MP=-1;function B1(n,t,e){const s=n.shape.length;O(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),O(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let a=0;a<s;++a)O(t[a]+e[a]<=n.shape[a],()=>`Error in slice${s}D: begin[${a}] + size[${a}] (${t[a]+e[a]}) would overflow input.shape[${a}] (${n.shape[a]})`)}function BP(n){const t=[];let e=0;for(;n>0;)n&1&&t.push(e),n/=2,e++;return t}function V1(n,t,e){const s=[];for(let a=0;a<n.length;a++)s[a]=Math.ceil((t[a]-n[a])/e[a]);return s}function Mk(n,t,e,s){const a=[...n];for(let r=a.length;r<s.length;r++)a.push(1);for(let r=0;r<e;r++)r===0?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Bk(n,t,e){return e<=n?e:e-(t-1)}function Vk(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function VP(n,t,e,s,a,r,i,l,u){const h=n.length;let f=new Array(h),p=new Array(h),m=new Array(h);if(t.length&&e>0){const y=t[0],b=e+1;f=Pk(i,y,b,s,n),p=Uk(l,y,b,a,n),m=Mk(r,y,b,n)}else for(let y=0;y<h;y++)f[y]=Gk(i,s,r,n,y,u),p[y]=Hk(l,a,r,n,y,u),m[y]=Wk(r,y,u);return{begin:f,end:p,strides:m}}function Pk(n,t,e,s,a){const r=[...a],i=Vk(e,t);for(let l=0;l<r.length;l++)if(i.indexOf(l)>-1)r[l]=0;else{const u=Bk(t,e,l);let h=s[u];n&1<<u&&(h=0),r[l]=h}return r}function Uk(n,t,e,s,a){const r=[...a],i=Vk(e,t);for(let l=0;l<r.length;l++)if(i.indexOf(l)>-1)r[l]=Number.MAX_SAFE_INTEGER;else{const u=Bk(t,e,l);let h=s[u];n&1<<u&&(h=Number.MAX_SAFE_INTEGER),r[l]=h}for(let l=0;l<r.length;l++){const u=a[l];r[l]<0&&(r[l]+=u),r[l]=co(0,r[l],a[l])}return r}function Wk(n,t,e){let s=n[t];return(e&1<<t||s==null)&&(s=1),s}function Gk(n,t,e,s,a,r){let i=t[a];const l=e[a]||1;(n&1<<a||r&1<<a||i==null)&&(l>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const u=s[a];return i<0&&(i+=u),i=co(0,i,u-1),i}function Hk(n,t,e,s,a,r){let i=t[a];const l=e[a]||1;(n&1<<a||r&1<<a||i==null)&&(l>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const u=s[a];return i<0&&(i+=u),l>0?i=co(0,i,u):i=co(-1,i,u-1),i}function P1(n,t,e){let s=e.length;for(let a=0;a<e.length;a++)if(e[a]>1){s=a;break}for(let a=s+1;a<e.length;a++)if(t[a]>0||e[a]!==n[a])return!1;return!0}function U1(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function Vm(n,t,e){let s;const a=n.shape.length;typeof t=="number"?s=[t,...new Array(a-1).fill(0)]:t.length<a?s=t.concat(new Array(a-t.length).fill(0)):s=t.slice(),s.forEach(i=>{O(i!==-1,()=>"slice() does not support negative begin indexing.")});let r;return e==null?r=new Array(a).fill(-1):typeof e=="number"?r=[e,...new Array(a-1).fill(-1)]:e.length<a?r=e.concat(new Array(a-e.length).fill(-1)):r=e,r=r.map((i,l)=>i>=0?i:(O(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${l}.`),n.shape[l]-s[l])),[s,r]}function W1(n,t,e,s,a,r,i,l,u){let h;if(s==null?(h=new Array(t.length),h.fill(1)):h=s,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let f=!1;const p={dims:h.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:h.slice(),beginMask:a,endMask:r,ellipsisMask:i,newAxisMask:l,shrinkAxisMask:u};for(let $=0;$<p.dims;$++)f&&(1<<$&l)!==0&&p.numAddAxisAfterEllipsis++,1<<$&i&&(f=!0);f||(p.ellipsisMask|=1<<p.dims,p.dims++);const m={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};PP(p,m);let y=!0,b=!0,w=!0;const v=[],S=[];for(let $=0;$<n.length;++$){if(m.strides[$]===0)throw Error(`strides[${$}] must be non-zero`);const T=!!(m.shrinkAxisMask&1<<$),I=n[$];if(I===-1){v.push(T?1:-1);continue}const D=[m.beginMask&1<<$,m.endMask&1<<$],z=[m.strides[$]>0?0:-1,m.strides[$]>0?I:I-1];if(T&&m.strides[$]<=0)throw Error("only stride 1 allowed on non-range indexing.");w=w&&m.strides[$]===1;const B=!!(m.beginMask&1<<$&&m.endMask&1<<$);if(m.beginValid&&m.endValid){if(T){const W=m.begin[$]<0?I+m.begin[$]:m.begin[$];if(m.begin[$]=W,m.end[$]=m.begin[$]+1,W<0||W>=I)throw Error(`slice index ${m.begin[$]} of dimension ${$} out of bounds.`)}else m.begin[$]=hT(m.begin[$],0,m.strides[$],I,D,z),m.end[$]=hT(m.end[$],1,m.strides[$],I,D,z);const A=m.strides[$]===1&&m.begin[$]===0&&m.end[$]===I;y=y&&A,b=b&&($===0&&m.strides[$]===1||A)}else y=y&&m.strides[$]===1&&B,b=b&&($===0&&m.strides[$]===1||B);let R,_=!1;if(m.beginValid&&m.endValid?(R=m.end[$]-m.begin[$],_=!0):T?(R=1,_=!0):B&&I>=0&&(m.strides[$]<0?R=-I:R=I,_=!0),_){let A;R===0||R<0!=m.strides[$]<0?A=0:A=Math.trunc(R/m.strides[$])+(R%m.strides[$]!==0?1:0),v.push(A)}else v.push(-1)}for(let $=0;$<m.finalShapeGatherIndices.length;++$){const T=m.finalShapeGatherIndices[$];T>=0?S.push(v[T]):T===c0&&S.push(1)}return{finalShapeSparse:S.filter(($,T)=>m.finalShapeGatherIndices[T]!==c0),finalShape:S,isIdentity:y,sliceDim0:b,isSimpleSlice:w,begin:m.begin,end:m.end,strides:m.strides}}function PP(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=n.begin!=null,t.endValid=n.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const a=Math.min(t.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<a;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=s}else if(1<<s&n.newAxisMask)t.finalShapeGatherIndices.push(c0),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);n.begin!=null&&(t.begin[e]=n.begin[s]),n.end!=null&&(t.end[e]=n.end[s]),t.strides[e]=n.strides[s],n.beginMask&1<<s&&(t.beginMask|=1<<e),n.endMask&1<<s&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(MP),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[e]=s,e++}}function hT(n,t,e,s,a,r){if(a[t])return e>0?r[t]:r[t+1&1];{const i=n<0?s+n:n;return i<r[0]?r[0]:i>r[1]?r[1]:i}}const UP=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:B1,computeFlatOffset:U1,computeOutShape:V1,getNormalizedAxes:VP,isSliceContinous:P1,maskToAxes:BP,parseSliceParams:Vm,sliceInfo:W1,startForAxis:Gk,startIndicesWithElidedDims:Pk,stopForAxis:Hk,stopIndicesWithElidedDims:Uk,stridesForAxis:Wk,stridesWithElidedDims:Mk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WP{static sgd(t){return new F1(t)}static momentum(t,e,s=!1){return new Ak(t,e,s)}static rmsprop(t,e=.9,s=0,a=null,r=!1){return new Rk(t,e,s,a,r)}static adam(t=.001,e=.9,s=.999,a=null){return new Ik(t,e,s,a)}static adadelta(t=.001,e=.95,s=null){return new $k(t,e,s)}static adamax(t=.002,e=.9,s=.999,a=null,r=0){return new Ek(t,e,s,a,r)}static adagrad(t,e=.1){return new kk(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xl=WP;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GP=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function qk(){return new Promise(n=>GP(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G1(n,t){const e=n[0].length;n.forEach((a,r)=>{O(a.length===e,()=>`Error in concat${e}D: rank of tensors[${r}] must be the same as the rank of the rest (${e})`)}),O(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((a,r)=>{for(let i=0;i<e;i++)O(i===t||a[i]===s[i],()=>`Error in concat${e}D: Shape of tensors[${r}] (${a}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`)})}function Wa(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Sa;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Sa||(Sa={}));function jk(n,t,e){let s=new Array;if(e==null&&t==null)return s;if(t==null)for(;s.length<n+e.length;)s.push(-1);else s=t.slice();if(e==null)return s;if(n+e.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${s.length}`);for(let a=1;a<e.length;++a){const r=e[a],i=s[s.length-e.length+a],l=s[i];if(r>=0)if(l>=0){if(l!==r)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+n}] = ${r} but shape[${a+n}] = ${l}`)}else s[i]=r}return s}function Xk(n){const t={FIRST_DIM_SIZE:Sa.FIRST_DIM_SIZE,VALUE_ROWIDS:Sa.VALUE_ROWIDS,ROW_LENGTHS:Sa.ROW_LENGTHS,ROW_SPLITS:Sa.ROW_SPLITS,ROW_LIMITS:Sa.ROW_LIMITS,ROW_STARTS:Sa.ROW_STARTS},e=[];for(const s of n)if(s in t)e.push(t[s]);else break;return e}function Kk(n){return n.length===0?0:n[0]===Sa.FIRST_DIM_SIZE?n.length-1:n.length}function Yk(n,t){if(n==null||t==null)return;const e=n.length,s=t.length;if(e>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${s})`);for(let a=0;a<Math.min(e,s-1);++a){const r=n[a],i=t[a+1];if(r>=0&&i>=0&&r!==1&&r!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-n.length}] = ${r} but ragged tensor input.flatValues.shape[${a-n.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H1=30;function Pm(n){return n<=H1?n:Gb(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q1(n,t,e){const s=e*(typeof n=="number"?n:n[0]),a=t*(typeof n=="number"?n:n[1]);return[s,a]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bh(n,t,e,s=!0){let a=[];if(s)a=a.concat(t.slice(0)),a.push(n[0]/e),a=a.concat(n.slice(1));else{a=a.concat(n[0]);const r=t.length;for(let i=0;i<r;++i)a=a.concat([n[i+1]/t[i],t[i]]);a=a.concat(n.slice(r+1))}return a}function Vh(n,t,e=!0){const s=[];if(e){s.push(t);for(let a=t+1;a<n;++a)a<=2*t?(s.push(a),s.push(a-(t+1))):s.push(a)}else{const a=[],r=[];for(let i=1;i<n;++i)i>=t*2+1||i%2===1?r.push(i):a.push(i);s.push(...a),s.push(0),s.push(...r)}return s}function Ph(n,t,e,s=!0){const a=[];s?a.push(n[0]/e):a.push(n[0]*e);for(let r=1;r<n.length;++r)r<=t.length?s?a.push(t[r-1]*n[r]):a.push(n[r]/t[r-1]):a.push(n[r]);return a}function j1(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function X1(n,t,e){const s=n.slice(0,1);for(let a=0;a<e;++a)s.push(n[a+1]-t[a][0]-t[a][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Um=1.7580993408473768,Wm=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K1=.3275911,Y1=.254829592,Z1=-.284496736,Q1=1.421413741,J1=-1.453152027,tv=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nr(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(n.length*2);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function Zk(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function Qk(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let a=0;a<n.length;a+=4)e[Math.floor(a/4)]=n[a],s[Math.floor(a/4)]=n[a+1];return{real:e,imag:s}}function Jk(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let a=2;a<n.length;a+=4)e[Math.floor(a/4)]=n[a],s[Math.floor(a/4)]=n[a+1];return{real:e,imag:s}}function ev(n,t){const e=n[t*2],s=n[t*2+1];return{real:e,imag:s}}function tI(n,t,e,s){n[s*2]=t,n[s*2+1]=e}function eI(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let a=0;a<Math.ceil(n/2);a++){const r=(t?2:-2)*Math.PI*(a/n);e[a]=Math.cos(r),s[a]=Math.sin(r)}return{real:e,imag:s}}function nI(n,t,e){const s=(e?2:-2)*Math.PI*(n/t),a=Math.cos(s),r=Math.sin(s);return{real:a,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kb="->",HP=/->/g,dT=",",fT="...";function nv(n,t){n=n.replace(/\s/g,"");const e=(n.length-n.replace(HP,"").length)/kb.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${kb}").`);const[s,a]=n.split(kb);O(s.indexOf(fT)===-1,()=>`The ellipsis notation ("${fT}") is not supported yet.`);const r=s.split(dT),i=r.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const l=[];for(let m=0;m<a.length;++m){const y=a[m];if(!r.some(b=>b.indexOf(y)!==-1))throw new Error(`Output subscripts contain the label ${y} not present in the input subscripts.`);l.indexOf(y)===-1&&l.push(y)}for(let m=0;m<s.length;++m){const y=s[m];l.indexOf(y)===-1&&y!==dT&&l.push(y)}const u=new Array(r.length);for(let m=0;m<i;++m){if(new Set(r[m].split("")).size!==r[m].length)throw new Error(`Found duplicate axes in input component ${r[m]}. Support for duplicate axes in input is not implemented yet.`);u[m]=[];for(let y=0;y<r[m].length;++y)u[m].push(l.indexOf(r[m][y]))}const h=l.length,f=a.length,p=[];for(let m=f;m<h;++m)p.push(m);return{allDims:l,summedDims:p,idDims:u}}function sv(n,t){let e=new Array(n);e.fill(-1);for(let a=0;a<t.length;++a)e[t[a]]=a;const s=[];for(let a=0;a<n;++a)e[a]===-1&&s.push(a);return e=e.filter(a=>a!==-1),{permutationIndices:e,expandDims:s}}function av(n,t,e){const s=new Array(n);for(let a=0;a<e.length;++a){const r=e[a].shape;for(let i=0;i<t[a].length;++i)s[t[a][i]]===void 0?s[t[a][i]]=r[i]:O(s[t[a][i]]===r[i],()=>`Expected dimension ${s[t[a][i]]} at axis ${i} of input shaped ${JSON.stringify(r)}, but got dimension ${r[i]}`)}}function rv(n,t){const e=n,s=[];let a=0;n.length===0&&e.push(-1),a=n.length+1;for(let i=0;i<a;++i)s.push([]);const r=[];for(let i=0;i<e.length;++i){const l=e[i],u=qP(t,l);for(const h of u)r.indexOf(h)===-1&&(s[i].push(h),r.push(h))}return{path:e,steps:s}}function iv(n){return n.every((t,e)=>t===e)}function qP(n,t){const e=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(t)!==-1||t===-1)&&e.push(s);return e}function ov(n,t,e=0){let s=[];if(typeof t=="number")O(n.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{const a=t.reduce((i,l)=>(l===-1&&(i+=1),i),0);O(a<=1,()=>"There should be only one negative value in split array.");const r=t.indexOf(-1);if(r!==-1){const i=t.reduce((l,u)=>u>0?l+u:l);t[r]=n.shape[e]-i}O(n.shape[e]===t.reduce((i,l)=>i+l),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sI(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function aI(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function rI(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iI(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function oI(n,t){return`size ${n} must be non-negative, not ${t}`}function lI(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function uI(n,t){const e=ht(n),s=ht(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${t}`}function cI(n,t){const e=ht(n),s=ht(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h0(){return"segment ids must be >= 0"}function hI(){return"segment ids are not increasing"}function dI(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function fI(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pI(n,t){let e=!1,s;for(n<=H1?(s=n,e=!0):s=Gb(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=Gb(n,s+1);return s}function mI(n,t,e){const s=[],a=n.length;for(let r=0;r<a;r++)r!==t?s.push(n[r]):s.push(e);return s}function lv(n,t,e,s){const a=t.shape.length,r=n.shape.length;if(s!==0&&(s<-a||s>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${s}`);if(s<0&&(s+=a),s>r)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${r}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let p=0;p<s;++p)if(n.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${n.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);const i=n.shape[e],l=[];let u=1,h=1,f=1;for(let p=0;p<s;++p)l.push(n.shape[p]),u*=n.shape[p];for(let p=s;p<e;p++)l.push(n.shape[p]),h*=n.shape[p];for(let p=s;p<a;p++)l.push(t.shape[p]);for(let p=e+1;p<r;p++)l.push(n.shape[p]),f*=n.shape[p];return{batchSize:u,sliceSize:f,outerSize:h,dimSize:i,outputShape:l}}const jP=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:lv,computeOutShape:mI,segOpComputeOptimalWindowSize:pI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cr(n){try{return n.map(t=>oi(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function gI(n){return n.map(t=>ai(t))}const XP=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Y1,ERF_A2:Z1,ERF_A3:Q1,ERF_A4:J1,ERF_A5:tv,ERF_P:K1,PARALLELIZE_THRESHOLD:H1,get RowPartitionType(){return Sa},SELU_SCALE:Wm,SELU_SCALEALPHA:Um,applyActivation:Mm,assertAndGetBroadcastShape:Pt,assertAxesAreInnerMostDims:kn,assertParamsConsistent:G1,assignToTypedArray:tI,axesAreInnerMostDims:o1,calculateShapes:Ao,checkEinsumDimSizes:av,checkPadOnDimRoundingMode:qn,combineLocations:H$,combineRaggedTensorToTensorShapes:jk,complexWithEvenIndex:Qk,complexWithOddIndex:Jk,computeConv2DInfo:gn,computeConv3DInfo:wi,computeDefaultPad:t1,computeDilation2DInfo:Dh,computeOptimalWindowSize:Pm,computeOutAndReduceShapes:yn,computeOutShape:Wa,computePool2DInfo:la,computePool3DInfo:Tr,convertConv2DDataFormat:$r,decodeEinsumEquation:nv,eitherStridesOrDilationsAreOne:$n,expandShapeToKeepDim:qe,exponent:nI,exponents:eI,fromStringArrayToUint8:gI,fromUint8ToStringArray:Cr,getAxesPermutation:_e,getBroadcastDims:Ll,getComplexWithIndex:ev,getEinsumComputePath:rv,getEinsumPermutation:sv,getFusedBiasGradient:zm,getFusedDyActivation:Lm,getImageCenter:q1,getInnerMostAxes:je,getPermuted:Vh,getRaggedRank:Kk,getReductionAxes:un,getReshaped:Bh,getReshapedPermuted:Ph,getRowPartitionTypesHelper:Xk,getSliceBeginCoords:j1,getSliceSize:X1,getSparseFillEmptyRowsIndicesDenseShapeMismatch:sI,getSparseFillEmptyRowsNegativeIndexErrorMessage:aI,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:rI,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:lI,getSparseReshapeInputOutputMismatchErrorMessage:cI,getSparseReshapeInputOutputMultipleErrorMessage:uI,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:iI,getSparseReshapeNegativeOutputDimErrorMessage:oI,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:fI,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:h0,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:hI,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:dI,getUndoAxesPermutation:Si,isIdentityPermutation:iv,log:FF,mergeRealAndImagArrays:Nr,prepareAndValidate:M1,prepareSplitSize:ov,segment_util:jP,shouldFuse:Bm,slice_util:UP,splitRealAndImagArrays:Zk,stridesOrDilationsArePositive:yo,tupleValuesAreOne:ci,upcastType:ds,validateDefaultValueShape:Yk,validateInput:T1,validateUpdateShape:hk,warn:Is},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */bP();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yI={kernelName:pp,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,Zl(Nt(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KP={kernelName:Lc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=we(Nt(e,"float32")),a=Tn(kt(Lt(1),s));return Ie(Dt(n,a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YP={kernelName:zc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Tn(kt(we(Nt(e,"float32")),1));return Dt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZP={kernelName:Xl,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{let l=n;const u=un(e.shape,a);return u.length>0&&(l=Et(l,u)),q(l,e.shape)},b:()=>{let l=n;const u=un(s.shape,a);return u.length>0&&(l=Et(l,u)),q(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QP={kernelName:mp,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,a)=>{e[a]=()=>n.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JP={kernelName:gp,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>re(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tU={kernelName:yp,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>re(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eU={kernelName:Mc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Dt(n,Tn(kt(Lt(1),we(Nt(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nU={kernelName:Bc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Tn(yt(Lt(1),we(Nt(e,"float32"))));return Dt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sU={kernelName:Uc,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{const l=yt(we(e),we(s));let u=H(n,Dt(s,l));const h=un(e.shape,a);return h.length>0&&(u=Et(u,h)),q(u,e.shape)},b:()=>{const l=yt(we(e),we(s));let u=Ie(H(n,Dt(e,l)));const h=un(s.shape,a);return h.length>0&&(u=Et(u,h)),q(u,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aU={kernelName:Vc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Dt(n,yt(we(Nt(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rU={kernelName:Pc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Dt(n,kt(Lt(1),we(Nt(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iU(n,t,e,s,a,r){const i=F(n,"dy","avgPool3dGrad"),l=F(t,"input","avgPool3dGrad");let u=i,h=l,f=!1;l.rank===4&&(f=!0,u=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=q(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),O(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),O(h.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),qn("avgPool3dGrad",a,r);const p={dy:u,input:h},m={filterSize:e,strides:s,pad:a,dimRoundingMode:r},y=G.runKernel(X0,p,m);return f?q(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const oU=U({avgPool3dGrad_:iU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lU={kernelName:xp,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:a,strides:r,pad:i,dimRoundingMode:l}=e;return{x:()=>oU(n,s,a,r,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(n,t,e,s,a){const r=F(n,"dy","avgPoolGrad"),i=F(t,"input","avgPoolGrad");O(i.rank===r.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${r.rank})`);let l=i,u=r,h=!1;i.rank===3&&(h=!0,l=q(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=q(r,[1,r.shape[0],r.shape[1],r.shape[2]])),O(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),O(l.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${l.rank}.`);const f={dy:u,input:l},p={filterSize:e,strides:s,pad:a},m=G.runKernel(j0,f,p);return h?q(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const cU=U({avgPoolGrad_:uU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hU={kernelName:bp,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:a,strides:r,pad:i}=e;return{x:()=>cU(n,s,a,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dU={kernelName:vp,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,a]=t,{transposeA:r,transposeB:i}=e;return!r&&!i?{a:()=>Yt(n,a,!1,!0),b:()=>Yt(s,n,!0,!1)}:!r&&i?{a:()=>Yt(n,a,!1,!1),b:()=>Yt(n,s,!0,!1)}:r&&!i?{a:()=>Yt(a,n,!1,!0),b:()=>Yt(s,n,!1,!1)}:{a:()=>Yt(a,n,!0,!0),b:()=>Yt(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fU={kernelName:wp,gradFunc:(n,t,e)=>{const{blockShape:s,crops:a}=e;return{x:()=>Im(n,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pU={kernelName:DF,gradFunc:(n,t,e)=>{const s=e,a=s.inputShape,r=s.shape,i=Array.from(r);for(let u=a.length-1;u>=0;u--)if(a[u]===r[u])i[u]=1;else if(a[u]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${r}].`);const l=[];for(let u=0;u<i.length;u++)i[u]>1&&l.push(u);return{x:()=>Et(n,l,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mU={kernelName:Wc,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gU={kernelName:Gc,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yU={kernelName:Hc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:a,clipValueMax:r}=e;return{x:()=>On(qa(Ni(s,a),ko(s,r)),n,re(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bU={kernelName:Np,inputsToSave:["x"],gradFunc:yI.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xU={kernelName:Cp,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(u=>u.shape),{axis:a}=e,r=jt(a,t[0].shape)[0],i=s.map(u=>u[r]);return hs(n,i,r).map(u=>()=>u)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vU={kernelName:Tp,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,a]=t,{dilations:r,strides:i,pad:l,dataFormat:u}=e;return O(ci(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>n1(s.shape,n,a,i,l,u),filter:()=>A1(s,n,a.shape,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wU={kernelName:$p,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,a]=t,{strides:r,pad:i,dataFormat:l,dimRoundingMode:u}=e;return{dy:()=>hi(n,a,r,i,l,1,u),filter:()=>A1(n,s,a.shape,r,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SU(n,t,e,s,a){let r=n;n.rank===4&&(r=q(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=t;i.rank===4&&(i=q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),O(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),O(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),O(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),O(r.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${e[3]}.`),O(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`);const l={x:r,dy:i},u={strides:s,pad:a,filterShape:e};return G.runKernel(J0,l,u)}const NU=U({conv3DBackpropFilter_:SU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CU={kernelName:kp,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:a,pad:r}=e;O(ci(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,l]=t;return{x:()=>B$(i.shape,n,l,a,r),filter:()=>NU(i,n,l.shape,a,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TU={kernelName:qc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(Ie(v1(Nt(e,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $U={kernelName:jc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(w1(Nt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kU={kernelName:Ip,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:a,exclusive:r,reverse:i}=e;return{x:()=>{const l=_e([a],s.rank);let u=r1(n,a,r,!i);return l!=null&&(u=ae(u,l)),u}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IU={kernelName:Ep,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:a,pad:r,dimRoundingMode:i}=e,l=s??[1,1];O(ci(l),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${l}'`);const[u,h]=t;return O(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),O(h.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${h.rank}.`),O(u.shape[3]===h.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),O($n(a,l),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${l}'.`),qn("depthwiseConv2d",r,i),{x:()=>vk(u.shape,n,h,a,r,l,i),filter:()=>xk(u,n,h.shape,a,r,l,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EU={kernelName:Ap,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,a]=t,r={x:s,filter:a,dy:n},i={x:s,filter:a,dy:n};return{x:()=>G.runKernel(Hb,r,e),filter:()=>G.runKernel(qb,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AU={kernelName:Kc,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>G.runKernel(ux,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RU={kernelName:Yc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=H(ps(Ie(we(e))),2/Math.sqrt(Math.PI));return{x:()=>H(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DU={kernelName:Zc,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OU={kernelName:Dp,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>q(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _U={kernelName:Qc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,ps(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FU={kernelName:Jc,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LU={kernelName:th,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{const l=Dt(n,Nt(s,"float32")),u=un(e.shape,a);return u.length>0?q(Et(l,u),e.shape):l},b:()=>{let l=H(n,Nt(e,"float32"));const u=un(s.shape,a);u.length>0&&(l=q(Et(l,u),s.shape));const h=we(s);return Ie(Dt(l,Nt(h,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zU={kernelName:Op,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[a,r,i,l]=t,u=l??Lt(1),h=un(r.shape,a.shape),f=[];if(r.rank===1){for(let T=0;T<a.shape.length-1;++T)f.push(a.shape[T]);f.push(1)}const p=kt(a,r),m=H(n,u),y=y1(yt(i,Lt(s))),b=H(H(H(y,y),y),Lt(-.5));return{x:()=>r.rank===1?q(H(H(n,Js(q(y,[1,1,1,r.shape[0]]),f)),u),a.shape):q(H(H(n,y),u),a.shape),mean:()=>{let T=H(H(y,Lt(-1)),m);return r.rank===1&&(T=Et(T,h)),q(T,r.shape)},variance:()=>{let T=H(H(b,p),m);return r.rank===1&&(T=Et(T,h)),q(T,r.shape)},scale:()=>{const T=H(p,y);let I=H(n,T);return r.rank===1&&(I=Et(I,h)),q(I,r.shape)},offset:()=>{let T=n;return r.rank===1&&(T=Et(T,h)),q(T,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MU={kernelName:_p,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,a]=t,{axis:r,batchDims:i}=e,l=jt(r,s.shape)[0],u=(h,f,p)=>()=>{const m=h.shape,y=f.size,b=m.slice(0,l),w=b.length,v=m.slice(r,m.length).slice(1),S=v.length,C=pT(0,w),$=pT(w+1,w+1+S),T=mT([b,[y],v]),I=q(p,T),D=q(f,[y]),z=mT([[w],C,$]),B=ae(I,z);let R=k1(B,D,h.shape[l]);const _=Si(z);return R=ae(R,_),R};if(i===1){const h=s.shape[0],f=s.split(h,0);return{x:()=>ms(f.map((y,b)=>u(y,a.slice(b,1),n.slice(b,1))())).reshape(s.shape),indices:()=>a}}else return{x:u(s,a,n),indices:()=>a}}};function pT(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function mT(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BU={kernelName:eh,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>re(e),b:()=>re(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VU={kernelName:nh,gradFunc:n=>({x:()=>Nt(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PU={kernelName:sh,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UU={kernelName:ah,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WU={kernelName:rh,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GU={kernelName:Lp,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:a}=e,r=xs(s,0);return{x:()=>On(r,n,H(n,a))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HU={kernelName:oh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Dt(n,yt(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qU={kernelName:ih,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Dt(n,Nt(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jU={kernelName:_F,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:a}=e;return{logits:()=>{const i=ps(s);return kt(n,H(Et(n,a,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XU(n,t,e,s=5,a=1,r=1,i=.5){const l={x:n,y:t,dy:e},u={depthRadius:s,bias:a,alpha:r,beta:i};return G.runKernel(yx,l,u)}const KU=U({localResponseNormalizationBackprop_:XU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YU={kernelName:Up,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,a]=t,{depthRadius:r,bias:i,alpha:l,beta:u}=e;return{x:()=>KU(s,a,n,r,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bI(n,t,e,s){return t.rank<e.rank&&(t=q(t,qe(t.shape,s))),n.rank<e.rank&&(n=q(n,qe(n.shape,s))),{x:()=>H(n,Nt(Ta(e,t),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gT={kernelName:Wp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:a}=s,r=t[0],i=t[1],l=jt(a,r.shape),u=bI(n,i,r,l);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZU={kernelName:lh,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>H(n,Nt(Ni(e,s),"float32")),b:()=>H(n,Nt(Nc(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QU(n,t,e,s,a,r,i){const l=F(n,"dy","maxPool3dGrad"),u=F(t,"input","maxPool3dGrad"),h=F(e,"output","maxPool3dGrad");let f=l,p=u,m=h,y=!1;u.rank===4&&(y=!0,f=q(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=q(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),m=q(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),O(f.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${f.rank}.`),O(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),O(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),qn("maxPool3dGrad",r,i);const b={dy:f,input:p,output:m},w={filterSize:s,strides:a,pad:r,dimRoundingMode:i},v=G.runKernel(xx,b,w);return y?q(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}const JU=U({maxPool3dGrad_:QU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tW={kernelName:Hp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,a]=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=e;return{x:()=>JU(n,s,a,r,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eW(n,t,e,s,a,r,i){const l=F(n,"dy","maxPoolGrad"),u=F(t,"input","maxPoolGrad"),h=F(e,"output","maxPoolGrad");O(u.rank===l.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${l.rank})`),O(l.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),O(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),qn("maxPoolGrad",r,i);const f={dy:l,input:u,output:h},p={filterSize:s,strides:a,pad:r,dimRoundingMode:i};return G.runKernel(bx,f,p)}const nW=U({maxPoolGrad_:eW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sW={kernelName:Gp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,a]=t,{filterSize:r,strides:i,pad:l}=e;return{x:()=>nW(n,s,a,r,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aW={kernelName:qp,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:a}=e,r=jt(a,s.shape),l=yn(s.shape,r)[1],u=ht(l);return{x:()=>{const f=s.shape.slice();r.forEach(y=>{f[y]=1});const p=q(n,f);return Dt(H(p,es(s.shape,"float32")),u)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rW={kernelName:jp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:a}=s,[r,i]=t,l=jt(a,r.shape),u=bI(n,i,r,l);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iW={kernelName:uh,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>H(n,Nt(ko(e,s),"float32")),b:()=>H(n,Nt(xs(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oW={kernelName:Xp,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:a}=e,r=a.map(i=>i[0]);return{x:()=>se(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lW={kernelName:ch,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{const l=un(e.shape,a);return l.length>0?q(Et(n,l),e.shape):n},b:()=>{const l=H(n,Ie(zh(Dt(e,s)))),u=un(s.shape,a);return u.length>0?q(Et(l,u),s.shape):l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uW={kernelName:hh,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{const l=H(n,Nt(s,"float32")),u=un(e.shape,a);return u.length>0?q(Et(l,u),e.shape):l},b:()=>{const l=H(n,Nt(e,"float32")),u=un(s.shape,a);return u.length>0?q(Et(l,u),s.shape):l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cW={kernelName:Kp,gradFunc:n=>({x:()=>Ie(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hW={kernelName:Qp,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>nn(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dW={kernelName:Zp,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fW={kernelName:Jp,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return oa(n,s).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yT={kernelName:tm,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:a}=e,r=a.map(i=>i[0]);return{x:()=>se(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pW={kernelName:dh,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,a]=t,r=e,i=s,l=Pt(r.shape,i.shape);return{a:()=>{const f=Nt(i,"float32");let p=H(n,H(f,wr(r,kt(f,Lt(1)))));const m=un(r.shape,l);return m.length>0&&(p=Et(p,m)),q(p,r.shape)},b:()=>{const f=xs(r,0),p=On(f,As(r),re(r));let m=H(n,H(a,p));const y=un(i.shape,l);return y.length>0&&(m=Et(m,y)),q(m,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mW={kernelName:em,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,a=xs(e,0);return{x:()=>On(a,n,H(n,s)),alpha:()=>{let r=On(a,re(n),H(n,e));const i=un(s.shape,n.shape);return i.length>0&&(r=Et(r,i)),q(r,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gW(n,t,e){const s=n.shape.slice();s[e]=1;const a=q(t,s),r=jf(n,e,!0,!1),i=jf(n,e,!0,!0),l=H(r,i);return H(a,l)}function yW(n,t,e){const s=n.shape.length,a=s-e.length,r=_e(e,s);let i=n;r!=null&&(i=ae(n,r));const l=i.shape.slice(),h=l.splice(s-e.length,e.length).reduce((m,y)=>m*y,1);l.push(h);const f=i.reshape(l);let p=gW(f,t,a);if(p=p.reshape(i.shape),r!=null){const m=Si(r);p=ae(p,m)}return p}const bW={kernelName:nm,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:a}=e;let r=[];return a==null?r=s.shape.map((i,l)=>l):typeof a=="number"?r=[a]:r=a,{x:()=>yW(s,n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xW={kernelName:Xc,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{const l=Dt(n,Nt(s,"float32")),u=un(e.shape,a);return u.length>0?q(Et(l,u),e.shape):l},b:()=>{let l=H(n,Nt(e,"float32"));const u=un(s.shape,a);u.length>0&&(l=q(Et(l,u),s.shape));const h=we(s);return Ie(Dt(l,Nt(h,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vW={kernelName:fh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Dt(n,Ie(we(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wW={kernelName:mh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=H(ko(e,6),Zl(e));return{x:()=>H(n,Nt(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SW={kernelName:ph,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,Nt(Zl(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NW={kernelName:sm,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>q(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CW={kernelName:rm,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,a={dy:n,images:s};return{images:()=>G.runKernel(Rx,a,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TW={kernelName:am,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,a={dy:n,images:s};return{images:()=>G.runKernel(Ax,a,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $W={kernelName:im,gradFunc:(n,t,e)=>{const{dims:s}=e,a=jt(s,n.shape);return{x:()=>ia(n,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kW={kernelName:gh,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IW={kernelName:yh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ie(Dt(n,H(wr(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EW={kernelName:om,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>Nt(re(e),"float32"),t:()=>H(n,Nt(e,n.dtype)),e:()=>H(n,Nt(Tm(e),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AW={kernelName:bh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=xs(e,Lt(0)),a=Lt(Um),r=Lt(Wm),i=H(n,r),l=H(H(n,a),ps(Nt(e,"float32")));return On(s,i,l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RW={kernelName:Sh,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,H(e,kt(Lt(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DW={kernelName:wh,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OW={kernelName:xh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(vm(Nt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _W={kernelName:vh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(a1(Nt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FW={kernelName:lm,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:a,size:r}=e,i=s.shape,[l,u]=Vm(s,a,r),h=[];for(let f=0;f<n.rank;f++)h.push([l[f],i[f]-l[f]-u[f]]);return{x:()=>Ci(n,h)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LW={kernelName:dm,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:a}=e,r=!0,i=H(n,s);return{logits:()=>kt(i,H(Et(i,[a],r),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zW={kernelName:Nh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,Ua(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bT={kernelName:cm,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:a}=e;return{x:()=>xm(n,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xT={kernelName:hm,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>He(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MW={kernelName:Ch,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Dt(n,H(Tn(Nt(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BW={kernelName:Vx,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,H(Nt(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VW={kernelName:Th,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Lt(2);return{a:()=>H(n,H(a,kt(e,s))),b:()=>H(n,H(a,kt(s,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PW={kernelName:Ah,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UW={kernelName:$h,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Pt(e.shape,s.shape);return{a:()=>{let l=n;const u=un(e.shape,a);return u.length>0&&(l=Et(l,u)),q(l,e.shape)},b:()=>{let l=n;const u=un(s.shape,a);return u.length>0&&(l=Et(l,u)),q(Ie(l),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WW={kernelName:um,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,a=s.shape.slice(),{axis:r}=e;jt(r,s.shape).forEach(h=>{a[h]=1});const l=q(n,a),u=H(l,es(s.shape,"float32"));return{x:()=>u}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GW={kernelName:kh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Dt(n,we(vm(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HW={kernelName:Ih,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(kt(Lt(1),we(e)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qW={kernelName:Eh,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:a}=e;return{x:()=>{let i=re(s);if(s.rank===1)for(let l=0;l<a[0];++l)i=yt(i,se(n,[l*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let l=0;l<a[0];++l)for(let u=0;u<a[1];++u)i=yt(i,se(n,[l*s.shape[0],u*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let l=0;l<a[0];++l)for(let u=0;u<a[1];++u)for(let h=0;h<a[2];++h)i=yt(i,se(n,[l*s.shape[0],u*s.shape[1],h*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let l=0;l<a[0];++l)for(let u=0;u<a[1];++u)for(let h=0;h<a[2];++h)for(let f=0;f<a[3];++f)i=yt(i,se(n,[l*s.shape[0],u*s.shape[1],h*s.shape[2],f*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jW={kernelName:kl,gradFunc:(n,t,e)=>{const s=e,{perm:a}=s,r=Si(a);return{x:()=>ae(n,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XW={kernelName:pm,gradFunc:(n,t,e)=>{const s=e,{axis:a}=s;return{value:()=>ms(n,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KW={kernelName:mm,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>YW(n,e)}}};function YW(n,t){const e=kr(t,re(t)),s=Mh(n,e);let a=Ni(t,Lt(0,"int32"));const r=s.rank-a.rank;for(let l=0;l<r;++l)a=Un(a,l+1);a=qa(a,es(s.shape,"bool"));const i=re(s);return On(a,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZW={kernelName:gm,gradFunc:n=>({x:()=>re(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QW=[yI,KP,YP,ZP,QP,JP,tU,eU,nU,sU,aU,rU,lU,hU,dU,fU,pU,mU,gU,yU,bU,xU,wU,vU,CU,TU,$U,kU,IU,EU,xW,AU,RU,DU,OU,_U,LU,FU,zU,MU,BU,VU,PU,UU,WU,GU,HU,qU,jU,YU,gT,gT,ZU,tW,sW,aW,rW,iW,oW,lW,uW,cW,hW,dW,fW,yT,yT,pW,mW,bW,vW,wW,SW,NW,CW,TW,$W,kW,IW,EW,AW,RW,DW,OW,_W,FW,LW,zW,bT,bT,xT,xT,MW,VW,BW,PW,UW,WW,GW,HW,qW,jW,XW,KW,ZW];for(const n of QW)LF(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.abs=function(){return this.throwIfDisposed(),en(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.acos=function(){return this.throwIfDisposed(),v$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.acosh=function(){return this.throwIfDisposed(),w$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.add=function(n){return this.throwIfDisposed(),yt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.all=function(n,t){return this.throwIfDisposed(),Jx(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.any=function(n,t){return this.throwIfDisposed(),qf(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.argMax=function(n){return this.throwIfDisposed(),Fl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.argMin=function(n){return this.throwIfDisposed(),S$(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asScalar=function(){return this.throwIfDisposed(),O(this.size===1,()=>"The array must have only 1 element."),q(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asType=function(n){return this.throwIfDisposed(),Nt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as1D=function(){return this.throwIfDisposed(),q(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as2D=function(n,t){return this.throwIfDisposed(),q(this,[n,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),q(this,[n,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),q(this,[n,t,e,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as5D=function(n,t,e,s,a){return this.throwIfDisposed(),q(this,[n,t,e,s,a])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asin=function(){return this.throwIfDisposed(),N$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asinh=function(){return this.throwIfDisposed(),C$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.atan=function(){return this.throwIfDisposed(),T$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.atan2=function(n){return this.throwIfDisposed(),$$(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.atanh=function(){return this.throwIfDisposed(),k$(this)};dt().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),bm(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),xm(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.batchNorm=function(n,t,e,s,a){return this.throwIfDisposed(),Oh(this,n,t,e,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Al(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cast=function(n){return this.throwIfDisposed(),Nt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.ceil=function(){return this.throwIfDisposed(),O$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),fs(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof De&&(n=[n]),He([this,...n],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.conv1d=function(n,t,e,s,a,r){return this.throwIfDisposed(),e1(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.conv2dTranspose=function(n,t,e,s,a){return this.throwIfDisposed(),s1(this,n,t,e,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.conv2d=function(n,t,e,s,a,r){return this.throwIfDisposed(),hi(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cos=function(){return this.throwIfDisposed(),vm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cosh=function(){return this.throwIfDisposed(),a1(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),jf(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),r1(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),P$(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.depthwiseConv2d=function(n,t,e,s,a,r){return this.throwIfDisposed(),_h(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.dilation2d=function(n,t,e,s,a){return this.throwIfDisposed(),U$(this,n,t,e,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.divNoNan=function(n){return this.throwIfDisposed(),W$(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.div=function(n){return this.throwIfDisposed(),Dt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.dot=function(n){return this.throwIfDisposed(),G$(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.elu=function(){return this.throwIfDisposed(),Fh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.equal=function(n){return this.throwIfDisposed(),Ta(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.erf=function(){return this.throwIfDisposed(),i1(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),j$(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.exp=function(){return this.throwIfDisposed(),ps(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.expandDims=function(n){return this.throwIfDisposed(),Un(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.expm1=function(){return this.throwIfDisposed(),X$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.fft=function(){return this.throwIfDisposed(),_m(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.flatten=function(){return this.throwIfDisposed(),q(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.floor=function(){return this.throwIfDisposed(),zh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.floorDiv=function(n){return this.throwIfDisposed(),Qx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.gather=function(n,t,e){return this.throwIfDisposed(),Mh(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Ni(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.greater=function(n){return this.throwIfDisposed(),xs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.ifft=function(){return this.throwIfDisposed(),$c(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.irfft=function(){return this.throwIfDisposed(),N1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.isFinite=function(){return this.throwIfDisposed(),K$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.isInf=function(){return this.throwIfDisposed(),Y$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.isNaN=function(){return this.throwIfDisposed(),Z$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Sm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.lessEqual=function(n){return this.throwIfDisposed(),ko(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.less=function(n){return this.throwIfDisposed(),Nc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),Q$(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logSigmoid=function(){return this.throwIfDisposed(),J$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logSoftmax=function(n){return this.throwIfDisposed(),u1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),Cm(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.log=function(){return this.throwIfDisposed(),As(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.log1p=function(){return this.throwIfDisposed(),Nm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalAnd=function(n){return this.throwIfDisposed(),qa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalNot=function(){return this.throwIfDisposed(),Tm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalOr=function(n){return this.throwIfDisposed(),c1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalXor=function(n){return this.throwIfDisposed(),tk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),Yt(this,n,t,e)};dt().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),$m(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.max=function(n,t){return this.throwIfDisposed(),aa(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.maximum=function(n){return this.throwIfDisposed(),kr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mean=function(n,t){return this.throwIfDisposed(),ze(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.min=function(n,t){return this.throwIfDisposed(),Sc(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.minimum=function(n){return this.throwIfDisposed(),xo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),nk(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mod=function(n){return this.throwIfDisposed(),sk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mul=function(n){return this.throwIfDisposed(),H(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.neg=function(){return this.throwIfDisposed(),Ie(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.norm=function(n,t,e){return this.throwIfDisposed(),Lh(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.notEqual=function(n){return this.throwIfDisposed(),zl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),d1(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.onesLike=function(){return this.throwIfDisposed(),Rs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.pad=function(n,t){return this.throwIfDisposed(),Ci(this,n,t)};dt().prototype.pool=function(n,t,e,s,a,r){return this.throwIfDisposed(),ak(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.pow=function(n){return this.throwIfDisposed(),wr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.prelu=function(n){return this.throwIfDisposed(),Em(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.prod=function(n,t){return this.throwIfDisposed(),rk(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reciprocal=function(){return this.throwIfDisposed(),ik(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.relu=function(){return this.throwIfDisposed(),Ka(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.relu6=function(){return this.throwIfDisposed(),m1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reshapeAs=function(n){return this.throwIfDisposed(),q(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reshape=function(n){return this.throwIfDisposed(),q(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),Nk(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),Ck(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reverse=function(n){return this.throwIfDisposed(),ia(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.rfft=function(){return this.throwIfDisposed(),Fm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.round=function(){return this.throwIfDisposed(),g1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.rsqrt=function(){return this.throwIfDisposed(),y1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.selu=function(){return this.throwIfDisposed(),b1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.separableConv2d=function(n,t,e,s,a,r){return this.throwIfDisposed(),x1(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sigmoid=function(){return this.throwIfDisposed(),Ua(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sign=function(){return this.throwIfDisposed(),ok(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sin=function(){return this.throwIfDisposed(),v1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sinh=function(){return this.throwIfDisposed(),w1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.slice=function(n,t){return this.throwIfDisposed(),se(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.softmax=function(n){return this.throwIfDisposed(),Om(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.softplus=function(){return this.throwIfDisposed(),Yl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),Im(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.split=function(n,t){return this.throwIfDisposed(),hs(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sqrt=function(){return this.throwIfDisposed(),Tn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.square=function(){return this.throwIfDisposed(),we(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.squaredDifference=function(n){return this.throwIfDisposed(),C1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.squeeze=function(n){return this.throwIfDisposed(),Eo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof De?[this,n]:[this,...n];return ms(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.step=function(n){return this.throwIfDisposed(),Zl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.stridedSlice=function(n,t,e,s,a,r,i,l){return this.throwIfDisposed(),lk(this,n,t,e,s,a,r,i,l)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sub=function(n){return this.throwIfDisposed(),kt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sum=function(n,t){return this.throwIfDisposed(),Et(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.tan=function(){return this.throwIfDisposed(),uk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.tanh=function(){return this.throwIfDisposed(),bo(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.tile=function(n){return this.throwIfDisposed(),Js(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.toBool=function(){return this.throwIfDisposed(),Nt(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.toFloat=function(){return this.throwIfDisposed(),Nt(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.toInt=function(){return this.throwIfDisposed(),Nt(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.topk=function(n,t){return this.throwIfDisposed(),dk(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.transpose=function(n){return this.throwIfDisposed(),ae(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.unique=function(n){return this.throwIfDisposed(),fk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),k1(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.unstack=function(n){return this.throwIfDisposed(),oa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.where=function(n,t){return this.throwIfDisposed(),On(n,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.zerosLike=function(){return this.throwIfDisposed(),re(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class za extends Error{constructor(t){super(t),Object.setPrototypeOf(this,za.prototype)}}class ea extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ea.prototype)}}class X extends Error{constructor(t){super(t),Object.setPrototypeOf(this,X.prototype)}}class Wt extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Wt.prototype)}}class uv extends Error{constructor(t){super(t),Object.setPrototypeOf(this,uv.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class xI{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wo(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}else{const e=new Array(t);return e.fill(n),e}}function Ma(n,t){if(!n)throw new uv(t)}function vT(n,t){let e=0;for(const s of n)s===t&&e++;return e}function Jn(n){return n.length===1?n[0]:n}function pe(n){return Array.isArray(n)?n:[n]}function mr(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function so(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let js={};function cv(n){if(n==null)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function d0(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(t=>d0(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[e]=s.value:d0(s))}}}function Uh(n,t={},e={},s="object",a=!1){if(typeof n=="string"){const r=n;let i;if(r in e)i=e[r];else if(r in js)i=js[r];else if(i=t[r],i==null)throw new X(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const r=n;if(r.className==null||r.config==null)throw new X(`${s}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const i=r.className;let l,u;if(i in e?[l,u]=e[i]:i in js?[l,u]=js.className:i in t&&([l,u]=t[i]),l==null)throw new X(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){const h={};for(const y of Object.keys(js))h[y]=js[y];for(const y of Object.keys(e))h[y]=e[y];const f=r.config;f.customObjects=h;const p=Object.assign({},js);for(const y of Object.keys(e))js[y]=e[y];d0(r.config);const m=u(l,r.config,e,a);return js=Object.assign({},p),m}else{const h=Object.assign({},js);for(const p of Object.keys(e))js[p]=e[p];const f=new l(r.config);return js=Object.assign({},h),f}}}function JW(n,t){return n<t?-1:n>t?1:0}function mf(n,t){return-1*JW(n,t)}function ri(n){if(n==null)return n;const t=[];for(const e of n)t.indexOf(e)===-1&&t.push(e);return t}function tG(n){if(n==null)throw new X(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function Ro(n,t,e){if(e!=null&&n.indexOf(e)<0)throw new X(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function hv(n,t,e=0,s=1/0){return Ma(e>=0),Ma(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(a=>typeof a===t)}function mn(n,t){Array.isArray(n)?(O(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>mn(e,`element ${s+1} of ${t}`))):O(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${vI(n)}.`)}function vI(n){return n===null?"null":Array.isArray(n)?"["+n.map(t=>vI(t)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function eG(n,t,e){let s=e!=null?e():Qn(),a;return(...i)=>{const l=e!=null?e():Qn();return l-s<t||(s=l,a=n(...i)),a}}function wI(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let nG=0;function SI(){return nG++}const gf={};function Gm(n=""){return n in gf||(gf[n]=0),gf[n]+=1,n+gf[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const sG=["channelsFirst","channelsLast"],aG=["nearest","bilinear"],rG=["valid","same","causal"],iG=["max","avg"],oG=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const vl=new Map;function Xe(n){Ro(sG,"DataFormat",n)}function lG(n){Ro(aG,"InterpolationFormat",n)}function Os(n){Ro(rG,"PaddingMode",n)}function NI(n){Ro(iG,"PoolMode",n)}const xc=[],wT="/";function lo(n,t){xc.push(n);try{const e=t();return xc.pop(),e}catch(e){throw xc.pop(),e}}function uG(){return xc.length===0?"":xc.join(wT)+wT}function CI(n){if(!$I(n))throw new Error("Not a valid tensor name: '"+n+"'");return uG()+n}function TI(n){if(!$I(n))throw new Error("Not a valid tensor name: '"+n+"'");vl.has(n)||vl.set(n,0);const t=vl.get(n);if(vl.set(n,vl.get(n)+1),t>0){const e=`${n}_${t}`;return vl.set(e,1),e}else return n}const cG=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function $I(n){return!!n.match(cG)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hG(n){return n===parseInt(n.toString(),10)}function ii(n,t,e){t==null&&(t=0),e==null&&(e=n.length);let s=1;for(let a=t;a<e;++a)s*=n[a];return s}function Bl(n){if(n.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s<t&&(t=s)}return t}function di(n){if(n.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s>t&&(t=s)}return t}function $a(n,t){if(t<n)throw new X(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Ib;function sn(){return Ib==null&&(Ib=a$().epsilon()),Ib}function ka(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ga(n,t){return Nt(n,t)}function Wh(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),q(n,e)}function dG(n,t){return nt(()=>{if(n.shape.length!==2)throw new X(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const e=Wh(n,1);return f0(e,[1,t,1])})}function fG(n){const t=[ii(n.shape)];return q(n,t)}function pG(n){if(n.rank<=1)throw new X(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],ii(n.shape,1)];return q(n,t)}function uo(n,t,e){return nt(()=>{switch(n.rank){case 1:return Rm(n,t,e);case 2:return S1(n,[t,0],[e,n.shape[1]]);case 3:return Dm(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return Tc(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return se(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return se(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new X(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Eb(n,t,e){return nt(()=>{switch(n.rank){case 1:return Rm(n,t,e);case 2:return S1(n,[0,t],[n.shape[0],e]);case 3:return Dm(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return Tc(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function yf(n,t,e,s){return nt(()=>{switch(n.rank){case 1:return Rm(n,t,e);case 2:switch(s){case 1:return uo(n,t,e);case 2:return Eb(n,t,e);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return uo(n,t,e);case 2:return Dm(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return Eb(n,t,e);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return uo(n,t,e);case 2:return Tc(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return Tc(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return Eb(n,t,e);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function dv(n,t=-1){let e;return t<0&&(e=n[0].rank,e!==0?t=e:t=0),t===n[0].rank&&(t=-1),He(n,t)}function ST(n,t){switch(n.rank){case 1:return _$([n,t]);case 2:return F$([n,t],0);case 3:return L$([n,t],0);case 4:return z$([n,t],0);default:throw new X(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function f0(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new X(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return Js(n,t)}function Hm(n,t=0,e=1,s,a){return p1(n,t,e,s,a)}function Ha(n,t,e,s){if(n.rank<2||t.rank<2)throw new Wt(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3){const a=n.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(a!==r)throw new Wt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`)}if(n.rank===2&&t.rank===2)return l0({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?p0(n.rank,s,ka()):null,activation:e});{const a=n.shape.slice(),r=a.pop();n=q(n,[-1,r]);const i=t.shape.slice(),l=i.pop(),u=i.pop(),h=[...i,l],f=Array.from({length:t.rank},(b,w)=>w===0?t.rank-2:w<=t.rank-2?w-1:w);t=q(ae(t,f),[u,-1]);const p=[...a,...h];return q(l0({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?p0(n.rank,s,ka()):null,activation:e}),p)}}function kI(n,t,e){return nt(()=>(Array.isArray(t)?t=Gn(t,"int32"):t=Nt(t,"int32"),Mh(n,t,e)))}function Gh(n){return H(n,n)}function p0(n,t,e){const s=t.shape;if(t.rank!==1&&t.rank!==n)throw new X(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(n===5){if(e==="channelsFirst")return s.length===1?q(t,[1,s[0],1,1,1]):q(t,[1,s[3],s[0],s[1],s[2]]);if(e==="channelsLast")return s.length===1?q(t,[1,1,1,1,s[0]]):q(t,[1].concat(s))}else if(n===4){if(e==="channelsFirst")return s.length===1?q(t,[1,s[0],1,1]):q(t,[1,s[2],s[0],s[1]]);if(e==="channelsLast")return s.length===1?q(t,[1,1,1,s[0]]):q(t,[1].concat(s))}else if(n===3){if(e==="channelsFirst")return s.length===1?q(t,[1,s[0],1]):q(t,[1,s[1],s[0]]);if(e==="channelsLast")return s.length===1?q(t,[1,1,s[0]]):q(t,[1].concat(s))}else if(n<3)return t;throw new X(`Unsupported input rank by biasAdd: ${t.rank}`)}function Aa(n,t,e){return nt(()=>(e==null&&(e=ka()),Xe(e),yt(n,p0(n.rank,t,e))))}function mG(n,t=1){if(t!==1)throw new Wt(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Fh(n)}function gG(n){return nt(()=>Dt(n,yt(en(n),1)))}function II(n,t,e,s){return nt(()=>gk(n,t,e,s))}function yG(n){return nt(()=>{const t=yt(.5,H(.2,n));return fs(t,0,1)})}function Hh(n,t,e=!1){return e?n():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const bG=["fanIn","fanOut","fanAvg"],xG=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vG(n){Ro(bG,"FanMode",n)}function wG(n){Ro(xG,"Distribution",n)}class ua extends Jl{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class EI extends ua{apply(t,e){return nn(t,e)}}EI.className="Zeros";xt(EI);class fv extends ua{apply(t,e){return es(t,e)}}fv.className="Ones";xt(fv);class AI extends ua{constructor(t){if(super(),typeof t!="object")throw new X(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new X(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return nt(()=>H(Lt(this.value),es(t,e)))}getConfig(){return{value:this.value}}}AI.className="Constant";xt(AI);class RI extends ua{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Io(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}RI.className="RandomUniform";xt(RI);class DI extends ua{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Wt(`randomNormal does not support dType ${e}.`);return Hm(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}DI.className="RandomNormal";xt(DI);class OI extends ua{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Wt(`truncatedNormal does not support dType ${e}.`);return $1(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}OI.className="TruncatedNormal";xt(OI);class _I extends ua{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return nt(()=>{if(t.length!==2||t[0]!==t[1])throw new X("Identity matrix initializer can only be used for 2D square matrices.");return H(this.gain,l1(t[0]))})}getConfig(){return{gain:this.gain}}}_I.className="Identity";xt(_I);function SG(n,t="channelsLast"){let e,s;if(Xe(t),n.length===2)e=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(t==="channelsFirst"){const a=ii(n,2);e=n[1]*a,s=n[0]*a}else if(t==="channelsLast"){const a=ii(n,0,n.length-2);e=n[n.length-2]*a,s=n[n.length-1]*a}}else{const a=ii(n);e=Math.sqrt(a),s=Math.sqrt(a)}return[e,s]}class gs extends ua{constructor(t){if(super(),t.scale<0)throw new X(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,vG(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,wG(this.distribution),this.seed=t.seed}apply(t,e){const s=SG(t),a=s[0],r=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,a):this.mode==="fanOut"?i/=Math.max(1,r):i/=Math.max(1,(a+r)/2),this.distribution==="normal"){const l=Math.sqrt(i);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Wt(`${this.getClassName()} does not support dType ${e}.`);return $1(t,0,l,e,this.seed)}else{const l=Math.sqrt(3*i);return Io(t,-l,l,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}gs.className="VarianceScaling";xt(gs);class pv extends gs{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return gs.className}}pv.className="GlorotUniform";xt(pv);class mv extends gs{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return gs.className}}mv.className="GlorotNormal";xt(mv);class gv extends gs{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return gs.className}}gv.className="HeNormal";xt(gv);class yv extends gs{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return gs.className}}yv.className="HeUniform";xt(yv);class bv extends gs{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return gs.className}}bv.className="LeCunNormal";xt(bv);class xv extends gs{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return gs.className}}xv.className="LeCunUniform";xt(xv);class FI extends ua{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return nt(()=>{if(t.length<2)throw new Wt("Shape must be at least 2D.");if(e!=="int32"&&e!=="float32"&&e!==void 0)throw new TypeError(`Unsupported data type ${e}.`);e=e;const s=ht(t.slice(0,-1)),a=t[t.length-1],r=s*a;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const i=[Math.max(a,s),Math.min(a,s)],l=Hm(i,0,1,e,this.seed),u=Tk.qr(l,!1);let h=u[0];const p=u[1].flatten().stridedSlice([0],[Math.min(a,s)*Math.min(a,s)],[Math.min(a,s)+1]);return h=H(h,p.sign()),s<a&&(h=h.transpose()),H(Lt(this.gain),h.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}}FI.className="Orthogonal";xt(FI);const NT={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function CT(n,t={}){return Uh(n,Qs.getMap().classNameMap,t,"initializer")}function Oe(n){return cv(n)}function Ee(n){if(typeof n=="string"){const t=n in NT?NT[n]:n;if(t==="GlorotNormal")return new mv;if(t==="GlorotUniform")return new pv;if(t==="HeNormal")return new gv;if(t==="HeUniform")return new yv;if(t==="LeCunNormal")return new bv;if(t==="LeCunUniform")return new xv;{const e={};return e.className=t,e.config={},CT(e)}}else return n instanceof ua?n:CT(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function m0(n){return Array.isArray(n)&&Array.isArray(n[0])}function Xf(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Vt(n){let t;if(Array.isArray(n)){if(n.length!==1)throw new X(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function ue(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new X(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Kf(n){let t=0;for(const e of n)e.shape.length===0?t+=1:t+=e.shape.reduce((s,a)=>s*a);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const TT="Variable";class NG{constructor(t,e="float32",s=TT,a=!0,r=null){this.dtype=e??"float32",this.shape=t.shape,this.id=SI(),s=s??TT,this.originalName=CI(s),this.name=TI(this.originalName),this.trainable_=a,this.constraint=r,this.val=pk(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),CG(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function CG(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}function g0(n){return n.map(t=>t.read())}function vv(n){n.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class an{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class ja{constructor(t,e,s,a,r,i,l){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=a,this.callArgs=r,this.outputTensorIndex=l,this.id=SI(),i!=null&&(this.originalName=CI(i),this.name=TI(this.originalName)),this.rank=e.length}}let TG=0;class qm{constructor(t,e){this.callArgs=e,this.id=TG++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s!=null&&s.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let $G=0;class Xt extends Jl{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=$G++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=mr(s)+"_"+Gm(s)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let s;if(t.batchInputShape!=null)s=t.batchInputShape;else if(t.inputShape!=null){let r=null;t.batchSize!=null&&(r=t.batchSize),s=[r].concat(t.inputShape)}this.batchInputShape=s;let a=t.dtype;a==null&&(a=t.inputDType),a==null&&(a="float32"),this.dtype=a}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new ea(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new X(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Jn(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Jn(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new za(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new za(`Layer ${this.name} is not connected, no input to return.`);return Jn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new za(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new za(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Jn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=pe(t);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=pe(this.inputSpec);if(e.length!==s.length)throw new X(`Layer ${this.name} expects ${s.length} inputs, but it received ${e.length} input tensors. Input received: ${t}`);for(let a=0;a<e.length;a++){const r=e[a],i=s[a];if(i==null)continue;const l=r.rank;if(i.ndim!=null&&l!==i.ndim)throw new X(`Input ${a} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${l}`);if(i.maxNDim!=null&&l>i.maxNDim)throw new X(`Input ${a} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${l}`);if(i.minNDim!=null&&l<i.minNDim)throw new X(`Input ${a} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${l}.`);if(i.dtype!=null&&r.dtype!==i.dtype)throw new X(`Input ${a} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${r.dtype}.`);if(i.axes){const u=r.shape;for(const h in i.axes){const f=Number(h),p=i.axes[h],m=f>=0?u[f]:u[u.length+f];if(p!=null&&[p,null].indexOf(m)===-1)throw new X(`Input ${a} is incompatible with layer ${this.name}: expected axis ${f} of input shape to have value ${p} but got shape ${u}.`)}}if(i.shape!=null)for(let u=0;u<i.shape.length;++u){const h=i.shape[u],f=r.shape[u];if(h!=null&&f!=null&&h!==f)throw new X(`Input ${a} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=pe(t),a=EG(t),r=AG(t);if(a===r)throw new X("Arguments to apply() must be all SymbolicTensors or all Tensors");return lo(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const i=[];for(const l of pe(t))i.push(l.shape);this.build(Jn(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let i=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,i);const l=pe(i),u=[];for(let h of l)s.indexOf(h)!==-1&&(h=h.clone()),u.push(h);if(i=Jn(u),this.activityRegularizer!=null)throw new Wt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=kG(t),l=this.computeOutputShape(i);let u;const h=IG(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),l!=null&&l.length>0&&Array.isArray(l[0])?u=l.map((f,p)=>new ja(h,f,this,pe(t),e,this.name,p)):u=new ja(h,l,this,pe(t),e,this.name),this.addInboundNode(t,u,null,null,i,l,e),this._refCount++,this.activityRegularizer!=null)throw new Wt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,a)=>{s!=null&&t[a]!=null&&t[a]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new za(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);t.indexOf(s)===-1&&t.push(s)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new za(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ea(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Kf(this.weights)}build(t){this.built=!0}getWeights(t=!1){return g0(t?this.trainableWeights:this.weights)}setWeights(t){nt(()=>{const e=this.weights;if(e.length!==t.length)throw new X(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const s=[],a=g0(e);for(let r=0;r<a.length;++r){const i=a[r],l=e[r],u=t[r];if(!Jt(i.shape,u.shape))throw new X(`Layer weight shape ${i.shape} not compatible with provided weight shape ${u.shape}`);s.push([l,u])}vv(s)})}addWeight(t,e,s,a,r,i,l,u){if(this._addedWeightNames.indexOf(t)!==-1)throw new X(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(a=u!=null?u():Ee("zeros"));const h=a.apply(e,s),f=new NG(h,s,t,i,l);return h.dispose(),r!=null&&this.addLoss(()=>r.apply(f.read())),i==null&&(i=!0),i?this._trainableWeights.push(f):this._nonTrainableWeights.push(f),f}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=pe(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}setMaskMetadata(t,e,s){if(!this.supportsMasking)return;const a=this.computeMask(t,s),r=pe(e),i=pe(a);if(r.length!==i.length)throw new Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let l=0;l<r.length;l++)r[l].kerasMask=i[l]}addInboundNode(t,e,s,a,r,i,l=null){const u=pe(t);e=pe(e),s=pe(s),a=pe(a),r=Xf(r),i=Xf(i);const h=[],f=[],p=[];for(const m of u)h.push(m.sourceLayer),f.push(m.nodeIndex),p.push(m.tensorIndex);new qm({outboundLayer:this,inboundLayers:h,nodeIndices:f,tensorIndices:p,inputTensors:u,outputTensors:e,inputMasks:s,outputMasks:a,inputShapes:r,outputShapes:i},l);for(let m=0;m<e.length;m++)e[m].sourceLayer=this,e[m].nodeIndex=this.inboundNodes.length-1,e[m].tensorIndex=m}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function kG(n){n=pe(n);const t=[];for(const e of n)t.push(e.shape);return Jn(t)}function IG(n){return"float32"}function LI(n,t,e){if((t==null||e!=null&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),t.inboundNodes.length===0)return[n];{const s=t.inboundNodes[e];if(s.inboundLayers.length===0)return s.inputTensors;{const a=[];for(let r=0;r<s.inboundLayers.length;r++){const i=s.inputTensors[r],l=s.inboundLayers[r],u=s.nodeIndices[r],h=LI(i,l,u);for(const f of h)a.indexOf(f)===-1&&a.push(f)}return a}}}function EG(n){let t=!0;for(const e of pe(n))if(!(e instanceof ja)){t=!1;break}return t}function AG(n){let t=!0;for(const e of pe(n))if(e instanceof ja){t=!1;break}return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qh extends Xt{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:Gm("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new X("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new X("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new X("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=t.dtype||"float32";this.batchInputShape=e,this.dtype=s,this.inputSpec=[{shape:e}];const a=new ja(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new qm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new X(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}qh.className="InputLayer";xt(qh);function RG(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new X("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;n.shape!=null&&t==null&&(t=[null].concat(n.shape));let e=n.dtype;return e==null&&(e="float32"),new qh({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function DG(n,t){if(n.dtype==null||n.dtype===t.dtype)return t;try{return Nt(t,n.dtype)}catch{throw new X(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class ei{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof ei)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(this.id2Value[t.id]==null)this.id2Value[t.id]=DG(t,e),this.name2Id[t.name]=t.id,s!=null&&(this.id2Mask[t.id]=s);else throw new X(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof ja){if(this.id2Value[t.id]==null)throw new X(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new X(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof ja){if(this.id2Value[t.id]==null)throw new X(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new X(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&Gt(this.id2Mask)}}const Yf=new xI,Zf=new xI;function OG(n){Yf!=null&&Yf.setMaxEntries(n),Zf!=null&&Zf.setMaxEntries(n)}function pc(n,t,e,s){const a=e==null?!1:e.training,r=Array.isArray(n),i=r?n:[n],l=i.map(b=>b.name),u=[],h=t.names();for(const b of l)h.indexOf(b)!==-1?u.push(t.getValue(b)):u.push(null);const f=l.join(",")+"|"+t.names().sort().join(",");let p=Yf.get(f),m;if(p==null){const b=_G(i,t);p=b.sorted,m=b.recipientCounts,Yf.put(f,p),Zf.put(f,m)}m={},a||Object.assign(m,Zf.get(f));const y=new ei(t);for(let b=0;b<p.length;++b){const w=p[b],v=w.sourceLayer;if(v instanceof qh)continue;const S=[],C=[],$=[];let T=!1;for(const R of w.inputs){const _=y.getValue(R),A=y.getMask(R);S.push(_),C.push(A),A!=null&&(T=!0),a||(m[R.name]--,m[R.name]===0&&!t.hasKey(R)&&l.indexOf(R.name)===-1&&!_.isDisposed&&R.sourceLayer.stateful!==!0&&$.push(_))}T&&(e=e||{},e.mask=C[0]);const I=pe(v.apply(S,e));let D=null;v.supportsMasking&&(D=v.computeMask(S,C));const z=LG(w),B=Array.isArray(z)?z:[z];for(let R=0;R<B.length;++R){y.hasKey(B[R])||y.add(B[R],I[R],Array.isArray(D)?D[0]:D);const _=l.indexOf(B[R].name);_!==-1&&(u[_]=I[R])}a||Gt($)}return y.disposeMasks(),r?u:u[0]}function _G(n,t){O(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(n.length===1){const a=$T(n[0],t);e=a.sorted,s=a.recipientMap}else{const a=new Set;for(const r of n){const{sorted:i,recipientMap:l}=$T(r,t);for(const u of i)a.has(u.name)||(e.push(u),a.add(u.name));for(const u in l)s[u]==null&&(s[u]=new Set),l[u].forEach(h=>s[u].add(h))}}return{sorted:e,recipientCounts:FG(s)}}function FG(n){const t={};for(const e in n)t[e]=n[e].size;return t}function $T(n,t){const e=new Set,s=[],a={};for(const l of t.names())e.add(l);const r=[],i=[];for(r.push(n);r.length>0;){const l=r[r.length-1];if(e.has(l.name)){r.pop();continue}const u=i[i.length-1]===r.length-1;if(l.inputs.length===0||u)r.pop(),s.push(l),e.add(l.name),u&&i.pop();else{i.push(r.length-1);for(const h of l.inputs)a[h.name]==null&&(a[h.name]=new Set),a[h.name].add(l.name),!e.has(h.name)&&r.push(h)}}return{sorted:s,recipientMap:a}}function LG(n){let t;if(n.sourceLayer.inboundNodes.length===1)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const a of n.sourceLayer.inboundNodes[s].outputTensors)if(a.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zG=rt();zG.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,OG);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wv(n,t){return nt(()=>Tn(Et(H(n,n),t,!0)))}class jh extends Jl{getConfig(){return{}}}class zI extends jh{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return nt(()=>{const e=wv(t,this.axis),s=fs(e,0,this.maxValue);return H(t,Dt(s,yt(sn(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}zI.className="MaxNorm";xt(zI);class MI extends jh{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return nt(()=>Dt(t,yt(sn(),wv(t,this.axis))))}getConfig(){return{axis:this.axis}}}MI.className="UnitNorm";xt(MI);class BI extends jh{apply(t){return Ka(t)}}BI.className="NonNeg";xt(BI);class VI extends jh{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return nt(()=>{const e=wv(t,this.axis),s=yt(H(this.rate,fs(e,this.minValue,this.maxValue)),H(1-this.rate,e));return H(t,Dt(s,yt(sn(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}VI.className="MinMaxNorm";xt(VI);const kT={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function on(n){return cv(n)}function IT(n,t={}){return Uh(n,Qs.getMap().classNameMap,t,"constraint")}function ln(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in kT?kT[n]:n,config:{}};return IT(e)}else return n instanceof jh?n:IT(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Ji(n){if(n==null)return;const t=[],e=[],s=[];for(const a in n){const r=n[a];if(typeof r!="number"){const i=r;t.push(i.data()),e.push(a),s.push(i)}}if(t.length>0){const a=await Promise.all(t);for(let r=0;r<a.length;++r)n[e[r]]=a[r][0];Gt(s)}}function PI(n){if(n!=null)for(const t in n){const e=n[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var ET;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(ET||(ET={}));const MG=125;class kc{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class BG{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class VG extends kc{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const s=e.size==null?0:e.size;this.seen+=s;for(const a in e){const r=e[a];if(typeof r=="number")this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+r*s;else{let i;a in this.totals?i=this.totals[a]:this.totals[a]=0;const l=nt(()=>yt(this.totals[a],H(r,s)));this.totals[a]=l,i!=null&&i.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?e[s]=this.totals[s]/this.seen:nt(()=>{const a=H(Dt(1,this.seen),this.totals[s]);e[s]=a,this.totals[s].dispose(),pn(e[s])}))}}class PG extends kc{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const s in e)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(e[s])}async syncData(){const t=[],e=[],s=[];for(const r in this.history){const i=this.history[r];for(let l=0;l<i.length;++l)if(typeof i[l]!="number"){const u=i[l];t.push(u.data()),e.push(r),s.push(l)}}const a=await Promise.all(t);for(let r=0;r<a.length;++r)this.history[e[r]][s[r]].dispose(),this.history[e[r]][s[r]]=a[r][0]}}class UG extends kc{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||qk,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=MG),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ub(this.yieldEvery)&&(this.maybeWait=eG(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,s){const a=[];this.yield!=null&&(await Ji(s),a.push(this.yield(t,e,s))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await Ji(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const s=[];this.epochEnd!=null&&(await Ji(e),s.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(t,e){this.batchBegin!=null&&(await Ji(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const s=[];this.batchEnd!=null&&(await Ji(e),s.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):Ub(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(s)}async onTrainBegin(t){this.trainBegin!=null&&(await Ji(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await Ji(t),await this.trainEnd(t))}}function UI(n,t){return n==null&&(n={}),n instanceof kc?[n]:Array.isArray(n)&&n[0]instanceof kc?n:pe(n).map(s=>new UG(s,t))}class Ks{constructor(){}static registerCallbackConstructor(t,e){O(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Ks.checkForDuplicate(e),Ks.constructors[t]==null&&(Ks.constructors[t]=[]),Ks.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Ks.constructors)Ks.constructors[+e].forEach(a=>{if(a===t)throw new X("Duplicate callback constructor.")})}static clear(){Ks.constructors={}}static createCallbacks(t){const e=[];for(const s in Ks.constructors){const a=+s;t>=a&&e.push(...Ks.constructors[a])}return e.map(s=>new s)}}Ks.constructors={};function WI(n,t,e,s,a,r,i,l,u){const h=new PG,f=[new VG,...Ks.createCallbacks(t)];n!=null&&f.push(...n),f.push(h);const p=new BG(f);return p.setParams({epochs:e,initialEpoch:s,samples:a,steps:r,batchSize:i,verbose:t,doValidation:l,metrics:u}),{callbackList:p,history:h}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vr(n,t={},e=!1){return Uh(n,Qs.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qf(n,t){return nt(()=>{n.dtype!=="float32"&&(n=Nt(n,"float32"));const e=Et(Gh(n),t,!0),s=Kl(e.shape,sn()),a=Tn(kr(e,s));return Dt(n,a)})}function jm(n,t){return nt(()=>ze(Gh(kt(t,n)),-1))}function Sv(n,t){return nt(()=>ze(en(kt(t,n)),-1))}function Nv(n,t){return nt(()=>{const e=kt(n,t),s=fs(en(n),sn(),Number.MAX_VALUE),a=en(Dt(e,s));return H(100,ze(a,-1))})}function WG(n,t){return nt(()=>{const e=fs(t,sn(),Number.MAX_VALUE),s=As(yt(1,e)),a=fs(n,sn(),Number.MAX_VALUE),r=As(yt(1,a));return ze(Gh(kt(s,r)),-1)})}function GG(n,t){return nt(()=>{const e=kr(0,kt(1,H(n,t)));return ze(Gh(e),-1)})}function HG(n,t){return nt(()=>{const e=kr(0,kt(1,H(n,t)));return ze(e,-1)})}function qG(n,t){return nt(()=>{const e=Et(H(n,t),-1),s=aa(H(kt(1,n),t),-1);return kr(0,yt(1,kt(s,e)))})}function jG(n,t){return nt(()=>{const e=Math.log(2),s=kt(t,n),a=kt(yt(s,Yl(H(-2,s))),e);return ze(a,-1)})}function Ic(n,t,e=!1){return nt(()=>{if(e)t=Om(t);else{const s=Et(t,t.shape.length-1,!0);t=Dt(t,s)}return t=fs(t,sn(),1-sn()),Ie(Et(H(Nt(n,"float32"),As(t)),t.shape.length-1))})}function Jf(n,t,e=!1){return nt(()=>{const s=Nt(zh(fG(n)),"int32");t=fs(t,sn(),1-sn());const a=t.shape,r=q(d1(s,a[a.length-1]),a);return Ic(r,t,e)})}function XG(n,t){if(!Jt(n.shape,t.shape))throw new X(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return nt(()=>{const e=Ka(t),s=Ie(en(t));return yt(kt(e,H(t,n)),Nm(ps(s)))})}function Xm(n,t){return nt(()=>{let e;return e=fs(t,sn(),1-sn()),e=As(Dt(e,kt(1,e))),ze(XG(n,e),-1)})}function KG(n,t){return nt(()=>{const e=fs(n,sn(),1),s=fs(t,sn(),1);return Et(H(n,As(Dt(e,s))),-1)})}function YG(n,t){return nt(()=>{const e=As(yt(sn(),t));return ze(kt(t,H(n,e)),-1)})}function GI(n,t){return nt(()=>{const e=Qf(n,-1),s=Qf(t,-1),a=H(e,s);return Ie(Et(a,-1))})}const tp={meanSquaredError:jm,meanAbsoluteError:Sv,meanAbsolutePercentageError:Nv,meanSquaredLogarithmicError:WG,squaredHinge:GG,hinge:HG,categoricalHinge:qG,logcosh:jG,categoricalCrossentropy:Ic,sparseCategoricalCrossentropy:Jf,binaryCrossentropy:Xm,kullbackLeiblerDivergence:KG,poisson:YG,cosineProximity:GI};function Ab(n){if(typeof n=="string"){if(n in tp)return tp[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new X(t)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function HI(n,t){return nt(()=>{const e=H(.5,Rs(t)),s=Ga(xs(t,e),n.dtype);return ze(Ta(n,s),-1)})}function qI(n,t){return nt(()=>Ga(Ta(Fl(n,-1),Fl(t,-1)),"float32"))}function ZG(n,t){return nt(()=>Nt(Et(qa(Ta(n,1),Ta(t,1))),"float32"))}function QG(n,t){return nt(()=>Nt(Et(qa(Ta(n,0),Ta(t,1))),"float32"))}function JG(n,t){return nt(()=>{const e=ZG(n,t),s=QG(n,t),a=yt(e,s);return Nt(On(xs(a,0),Dt(e,a),0),"float32")})}function tH(n,t){return Xm(n,t)}function eH(n,t){return n.rank===t.rank&&(n=Eo(n,[n.rank-1])),t=Fl(t,-1),t.dtype!==n.dtype&&(t=Nt(t,n.dtype)),Nt(Ta(n,t),"float32")}const nH=jm,sH=jm,aH=Sv,rH=Sv,iH=Nv,oH=Nv,jI=Ic,lH=GI,XI=Jf,ep={binaryAccuracy:HI,categoricalAccuracy:qI,precision:JG,categoricalCrossentropy:jI,sparseCategoricalCrossentropy:XI,mse:nH,MSE:sH,mae:aH,MAE:rH,mape:iH,MAPE:oH,cosine:lH};function uH(n){if(typeof n=="string"&&n in ep)return ep[n];if(typeof n!="string"&&n!=null)return n;throw new X(`Unknown metric ${n}`)}function bf(n){if(Ma(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let t;for(const e of Object.keys(tp))if(tp[e]===n){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(ep))if(ep[e]===n){t=e;break}return t!==void 0?t:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cH(n){const t={Adagrad:()=>xl.adagrad(.01),Adadelta:()=>xl.adadelta(1,.95,sn()),Adam:()=>xl.adam(.001,.9,.999,sn()),Adamax:()=>xl.adamax(.002,.9,.999,sn(),0),RMSProp:()=>xl.rmsprop(.001,.9,0,sn()),SGD:()=>xl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new X(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const AT=1*1024*1024;function RT(n,t,e=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!y0(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>AT&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${AT}.`)}}function y0(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if(typeof e!="string"||!y0(n[e]))return!1;return!0}else if(Array.isArray(n)){for(const t of n)if(!y0(t))return!1;return!0}else return!1;else{const t=typeof n;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hH(n,t,e,s=console.log){const a=fH(n),r=["Layer (type)","Input Shape","Output shape","Param #"];a?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(f=>Math.floor(t*f)));let i;if(!a){r.push("Receives inputs"),i=[];for(const f in n.nodesByDepth)i.push(...n.nodesByDepth[f])}s("_".repeat(t)),np(r,e,s),s("=".repeat(t));const l=n.layers;for(let f=0;f<l.length;++f)a?pH(l[f],e,s):mH(l[f],e,i,s),s((f===l.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const u=dH(n),h=Kf(n.nonTrainableWeights);s(`Total params: ${u+h}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${h}`),s("_".repeat(t))}function dH(n){let t;return n.collectedTrainableWeights!=null?t=Kf(n.collectedTrainableWeights):t=Kf(n.trainableWeights),t}function fH(n){let t=!0;const e=[],s=[];for(const a in n.nodesByDepth)e.push(n.nodesByDepth[a]);for(const a of e){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){t=!1;break}s.push(...a)}if(t)for(const a of n.layers){let r=!1;for(const i of a.inboundNodes)if(s.indexOf(i)!==-1)if(r){t=!1;break}else r=!0;if(!t)break}return t}function np(n,t,e=console.log){let s="";for(let a=0;a<n.length;++a)a>0&&(s=s.slice(0,s.length-1)+" "),s+=n[a],s=s.slice(0,t[a]),s+=" ".repeat(t[a]-s.length);e(s)}function pH(n,t,e){let s,a;try{a=n.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{a="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const r=n.name,i=n.getClassName(),l=[`${r} (${i})`,a,s,n.countParams().toString()];np(l,t,e)}function mH(n,t,e,s){let a,r;try{r=n.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{r="multiple"}try{a=JSON.stringify(n.outputShape)}catch{a="multiple"}const i=[];for(const p of n.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(p)===-1))for(let m=0;m<p.inboundLayers.length;++m){const y=p.inboundLayers[m].name,b=p.nodeIndices[m],w=p.tensorIndices[m];i.push(`${y}[${b}][${w}]`)}const l=n.name,u=n.getClassName(),h=i.length===0?"":i[0],f=[`${l} (${u})`,r,a,n.countParams().toString(),h];np(f,t,s);for(let p=1;p<i.length;++p)np(["","","","",i[p]],t,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function KI(n,t,e){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&t===0&&typeof e=="string"}function b0(n,t){if(n===null)return null;if(typeof n=="string")return so(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let a=0;a<s;++a){const r=n[a];KI(t,a,r)?e.push(r):e.push(b0(r,t))}return e}else{const e={};for(const s of Object.keys(n)){const a=n[s];if(s==="name"&&typeof a=="string")e[s]=a;else{const r=so(s);e[r]=b0(a,r)}}return e}}function x0(n,t){if(n==null)return null;if(typeof n=="string")return mr(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let a=0;a<s;++a){const r=n[a];KI(t,a,r)?e.push(r):e.push(x0(r,t))}return e}else{const e={};for(const s of Object.keys(n)){const a=n[s],r=mr(s);(s==="name"||s==="className")&&typeof a=="string"?e[r]=a:e[r]=x0(a,s)}return e}}/** @license See the LICENSE file. */const YI="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const gH=n=>{const t=Object.keys(n);if(t.length===0)return!1;const e=t[0].split("/");return!isNaN(parseInt(e[e.length-1],10))};class xa extends Xt{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const C=this.getClassName().toLowerCase();this.name=Gm(C)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],ri(this.inputs).length!==this.inputs.length)throw new X(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(C=>C.name)}`);ri(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(C=>C.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const C of this.outputs){const $=C.sourceLayer,T=C.nodeIndex,I=C.tensorIndex;this.outputLayers.push($),this.outputLayersNodeIndices.push(T),this.outputLayersTensorIndices.push(I)}for(const C of this.inputs){const $=C.sourceLayer,T=C.nodeIndex,I=C.tensorIndex;Ma(T===0,"input layer has >1 nodes"),Ma(I===0,"input layer has >1 tensors"),this.inputLayers.push($),this.inputLayersNodeIndices.push(T),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let C=0;C<this.inputLayers.length;C++){const $=this.inputLayers[C];if(!($ instanceof qh))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${C} (0-based) originates from layer type ${$.getClassName()}.`);this.inputNames.push($.name),this.feedInputShapes.push($.batchInputShape),this.feedInputNames.push($.name)}for(const C of this.outputLayers)this.outputNames.push(C.name);this.internalInputShapes=this.inputs.map(C=>C.shape),this.internalOutputShapes=this.outputs.map(C=>C.shape);const e={},s={},a={},r={},i={},l=[],u=(C,$,T,I,D,z)=>{(I==null||D==null||z==null)&&(I=C.sourceLayer,D=C.nodeIndex,z=C.tensorIndex);const B=I.inboundNodes[D];if(T.indexOf(B)!==-1)throw new ea(`The tensor ${C.name} at layer "${I.name}" is part of a cycle.`);if($.indexOf(B)!==-1)return;this.containerNodes.add(xa.nodeKey(I,D)),I.id in i||(i[I.id]=Object.keys(i).length),T.indexOf(B)===-1&&T.push(B);const R=B.inboundLayers.length;for(let _=0;_<R;_++){const A=B.inputTensors[_],W=B.inboundLayers[_],K=B.nodeIndices[_],tt=B.tensorIndices[_];u(A,$,T,W,K,tt)}for($.push(B);T.indexOf(B)>=0;)T.splice(T.indexOf(B),1);l.push(B)},h=[],f=[];for(const C of this.outputs)u(C,h,f);const p=l.slice().reverse();for(const C of p){s[C.id]=C,C.id in e||(e[C.id]=0);let $=e[C.id];const T=a[C.outboundLayer.id]==null?0:a[C.outboundLayer.id];$=Math.max($,T),a[C.outboundLayer.id]=$,r[C.outboundLayer.id]=C.outboundLayer,e[C.id]=$;for(let I=0;I<C.inboundLayers.length;I++){const D=C.inboundLayers[I],z=C.nodeIndices[I],B=D.inboundNodes[z],R=e[B.id]==null?0:e[B.id];e[B.id]=Math.max($+1,R),s[B.id]=B}}const m={};for(const C in e){const $=e[C];$ in m||(m[$]=[]),m[$].push(s[C])}const y={};for(const C in a){const $=a[C];$ in y||(y[$]=[]),y[$].push(r[C])}let b=Object.keys(y).map(C=>parseInt(C,10)).sort(mf);this.layers=[];for(const C of b){const $=y[C];$.sort((T,I)=>{const D=i[T.id],z=i[I.id];return D<z?-1:D>z?1:0});for(const T of $)T instanceof xa&&this.internalContainerRefs.push(T),this.layers.push(T)}this.layersByDepth=y,b=Object.keys(m).map(C=>parseInt(C,10)).sort(mf);const w=this.inputs.slice(),v=[];for(const C of b)for(const $ of m[C]){const T=$.outboundLayer;if(T!=null){for(const I of $.inputTensors)if(w.indexOf(I)===-1)throw new ea(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${T.name}". The following previous layers were accessed without issue: ${v}`);for(const I of $.outputTensors)w.push(I);v.push(T.name)}}this.nodesByDepth=m;const S=this.layers.map(C=>C.name);for(const C of S){const $=S.filter(T=>T===C).length;if($!==1)throw new ea(`The name "${C}" is used ${$} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(S))}this.outboundNodes=[],this.inboundNodes=[],new qm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(C=>null),outputMasks:this.outputs.map(C=>null),inputShapes:this.inputs.map(C=>C.shape),outputShapes:this.outputs.map(C=>C.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new X("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let a=0;const r=gH(t);r&&this.parseWeights(t);for(const l of this.layers)for(const[u,h]of l.weights.entries()){const f=r?`${h.name.split("/").slice(0,-1).join("/")+"/"}${u}`:h.originalName;if(s[f]!=null)throw new X(`Duplicate weight name: ${f}`);s[f]=h,a++}const i=[];for(const l in t){let u=l;if(s[l]==null){const h=l.split("/");u=h.slice(0,-2).concat([h[h.length-1]]).join("/")}if(s[u]!=null)i.push([s[u],t[l]]);else if(e)throw new X(`Provided weight data has no target variable: ${l}`);delete s[u]}if(e){const l=[];for(const u in s)l.push(u);if(l.length>0)throw new X(`${l.length} of ${a} weights are not set: ${l}`)}vv(i)}parseWeights(t){for(const e in Object.keys(t)){const s=e.split("/"),a=["vars","layer_checkpoint_dependencies"],r=s.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!a.includes(i)).join("/");r!==e&&(t[r]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${YI}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=x0(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return nt(()=>{t=pe(t);const s=new ei;for(let a=0;a<this.inputs.length;++a)s.add(this.inputs[a],t[a]);return pc(this.outputs,s,e)})}computeMask(t,e){return nt(()=>{t=pe(t);let s;return e==null?s=wo(null,t.length):s=pe(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=Xf(t);if(e.length!==this.inputLayers.length)throw new X(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let l=0;l<e.length;l++){const u=this.inputLayers[l],h=e[l],f=u.name+"_0_0";s[f]=h}const a=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(mf);if(a.length>1)for(const l of a){const u=this.nodesByDepth[l];for(const h of u){const f=h.outboundLayer;if(this.inputLayers.map(w=>w.id).indexOf(f.id)!==-1)continue;const p=[];for(let w=0;w<h.inboundLayers.length;w++){const v=h.inboundLayers[w],S=h.nodeIndices[w],C=h.tensorIndices[w],$=`${v.name}_${S}_${C}`,T=s[$];p.push(T)}const m=f.computeOutputShape(Jn(p)),y=Xf(m),b=f.inboundNodes.indexOf(h);for(let w=0;w<y.length;w++){const v=`${f.name}_${b}_${w}`;s[v]=y[w]}}}const r=[],i=[];for(let l=0;l<this.outputLayers.length;l++){const u=this.outputLayers[l],h=this.outputLayersNodeIndices[l],f=this.outputLayersTensorIndices[l],p=`${u.name}_${h}_${f}`;i.push(p)}for(let l=0;l<i.length;l++){const u=i[l];Ma(u in s),r.push(s[u])}return Jn(r)}runInternalGraph(t,e){e==null&&(e=wo(null,t.length));const s={};for(let u=0;u<this.inputs.length;++u){const h=this.inputs[u],f=t[u],p=e[u];s[h.id]=[f,p]}const a=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(mf);for(const u of a){const h=this.nodesByDepth[u];for(const f of h){const p=f.outboundLayer,m=f.inputTensors,y=f.outputTensors,b=new Array;for(const w of m)w.id in s&&b.push(s[w.id]);if(b.length===m.length){let w={},v,S,C,$;if(f.callArgs!=null&&(w=f.callArgs),b.length===1){const[T,I]=b[0];w.mask==null&&(w.mask=I),C=pe(p.call(T,w)),$=pe(p.computeMask(T,I)),v=[T],S=[I]}else v=b.map(T=>T[0]),S=b.map(T=>T[1]),w.mask==null&&(w.mask=S),C=pe(p.call(v,w)),$=pe(p.computeMask(v,S));if(p.activityRegularizer)throw new Wt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let T=0;T<y.length;++T){const I=y[T],D=C[T],z=$[T];s[I.id]=[D,z]}}}}const r=[],i=[],l=[];for(const u of this.outputs){Ma(u.id in s,`Could not compute output ${u.name} : ${u.id}`);const[h,f]=s[u.id];l.push(h.shape),r.push(h),i.push(f)}return[r,i,l]}buildNodeConversionMap(t){const e={};let s;for(const a of this.layers){s=a instanceof xa?1:0;for(let r=0;r<a.inboundNodes.length;r++){const i=xa.nodeKey(a,r);this.containerNodes.has(i)&&(e[i]=s,s+=1)}}return e}getLayer(t,e){if(e!=null)return this.findLayer(e);if(t==null)throw new X("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(const s of this.layers)if(s.name===t)return s;throw new X(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new X(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return nt(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const a=xa.nodeKey(e,s);this.containerNodes.has(a)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const l=i.getClassName(),u=i.getConfig(),h=[];for(let p=0;p<i.inboundNodes.length;p++){const m=i.inboundNodes[p],y=xa.nodeKey(i,p);let b={};if(this.containerNodes.has(y)){if(m.callArgs)try{JSON.stringify(m.callArgs),b=m.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),b={}}if(m.inboundLayers.length>0){const w=[];for(let v=0;v<m.inboundLayers.length;v++){const S=m.inboundLayers[v],C=m.nodeIndices[v],$=m.tensorIndices[v],T=xa.nodeKey(S,C);let I=e[T];I==null&&(I=0),w.push([S.name,I,$,b])}h.push(w)}}}const f={};f.name=i.name,f.className=l,f.config=u,f.inboundNodes=h,s.push(f)}t.layers=s;const a=[];for(let i=0;i<this.inputLayers.length;i++){const l=this.inputLayers[i],u=this.inputLayersNodeIndices[i],h=xa.nodeKey(l,u);if(!this.containerNodes.has(h))continue;let f=e[h];f==null&&(f=0);const p=this.inputLayersTensorIndices[i];a.push([l.name,f,p])}t.inputLayers=a;const r=[];for(let i=0;i<this.outputLayers.length;i++){const l=this.outputLayers[i],u=this.outputLayersNodeIndices[i],h=xa.nodeKey(l,u);if(!this.containerNodes.has(h))continue;let f=e[h];f==null&&(f=0);const p=this.outputLayersTensorIndices[i];r.push([l.name,f,p])}return t.outputLayers=r,t}static fromConfig(t,e,s={},a=!1){const r={},i={};function l(v,S){v.name in i?i[v.name].push(S):i[v.name]=[S]}function u(v,S){const C=[];let $;for(const T of S){const I=T[0],D=T[1],z=T[2];if($=T[3]==null?{}:T[3],!(I in r)){l(v,S);return}const B=r[I];if(B.inboundNodes.length<=D){l(v,S);return}const R=B.inboundNodes[D];C.push(R.outputTensors[z])}C.length>0&&v.apply(Jn(C),$)}function h(v){const S=v.name,C=vr(v,e.customObjects!=null?e.customObjects:{});C.setFastWeightInitDuringBuild(a),r[S]=C,v.inboundNodes.forEach(T=>{if(!(T instanceof Array))throw new X(`Corrupted configuration, expected array for nodeData: ${T}`);l(C,T)})}const f=e.name,p=e.layers;for(const v of p)h(v);for(;!tG(i);)for(const v of p){const S=r[v.name];if(S.name in i){const C=i[S.name];delete i[S.name];for(const $ of C)u(S,$)}}const m=[],y=[],b=e.inputLayers;for(const v of b){const S=v[0],C=v[1],$=v[2];Ma(S in r);const I=r[S].inboundNodes[C].outputTensors;m.push(I[$])}const w=e.outputLayers;for(const v of w){const S=v[0],C=v[1],$=v[2];Ma(S in r);const I=r[S].inboundNodes[C].outputTensors;y.push(I[$])}return new t({inputs:m,outputs:y,name:f})}get stateful(){if(this._stateful)throw new X("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){nt(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yH(n,t,e){const s=t.length;if(n==null||Array.isArray(n)&&n.length===0)return t.map(a=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const a=[];return t.forEach(r=>{r in n?a.push(n[r]):a.push(null)}),a}else throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}function ZI(n,t){return yH(n,t,"classWeight")}async function QI(n,t,e,s){if(e!=null){const a=nt(()=>{if(n.shape.length===1)return xr(n);if(n.shape.length===2){if(n.shape[1]>1)return Fl(n,1);if(n.shape[1]===1)return q(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await a.data());Gt(a);const i=[];return r.forEach(l=>{if(e[l]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${l} exists in the data but not in classWeight`);i.push(e[l])}),Gn(i,"float32")}else return null}function bH(n,t){return H(n,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const xH=32;function JI(n,t){let e,s;const a=t;e=a.xs,s=a.ys,O(e!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const r=DT("input",n.inputNames,e),i=DT("output",n.outputNames,s),l=r[0].shape[0];O(r.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),O(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let u=0;u<r.length;u++)O(r[u].shape[0]===l,()=>`Batch size mismatch: input ${n.inputNames[u]} has ${r[u].shape[0]}; expected  ${l} based on input ${n.inputNames[0]}.`);for(let u=0;u<i.length;u++)O(i[u].shape[0]===l,()=>`Batch size mismatch: output ${n.outputNames[u]} has ${i[u].shape[0]}; expected  ${l} based on input ${n.inputNames[0]}.`);return{xs:r,ys:i}}function DT(n,t,e){if(e instanceof De)return[e];if(Array.isArray(e))return O(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const a of t){if(e[a]==null)throw new X(`The feature data generated by the dataset lacks the required ${n} key '${a}'.`);s.push(e[a])}return s}}function vH(n){if(n.length===3)throw new Wt("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function wH(n,t,e){const s=e.batchesPerEpoch!=null;if(O(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),O(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),O(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),O(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),O(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const a=e.validationData!=null;let r,i;if(a)if(OT(e.validationData))O(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const v=vH(e.validationData);r=v.xs,i=v.ys}const l=n.makeTrainFunction(),u=n.getDedupedMetricsNames();let h;a?h=u.slice().concat(u.map(v=>"val_"+v)):h=u.slice();const f=UI(e.callbacks,e.yieldEvery),p=e.verbose==null?1:e.verbose,{callbackList:m,history:y}=WI(f,p,e.epochs,null,null,SH(t,e),null,a,h);m.setModel(n),n.history=y,await m.onTrainBegin(),n.stopTraining_=!1;let b=e.initialEpoch==null?0:e.initialEpoch,w=await t.iterator();for(;b<e.epochs;){const v={};await m.onEpochBegin(b);let S=0,C=0;for(s||(w=await t.iterator());!s||S<e.batchesPerEpoch;){const $=await w.next();if(s&&$.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${S} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if($.value!=null){const{xs:T,ys:I}=JI(n,$.value),D={};D.batch=C,D.size=T[0].shape[0],await m.onBatchBegin(C,D);const z=[];if(e.classWeight!=null){const _=ZI(e.classWeight,n.outputNames);for(let A=0;A<_.length;++A)z.push(await QI(I[A],null,_[A]))}const B=T.concat(I).concat(z),R=l(B);Gt(B);for(let _=0;_<u.length;++_){const A=u[_],W=R[_];D[A]=W,pn(W)}await m.onBatchEnd(C,D),PI(D),C++,S++}if(s?S>=e.batchesPerEpoch:$.done){if(a){let T;OT(e.validationData)?T=pe(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):T=pe(n.evaluate(r,i,{batchSize:e.validationBatchSize==null?xH:e.validationBatchSize,verbose:0}));for(let I=0;I<n.metricsNames.length;++I)v[`val_${n.metricsNames[I]}`]=T[I]}break}if(n.stopTraining_)break}if(await m.onEpochEnd(b,v),b++,n.stopTraining_)break}return await m.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function SH(n,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function OT(n){return typeof n.iterator=="function"}function NH(n){return typeof n.next=="function"}async function CH(n,t,e){e=e||{};const s=e.batches!=null,a=n.testFunction;let r=[];if(e.verbose>0)throw new Wt("Verbose mode is not implemented yet.");O(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const i=NH(t)?t:await t.iterator();let l=0,u=0;for(;!s||u<e.batches;){const h=await i.next();if(r=nt(()=>{if(h.value){const{xs:f,ys:p}=JI(n,h.value),m=f.concat(p),y=nt(()=>a(m));if(Gt(m),u===0)for(let w=0;w<y.length;++w)r.push(Lt(0));const b=m[0].shape[0];for(let w=0;w<y.length;++w){const v=y[w],S=r[w];r[w]=nt(()=>yt(r[w],H(b,v))),u>0&&Gt(S)}Gt(y),l+=b,++u}return r}),h.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let h=0;h<r.length;++h){const f=r[h];r[h]=Dt(r[h],l),Gt(f)}return Jn(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Rb(n){O(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function uc(n,t,e){return n==null?[null]:Array.isArray(n)?n.map(s=>uo(s,t,e-t)):uo(n,t,e-t)}function v0(n,t){return nt(()=>n==null?null:Array.isArray(n)?n.map(e=>v0(e,t)):kI(n,t.dtype==="int32"?t:Nt(t,"int32")))}function Db(n,t){const e=[];let s=0,a=null;for(;s<n;)a=s+t,a>=n&&(a=n),e.push([s,a]),s=a;return e}function tE(n){const t=[];n instanceof De&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(s.rank===1)t.push(Wh(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function ba(n,t){if(n==null)return;const e=[];if(t instanceof De)e.push(t.id);else if(Array.isArray(t))t.forEach(a=>e.push(a.id));else if(t!=null)for(const a in t){const r=t[a];e.push(r.id)}const s=[];if(n instanceof De)e.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(a=>{e.indexOf(a.id)===-1&&s.push(a)});else if(n!=null)for(const a in n){const r=n[a];e.indexOf(r.id)===-1&&s.push(r)}s.forEach(a=>{a.isDisposed||a.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function TH(n){return n instanceof De}function w0(n){return Array.isArray(n)}function _T(n){return!TH(n)&&!w0(n)}function FT(n,t,e,s=!0,a=""){if(t==null||t.length===0){if(n!=null){let i=!1;if(w0(n)&&n.length>0)i=!0;else if(_T(n)){for(const l in n)if(n.hasOwnProperty(l)){i=!0;break}}else i=!0;if(i)throw new X(`Error when checking model ${a} expected no data, but got ${n}`)}return[]}if(n==null)return t.map(i=>null);let r;if(_T(n)){n=n,r=[];for(const i of t){if(n[i]==null)throw new X(`No data provided for "${i}". Need data for each key in: ${t}`);r.push(n[i])}}else if(w0(n)){if(n=n,n.length!==t.length)throw new X(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);r=n}else{if(n=n,t.length>1)throw new X(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);r=[n]}if(r=tE(r),e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;const l=r[i];if(l.shape.length!==e[i].length)throw new X(`Error when checking ${a}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape ${l.shape}`);for(let u=0;u<e[i].length;++u){if(u===0&&!s)continue;const h=l.shape[u],f=e[i][u];if(f!=null&&f>=0&&h!==f)throw new X(`${a} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${a} received an input with ${l.shape[0]} examples, each with shape [${l.shape.slice(1,l.shape.length)}] (tensor shape [${l.shape}])`)}}return r}function $H(n,t,e){const s=ri(n.map(r=>r.shape[0]));s.sort();const a=ri(t.map(r=>r.shape[0]));if(a.sort(),s.length>1)throw new X(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(r=>r.shape))}`);if(a.length>1)throw new X(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(r=>r.shape))}`);if(s.length>0&&a.length>0&&!Jt(s,a))throw new X(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${a[0]} target sample(s).`)}function kH(n,t,e){const s=[jm,Xm,Ic];for(let a=0;a<n.length;++a){const r=n[a],i=t[a],l=e[a];if(i!=null){if(i===Ic&&r.shape[r.shape.length-1]===1)throw new X(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const u=r.shape.slice(1),h=l.slice(1);for(let f=0;f<u.length;++f){const p=u[f],m=h[f];if(m!=null&&p!==m)throw new X(`A target Tensor with shape ${r.shape} was passed for an output of shape ${l}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function LT(n,t,e,s=!0,a=""){let r;if(Array.isArray(n)){if(n.length!==t.length)throw new X(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);r=n}else{if(t.length>1)throw new X(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);r=[n]}if(e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;const l=r[i];if(l.shape.length!==e[i].length)throw new X(`Error when checking ${a}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(l.shape)}`);for(let u=0;u<e[i].length;++u){if(u===0&&!s)continue;const h=l.shape[u],f=e[i][u];if(f!=null&&f!==h)throw new X(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(l.shape)}.`)}}}function IH(n,t){if(n==null||Array.isArray(n)&&n.length===0)return t.map(s=>[]);let e;if(typeof n=="string"||typeof n=="function")e=[n];else if(Array.isArray(n)||typeof n=="object")e=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const a of t){let r=e.hasOwnProperty(a)?e[a]:[];Array.isArray(r)||(r=[r]),s.push(r)}return s}}const EH="layers-model";class Rl extends xa{constructor(t){super(t),this.isTraining=!1}summary(t,e,s=console.log){if(!this.built)throw new X("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");hH(this,t,e,s)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=cH(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Ti))throw new X("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const i in t.loss)if(this.outputNames.indexOf(i)===-1)throw new X(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)t.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),e.push(Ab(t.loss[i]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new X(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(l=>Ab(l))}else{const i=Ab(t.loss);this.outputs.forEach(l=>{e.push(i)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const l=this.internalOutputShapes[i],u=this.outputNames[i];this.feedOutputNames.push(u),this.feedOutputShapes.push(l),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],lo("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const l=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([l,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const a=IH(t.metrics,this.outputNames),r=(i,l,u)=>{this.outputNames.length>1&&(l=this.outputNames[i]+"_"+l),this.metricsNames.push(l),this.metricsTensors.push([u,i])};lo("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const l=a[i];(h=>{const f="";let p,m,y;for(const b of h){if(typeof b=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(b)!==-1){const v=this.internalOutputShapes[i];v[v.length-1]===1||this.lossFunctions[i]===Xm?["accuracy","acc"].indexOf(b)!==-1?m=HI:["crossentropy","ce"].indexOf(b)!==-1&&(m=tH):this.lossFunctions[i]===Jf?["accuracy","acc"].indexOf(b)!==-1?m=eH:["crossentropy","ce"].indexOf(b)!==-1&&(m=XI):["accuracy","acc"].indexOf(b)!==-1?m=qI:["crossentropy","ce"].indexOf(b)!==-1&&(m=jI);let S;["accuracy","acc"].indexOf(b)!==-1?S="acc":["crossentropy","ce"].indexOf(b)!==-1&&(S="ce"),y=m,p=f+S}else y=uH(b),p=f+bf(b);let w;lo(p,()=>{w=y}),r(i,p,w)}})(l)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,s={}){const a=s.batchSize==null?32:s.batchSize;Rb(a);const i=this.standardizeUserDataXY(t,e,!0,a);try{const l=i[0].concat(i[1]);this.makeTestFunction();const u=this.testFunction,h=this.testLoop(u,l,a,s.verbose,s.steps);return Jn(h)}finally{ba(i[0],t),ba(i[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),CH(this,t,e)}checkNumSamples(t,e,s,a="steps"){let r;if(s!=null){if(r=null,e!=null)throw new X(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?r=t[0].shape[0]:r=t.shape[0];else throw new X(`Either the input data should have a defined shape, or ${a} shoud be specified.`);return r}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new X("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(e),a=s?e:[e],r=this.retrieveSymbolicTensors(a),i=new ei;if(t instanceof De&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new X(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)i.add(this.inputs[u],t[u])}else for(const u of this.inputs){const h=t[u.name];if(h==null)throw new X(`No value is provided for the model's input ${u.name}`);i.add(u,h)}const l=pc(r,i);return s?l:l[0]}retrieveSymbolicTensors(t){const e=wo(null,t.length);let s=t.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],i=r.map(l=>l.name);for(let l=0;l<t.length;++l){const u=i.indexOf(t[l]);if(u!==-1&&(e[l]=r[u],s--),s===0)break}if(s===0)break}if(s>0){const a=[];throw e.forEach((r,i)=>{r==null&&a.push(t[i])}),new X(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return e}predictLoop(t,e=32,s=!1){return nt(()=>{const a=this.checkNumSamples(t);if(s)throw new Wt("Verbose predictLoop() is not implemented yet.");const r=Db(a,e),i=this.outputs.map(l=>[]);for(let l=0;l<r.length;++l)nt(()=>{const h=r[l][0],f=r[l][1],p=uc(t,h,f),m=[];if(Array.isArray(p))for(let b=0;b<p.length;++b)m.push({key:this.inputs[b],value:p[b]});else m.push({key:this.inputs[0],value:p});const y=new ei(m);return pc(this.outputs,y)}).forEach((h,f)=>i[f].push(h));return Jn(i.map(l=>He(l,0)))})}predict(t,e={}){const s=tE(t);LT(s,this.inputNames,this.feedInputShapes,!1);try{const a=e.batchSize==null?32:e.batchSize;return Rb(a),this.predictLoop(s,a)}finally{ba(s,t)}}predictOnBatch(t){LT(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,s=!0,a){if(this.optimizer_==null)throw new ea("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let i=0;i<this.feedOutputShapes.length;++i){const l=this.feedOutputShapes[i];this.feedLossFns[i]===Jf?r.push(l.slice(0,l.length-1).concat([1])):r.push(l)}if(t=FT(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=FT(e,this.feedOutputNames,r,!1,"target"),$H(t,e),kH(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&a!=null&&a>0&&t[0].shape[0]%a!==0)throw new X(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,s,a,r=!0,i){const[l,u]=this.standardizeUserDataXY(t,e,r,i);if(s!=null)throw new Error("sample weight is not supported yet.");let h=null;if(a!=null){const f=ZI(a,this.outputNames);h=[];for(let p=0;p<f.length;++p)h.push(await QI(u[p],null,f[p]))}return[l,u,h]}testLoop(t,e,s,a=0,r){return nt(()=>{const i=this.checkNumSamples(e,s,r,"steps"),l=[];if(a>0)throw new Wt("Verbose mode is not implemented yet.");if(r!=null)throw new Wt("steps mode in testLoop() is not implemented yet");{const u=Db(i,s),h=Gn($a(0,i));for(let f=0;f<u.length;++f){const p=u[f][0],m=u[f][1],y=uo(h,p,m-p),b=v0(e,y),w=t(b);if(f===0)for(let v=0;v<w.length;++v)l.push(Lt(0));for(let v=0;v<w.length;++v){const S=w[v];l[v]=yt(l[v],H(m-p,S))}}for(let f=0;f<l.length;++f)l[f]=Dt(l[f],i)}return l})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let s=0;s<t.length;++s){const a=t[s];let r=a;if(vT(t,a)>1){const i=vT(t.slice(0,s),a);r+=`_${i}`}e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],s=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],l=()=>{const p=[];for(let w=0;w<this.inputs.length;++w)p.push({key:this.inputs[w],value:s[w]});const m=new ei(p),y=pc(this.outputs,m,{training:!0});let b;for(let w=0;w<this.lossFunctions.length;++w){const v=this.lossFunctions[w];let S=v(a[w],y[w]);r[w]!=null&&(S=bH(S,r[w]));const C=ze(S);e.push(C),w===0?b=S:b=yt(b,S)}for(let w=0;w<this.metricsTensors.length;++w){let v;if(this.outputs.length>1&&w<this.outputs.length)v=e[w];else{const S=this.metricsTensors[w][0],C=this.metricsTensors[w][1];v=ze(S(a[C],y[C]))}pn(v),i.push(v)}return b=ze(b),this.calculateLosses().forEach(w=>{b=yt(b,w)}),b},u=this.collectedTrainableWeights.map(p=>p.read());return[this.optimizer_.minimize(l,!0,u)].concat(i)}}makeTestFunction(){this.testFunction=t=>nt(()=>{const e=[];let s;const a=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let h=0;h<this.inputs.length;++h)i.push({key:this.inputs[h],value:a[h]});const l=new ei(i),u=pc(this.outputs,l);for(let h=0;h<this.lossFunctions.length;++h){const f=this.lossFunctions[h],p=ze(f(r[h],u[h]));h===0?s=p:s=yt(s,p),e.push(s)}for(let h=0;h<this.metricsTensors.length;++h){const f=this.metricsTensors[h][0],p=this.metricsTensors[h][1],m=ze(f(r[p],u[p]));e.push(m)}return e})}async fit(t,e,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let a,r,i,l,u,h,f,p,m;try{const y=s.batchSize==null?32:s.batchSize;Rb(y);const w=await this.standardizeUserData(t,e,s.sampleWeight,s.classWeight,!1,y);a=w[0],r=w[1],m=w[2];let v=!1,S;if(s.validationData!=null&&s.validationData.length>0){if(v=!0,s.validationData.length===2)u=s.validationData[0],h=s.validationData[1];else throw s.validationData.length===3?new Wt("validationData including sample weights is not supported yet."):new X(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const _=await this.standardizeUserData(u,h,null,null,!0,y);f=_[0],p=_[1],S=f.concat(p)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){v=!0;const R=Math.floor(a[0].shape[0]*(1-s.validationSplit)),_=a[0].shape[0];f=uc(a,R,_),i=a,a=uc(a,0,R),p=uc(r,R,_),l=r,r=uc(r,0,R),S=f.concat(p)}else s.validationSteps!=null&&(v=!0);const C=a.concat(r).concat(m);this.checkTrainableWeightsConsistency();const $=this.makeTrainFunction(),T=this.getDedupedMetricsNames();let I,D;v?(this.makeTestFunction(),I=this.testFunction,D=T.slice().concat(T.map(R=>"val_"+R))):(I=null,S=[],D=T.slice());const z=UI(s.callbacks,s.yieldEvery);return await this.fitLoop($,C,T,y,s.epochs,s.verbose,z,I,S,s.shuffle,D,s.initialEpoch,null,null)}finally{this.isTraining=!1,ba(a,t),ba(r,e),ba(i,t),ba(l,e),ba(f,u),ba(p,h),m!=null&&Gt(m)}}async fitLoop(t,e,s,a,r,i,l,u,h,f,p,m,y,b){a==null&&(a=32),r==null&&(r=1),f==null&&(f=!0),m==null&&(m=0);let w=!1;if(u!=null&&h!=null&&(w=!0),b!=null&&(w=!0,y==null))throw new X("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const v=this.checkNumSamples(e,a,y,"steps_per_epoch");let S;v!=null&&(S=$a(0,v)),i==null&&(i=1);const{callbackList:C,history:$}=WI(l,i,r,m,v,y,a,w,p);C.setModel(this),this.history=$,await C.onTrainBegin(),this.stopTraining_=!1;for(let T=m;T<r;++T){await C.onEpochBegin(T);const I={};if(y!=null)throw new Wt("stepsPerEpoch mode is not implemented yet.");{if(f==="batch")throw new Wt("batch shuffling is not implemneted yet");f&&bF(S);const D=Gn(S),z=Db(v,a);for(let B=0;B<z.length;++B){const R={};if(await C.onBatchBegin(B,R),nt(()=>{const _=z[B][0],A=z[B][1],W=uo(D,_,A-_);R.batch=B,R.size=A-_;const K=v0(e,W),tt=t(K);for(let Q=0;Q<s.length;++Q){const P=s[Q],et=tt[Q];R[P]=et,pn(et)}if(B===z.length-1&&w){const Q=this.testLoop(u,h,a);for(let P=0;P<s.length;++P){const et=s[P],Y=Q[P];pn(Y),I["val_"+et]=Y}}}),await C.onBatchEnd(B,R),PI(R),this.stopTraining_)break}D.dispose()}if(await C.onEpochEnd(T,I),this.stopTraining_)break}return await C.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return wH(this,t,e)}async trainOnBatch(t,e){const s=await this.standardizeUserData(t,e),a=s[0],r=s[1],l=this.makeTrainFunction()(a.concat(r)),u=[];for(const h of l){const f=await h.data();u.push(f[0])}return Gt(l),ba(s[0],t),ba(s[1],e),Jn(u)}getNamedWeights(t){const e=[],s=t!=null&&t.trainableOnly,a=s?this.trainableWeights:this.weights,r=this.getWeights(s);for(let i=0;i<a.length;++i)s&&!a[i].trainable||e.push({name:a[i].originalName,tensor:r[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=KC().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-KC().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=mr(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>mr(e))}else{const e=Object.keys(this.loss);t={};const s=this.loss;for(const a of e)if(typeof s[a]=="string")t[a]=mr(s[a]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[mr(bf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>mr(bf(t)));{const t={};for(const e in this.metrics)t[e]=mr(bf(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=b0(t.optimizer_config),s=vr(e);let a;if(typeof t.loss=="string")a=so(t.loss);else if(Array.isArray(t.loss))a=t.loss.map(i=>so(i));else if(t.loss!=null){a={};for(const i in t.loss)a[i]=so(t.loss[i])}let r;if(Array.isArray(t.metrics))r=t.metrics.map(i=>so(i));else if(t.metrics!=null){r={};for(const i in t.metrics)r[i]=so(t.metrics[i])}this.compile({loss:a,metrics:r,optimizer:s})}async save(t,e){if(typeof t=="string"){const h=h$(t);if(h.length===0)throw new X(`Cannot find any save handlers for URL '${t}'`);if(h.length>1)throw new X(`Found more than one (${h.length}) save handlers for URL '${t}'`);t=h[0]}if(t.save==null)throw new X("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await e0(this.getNamedWeights(e)),l={modelTopology:this.toJSON(null,!1),format:EH,generatedBy:`TensorFlow.js tfjs-layers v${YI}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){l.trainingConfig=this.getTrainingConfig();const h="optimizer",{data:f,specs:p}=await e0(await this.optimizer.getWeights(),h);s.specs.push(...p),s.data=l$([s.data,f])}return this.userDefinedMetadata!=null&&(RT(this.userDefinedMetadata,this.name,!0),l.userDefinedMetadata=this.userDefinedMetadata),l.weightData=s.data,l.weightSpecs=s.specs,t.save(l)}setUserDefinedMetadata(t){RT(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Rl.className="Model";xt(Rl);class eE extends Rl{}eE.className="Functional";xt(eE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ec extends Rl{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:Gm("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new X(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Ec||t instanceof Rl;let s;if(e){if(s=t,s.outputs.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new X("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new X("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const a=RG({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(a)}if(e)this.outputs=s.outputs,this.inputs=s.inputs;else{if(t.inboundNodes.length!==1)throw new X(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=LI(this.outputs[0])}this.inboundNodes=[],new qm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:wo(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{const a=t.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(ue(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Rl({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,s=console.log){this.built||this.build(),super.summary(t,e,s)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,s={}){if(!this.built)throw new ea("The model needs to be compiled before being used.");return this.model.evaluate(t,e,s)}async evaluateDataset(t,e){if(!this.built)throw new ea("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,s={}){if(!this.built)throw new ea("The model needs to be compiled before being used.");return this.model.fit(t,e,s)}async fitDataset(t,e){if(!this.built)throw new ea("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,s={},a=!1){let r,i={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new X("Legacy serialization format not supported yet.");r=e}else O(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=e.layers,delete e.layers,i=e;const l=new t(i);if(!(l instanceof Ec))throw new Wt(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(const u of r){const f=vr(u,void 0,a);a&&f.setFastWeightInitDuringBuild(!0),l.add(f)}return l}set stopTraining(t){if(this.model==null)throw new X("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new X("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const s={};s.className=e.getClassName(),s.config=e.getConfig(),t.push(s)}return{name:this.name,layers:t}}}Ec.className="Sequential";xt(Ec);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Fn=class extends Jl{getConfig(){return{}}};class nE extends Fn{apply(t,e=1){return mG(t,e)}}nE.className="elu";xt(nE);class sE extends Fn{apply(t){return b1(t)}}sE.className="selu";xt(sE);class aE extends Fn{apply(t){return Ka(t)}}aE.className="relu";xt(aE);class rE extends Fn{apply(t){return nt(()=>xo(6,Ka(t)))}}rE.className="relu6";xt(rE);class iE extends Fn{apply(t){return t}}iE.className="linear";xt(iE);class oE extends Fn{apply(t){return Ua(t)}}oE.className="sigmoid";xt(oE);class lE extends Fn{apply(t){return yG(t)}}lE.className="hardSigmoid";xt(lE);class uE extends Fn{apply(t){return Yl(t)}}uE.className="softplus";xt(uE);class cE extends Fn{apply(t){return gG(t)}}cE.className="softsign";xt(cE);class hE extends Fn{apply(t){return bo(t)}}hE.className="tanh";xt(hE);let Cv=class extends Fn{apply(t,e=-1){return Om(t,e)}};Cv.className="softmax";xt(Cv);class dE extends Fn{apply(t,e=-1){return u1(t,e)}}dE.className="logSoftmax";xt(dE);class fE extends Fn{apply(t){return nt(()=>nt(()=>{const e=Math.sqrt(2),s=H(.5,yt(1,i1(Dt(t,e))));return H(t,s)}))}}fE.className="gelu";xt(fE);class pE extends Fn{apply(t){return nt(()=>H(.5,H(t,yt(1,bo(H(Tn(Dt(2,Math.PI)),yt(t,H(.044715,wr(t,3)))))))))}}pE.className="gelu_new";xt(pE);class mE extends Fn{apply(t){return nt(()=>H(t,bo(Yl(t))))}}mE.className="mish";xt(mE);class gE extends Fn{apply(t,e=1){return nt(()=>H(Ua(H(t,e)),t))}}gE.className="swish";xt(gE);function fi(n){return n.getClassName()}function Ob(n,t={}){return Uh(n,Qs.getMap().classNameMap,t,"activation")}function pi(n){if(n==null){const t={};return t.className="linear",t.config={},Ob(t)}if(typeof n=="string"){const t={};return t.className=n,t.config={},Ob(t)}else return n instanceof Fn?n:Ob(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function AH(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class yE extends Jl{}class bE extends yE{constructor(t){super(),AH(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return nt(()=>{let e=nn([1]);return this.hasL1&&(e=yt(e,Et(H(this.l1,en(t))))),this.hasL2&&(e=yt(e,Et(H(this.l2,Gh(t))))),q(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}bE.className="L1L2";xt(bE);const zT={l1l2:"L1L2"};function Se(n){return cv(n)}function MT(n,t={}){return Uh(n,Qs.getMap().classNameMap,t,"regularizer")}function Ae(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in zT?zT[n]:n,config:{}};return MT(e)}else return n instanceof yE?n:MT(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class xE extends Xt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=Vt(t);let s=Ka(t);return this.maxValue!=null&&(s=fs(s,0,this.maxValue)),s}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}xE.className="ReLU";xt(xE);class vE extends Xt{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=Vt(t);return Sm(s,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}vE.className="LeakyReLU";xt(vE);class wE extends Xt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Ee(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ae(t.alphaRegularizer),this.alphaConstraint=ln(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new X(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=ue(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const a of this.sharedAxes)e[a-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let a=1;a<t.length;++a)s[a]=t[a];this.inputSpec=[new an({ndim:t.length,axes:s})],this.built=!0}call(t,e){return t=Vt(t),Em(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Oe(this.alphaInitializer),alphaRegularizer:Se(this.alphaRegularizer),alphaConstraint:on(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}wE.className="PReLU";xt(wE);let SE=class extends Xt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new Wt(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=Vt(t);return Fh(s)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};SE.className="ELU";xt(SE);class NE extends Xt{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const s=Vt(t);return H(s,Nt(xs(s,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}NE.className="ThresholdedReLU";xt(NE);class CE extends Xt{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new Cv().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){return nt(()=>{let s=Vt(t);const a=e.mask;if(a!=null){const r=H(kt(es(s.shape),Nt(a,s.dtype)),Lt(-1e9));s=yt(s,r)}return this.axis instanceof Array?this.axis.length>1?ps(kt(s,Cm(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}CE.className="Softmax";xt(CE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Dl(n,t,e){if(typeof n=="number")return wo(n,t);if(n.length!==t)throw new X(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const a=n[s];if(!hG(a))throw new X(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${a}`)}return n}function Ca(n,t,e,s,a=1){if(n==null)return n;const r=t+(t-1)*(a-1);let i;return e==="same"?i=n:i=n-r+1,Math.floor((i+s-1)/s)}function Ba(n,t,e,s){if(n==null)return null;if(s==="valid")n=n*t+di([e-t,0]);else if(s==="same")n=n*t;else throw new X(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Tv(n,t){return nt(()=>(Xe(t),t==="channelsFirst"?ae(n,[0,2,3,1]):n))}function TE(n,t){return nt(()=>(Xe(t),t==="channelsFirst"?ae(n,[0,2,3,4,1]):n))}function RH(n,t,e,s=1,a="valid",r,i=1){return nt(()=>{if(r==null&&(r=ka()),Xe(r),n.shape.length!==3)throw new X(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(t.shape.length!==3)throw new X(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new X(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(r==="channelsFirst"&&(n=ae(n,[0,2,1])),a==="causal")throw new Wt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let l=e1(n,t,s,a==="same"?"same":"valid","NWC",i);return e!=null&&(l=Aa(l,e)),l})}function BT(n,t,e,s=[1,1],a="valid",r,i,l=null){return nt(()=>{if(r==null&&(r=ka()),Xe(r),n.rank!==3&&n.rank!==4)throw new X(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(t.rank!==3&&t.rank!==4)throw new X(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let u=Tv(n,r);if(a==="causal")throw new Wt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=bk({x:u,filter:t,strides:s,pad:a==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:l}),r==="channelsFirst"&&(u=ae(u,[0,3,1,2])),u})}function DH(n,t,e,s=[1,1,1],a="valid",r,i){return nt(()=>{if(r==null&&(r=ka()),Xe(r),n.rank!==4&&n.rank!==5)throw new X(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(t.rank!==4&&t.rank!==5)throw new X(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let l=TE(n,r);if(a==="causal")throw new Wt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return l=M$(l,t,s,a==="same"?"same":"valid","NDHWC",i),e!=null&&(l=Aa(l,e)),r==="channelsFirst"&&(l=ae(l,[0,4,1,2,3])),l})}class Km extends Xt{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Km.verifyArgs(e),this.rank=t,mn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Wt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Dl(e.kernelSize,t,"kernelSize"),this.strides=Dl(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,Os(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Xe(this.dataFormat),this.activation=pi(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=Ee(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=ln(e.biasConstraint),this.biasRegularizer=Ae(e.biasRegularizer),this.activityRegularizer=Ae(e.activityRegularizer),this.dilationRate=Dl(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new X(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new X(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new X(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Ma("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!hv(t.kernelSize,"number",1,3))throw new X(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:fi(this.activation),useBias:this.useBias,biasInitializer:Oe(this.biasInitializer),biasRegularizer:Se(this.biasRegularizer),activityRegularizer:Se(this.activityRegularizer),biasConstraint:on(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class tu extends Km{constructor(t,e){super(t,e),this.kernel=null,tu.verifyArgs(e),this.filters=e.filters,mn(this.filters,"filters"),this.kernelInitializer=Ee(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=ln(e.kernelConstraint),this.kernelRegularizer=Ae(e.kernelRegularizer)}build(t){t=ue(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new X(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],a=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return nt(()=>{t=Vt(t);let s;const a=this.bias==null?null:this.bias.read(),r=wI(this.activation.getClassName());if(r!=null&&this.rank===2)s=BT(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)s=RH(t,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=BT(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=DH(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Wt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=ue(t);const e=[],s=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let r=0;r<s.length;++r){const i=Ca(s[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);e.push(i)}let a=[t[0]];return this.dataFormat==="channelsLast"?(a=a.concat(e),a.push(this.filters)):(a.push(this.filters),a=a.concat(e)),a}getConfig(){const t={filters:this.filters,kernelInitializer:Oe(this.kernelInitializer),kernelRegularizer:Se(this.kernelRegularizer),kernelConstraint:on(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new X(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Xh extends tu{constructor(t){super(2,t),Xh.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!hv(t.kernelSize,"number",1,2))throw new X(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Xh.className="Conv2D";xt(Xh);class Kh extends tu{constructor(t){super(3,t),Kh.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new X(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Kh.className="Conv3D";xt(Kh);class $E extends Xh{constructor(t){if(super(t),this.inputSpec=[new an({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=ue(t),t.length!==4)throw new X("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new an({ndim:4,axes:{[e]:s}})],this.built=!0}call(t,e){return nt(()=>{let s=Vt(t);if(s.shape.length!==4)throw new X(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape,r=a[0];let i,l;this.dataFormat==="channelsFirst"?(i=2,l=3):(i=1,l=2);const u=a[i],h=a[l],f=this.kernelSize[0],p=this.kernelSize[1],m=this.strides[0],y=this.strides[1],b=Ba(u,m,f,this.padding),w=Ba(h,y,p,this.padding),v=[r,b,w,this.filters];this.dataFormat!=="channelsLast"&&(s=ae(s,[0,2,3,1]));let S=s1(s,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(S=ae(S,[0,3,1,2])),this.bias!=null&&(S=Aa(S,this.bias.read(),this.dataFormat)),this.activation!=null&&(S=this.activation.apply(S)),S})}computeOutputShape(t){t=ue(t);const e=t.slice();let s,a,r;this.dataFormat==="channelsFirst"?(s=1,a=2,r=3):(s=3,a=1,r=2);const i=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],h=this.strides[1];return e[s]=this.filters,e[a]=Ba(e[a],u,i,this.padding),e[r]=Ba(e[r],h,l,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}$E.className="Conv2DTranspose";xt($E);class kE extends Kh{constructor(t){if(super(t),this.inputSpec=[new an({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=ue(t),t.length!==5)throw new X("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new an({ndim:5,axes:{[e]:s}})],this.built=!0}call(t,e){return nt(()=>{let s=Vt(t);if(s.shape.length!==5)throw new X(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape,r=a[0];let i,l,u;this.dataFormat==="channelsFirst"?(u=2,i=3,l=4):(u=1,i=2,l=3);const h=a[u],f=a[i],p=a[l],m=this.kernelSize[0],y=this.kernelSize[1],b=this.kernelSize[2],w=this.strides[0],v=this.strides[1],S=this.strides[2],C=Ba(h,w,m,this.padding),$=Ba(f,v,y,this.padding),T=Ba(p,S,b,this.padding),I=[r,C,$,T,this.filters];this.dataFormat!=="channelsLast"&&(s=ae(s,[0,2,3,4,1]));let D=V$(s,this.kernel.read(),I,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(D=ae(D,[0,4,1,2,3])),this.bias!==null&&(D=Aa(D,this.bias.read(),this.dataFormat)),this.activation!==null&&(D=this.activation.apply(D)),D})}computeOutputShape(t){t=ue(t);const e=t.slice();let s,a,r,i;this.dataFormat==="channelsFirst"?(s=1,a=2,r=3,i=4):(s=4,a=1,r=2,i=3);const l=this.kernelSize[0],u=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],p=this.strides[1],m=this.strides[2];return e[s]=this.filters,e[a]=Ba(e[a],f,l,this.padding),e[r]=Ba(e[r],p,u,this.padding),e[i]=Ba(e[i],m,h,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}kE.className="Conv3DTranspose";xt(kE);class IE extends tu{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new X("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new X("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new X(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Ee(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ae(e.depthwiseRegularizer),this.depthwiseConstraint=ln(e.depthwiseConstraint),this.pointwiseInitializer=Ee(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ae(e.pointwiseRegularizer),this.pointwiseConstraint=ln(e.pointwiseConstraint)}build(t){if(t=ue(t),t.length<this.rank+2)throw new X(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new X(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const s=t[e],a=this.kernelSize.concat([s,this.depthMultiplier]),r=[];for(let l=0;l<this.rank;++l)r.push(1);r.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new an({ndim:this.rank+2,axes:{[e]:s}})],this.built=!0}call(t,e){return nt(()=>{t=Vt(t);let s;if(this.rank===1)throw new Wt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=ae(t,[0,2,3,1])),s=x1(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Aa(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=ae(s,[0,3,1,2])),s})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Oe(this.depthwiseInitializer),t.pointwiseInitializer=Oe(this.pointwiseInitializer),t.depthwiseRegularizer=Se(this.depthwiseRegularizer),t.pointwiseRegularizer=Se(this.pointwiseRegularizer),t.depthwiseConstraint=on(this.depthwiseConstraint),t.pointwiseConstraint=on(this.pointwiseConstraint),t}}IE.className="SeparableConv";class EE extends IE{constructor(t){super(2,t)}}EE.className="SeparableConv2D";xt(EE);class Ym extends tu{constructor(t){super(1,t),Ym.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!hv(t.kernelSize,"number",1,1))throw new X(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Ym.className="Conv1D";xt(Ym);class AE extends Xt{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return nt(()=>{if(t=Vt(t),this.dataFormat==="channelsLast"){const s=yf(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return yf(s,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=yf(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return yf(s,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}AE.className="Cropping2D";xt(AE);class RE extends Xt{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Xe(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,lG(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],s=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,s]}else{const e=t[1]==null?null:this.size[0]*t[1],s=t[2]==null?null:this.size[1]*t[2];return[t[0],e,s,t[3]]}}call(t,e){return nt(()=>{let s=Vt(t);const a=s.shape;if(this.dataFormat==="channelsFirst"){s=ae(s,[0,2,3,1]);const r=this.size[0]*a[2],i=this.size[1]*a[3],l=this.interpolation==="nearest"?ta.resizeNearestNeighbor(s,[r,i]):ta.resizeBilinear(s,[r,i]);return ae(l,[0,3,1,2])}else{const r=this.size[0]*a[1],i=this.size[1]*a[2];return this.interpolation==="nearest"?ta.resizeNearestNeighbor(s,[r,i]):ta.resizeBilinear(s,[r,i])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}RE.className="UpSampling2D";xt(RE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function OH(n,t,e=[1,1],s="valid",a,r){return nt(()=>{a==null&&(a=ka()),Xe(a);let i=Tv(n,a);if(n.rank!==4)throw new X(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(t.rank!==4)throw new X(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=_h(i,t,e,s==="same"?"same":"valid","NHWC",r),a==="channelsFirst"&&(i=ae(i,[0,3,1,2])),i})}class DE extends Km{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Ee(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=ln(t.depthwiseConstraint),this.depthwiseRegularizer=Ae(t.depthwiseRegularizer)}build(t){if(t=ue(t),t.length<4)throw new X(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new X(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const s=t[e],a=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return nt(()=>{t=Vt(t);let s=OH(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Aa(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(t){t=ue(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],a=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=Ca(e,this.kernelSize[0],this.padding,this.strides[0]),i=Ca(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],a,r,i]:[t[0],r,i,a]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Oe(this.depthwiseInitializer),t.depthwiseRegularizer=Se(this.depthwiseRegularizer),t.depthwiseConstraint=on(this.depthwiseRegularizer),t}}DE.className="DepthwiseConv2D";xt(DE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function OE(n,t,e,s){if(Array.isArray(n)){if(t!=null||e!=null)throw new X("When inputs is an array, neither initialState or constants should be provided");s!=null&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function a(r){return r==null||Array.isArray(r)?r:[r]}return t=a(t),e=a(e),{inputs:n,initialState:t,constants:e}}function _E(n,t,e,s=!1,a,r,i=!1,l=!1){return nt(()=>{const u=t.shape.length;if(u<3)throw new X(`Input should be at least 3D, but is ${u}D.`);const h=[1,0].concat($a(2,u));t=ae(t,h),i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=Nt(Nt(a,"bool"),"float32"),a.rank===u-1&&(a=Un(a,-1)),a=ae(a,h)),s&&(t=ia(t,0),a!=null&&(a=ia(a,0)));const f=[];let p,m=e;const y=t.shape[0],b=oa(t);let w;a!=null&&(w=oa(a));for(let S=0;S<y;++S){const C=b[S],$=nt(()=>n(C,m));if(a==null)p=$[0],m=$[1];else{const T=nt(()=>{const I=w[S],D=kt(Rs(I),I),z=yt(H($[0],I),H(m[0],D)),B=m.map((R,_)=>yt(H($[1][_],I),H(R,D)));return{output:z,newStates:B}});p=T.output,m=T.newStates}l&&f.push(p)}let v;return l&&(v=ms(f,1)),[p,v,m]})}class $i extends Xt{constructor(t){super(t);let e;if(t.cell==null)throw new X("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new Iv({cells:t.cell}):e=t.cell,e.stateSize==null)throw new X("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new an({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return $a(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){m0(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const s=e[0];let a;if(this.returnSequences?a=[t[0],t[1],s]:a=[t[0],s],this.returnState){const r=[];for(const i of e)r.push([t[0],i]);return[a].concat(r)}else return a}computeMask(t,e){return nt(()=>{Array.isArray(e)&&(e=e[0]);const s=this.returnSequences?e:null;if(this.returnState){const a=this.states.map(r=>null);return[s].concat(a)}else return s})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let s=0;s<t;++s)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new Wt("Constants support is not implemented in RNN yet.");m0(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new an({shape:[e,null,...s]});const a=[t[0]].concat(t.slice(2));this.cell.build(a);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Jt(this.stateSpec.map(i=>i.shape[i.shape.length-1]),r))throw new X(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(i=>new an({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){nt(()=>{if(!this.stateful)throw new za("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>nn([s,a])):this.states_=[nn([s,this.cell.stateSize])];else if(t==null)Gt(this.states_),this.keptStates!=null&&(Gt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>nn([s,a])):this.states_[0]=nn([s,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):Gt(this.states_);for(let a=0;a<this.states_.length;++a){const r=t[a],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,l=[s,i];if(!Jt(r.shape,l))throw new X(`State ${a} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${r.shape}`);this.states_[a]=r}}this.states_=this.states_.map(a=>pn(a.clone()))})}apply(t,e){let s=e==null?null:e.initialState,a=e==null?null:e.constants;e==null&&(e={});const r=OE(t,s,a,this.numConstants);t=r.inputs,s=r.initialState,a=r.constants;let i=[],l=[];if(s!=null){e.initialState=s,i=i.concat(s),this.stateSpec=[];for(const h of s)this.stateSpec.push(new an({shape:h.shape}));l=l.concat(this.stateSpec)}if(a!=null&&(e.constants=a,i=i.concat(a),this.numConstants=a.length),i[0]instanceof ja){const h=[t].concat(i),f=this.inputSpec.concat(l),p=this.inputSpec;this.inputSpec=f;const m=super.apply(h,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return nt(()=>{const s=e==null?null:e.mask,a=e==null?null:e.training;let r=e==null?null:e.initialState;t=Vt(t),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new X(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const l={training:a},h=_E((b,w)=>{const v=this.cell.call([b].concat(w),l);return[v[0],v.slice(1)]},t,r,this.goBackwards,s,null,this.unroll,this.returnSequences),f=h[0],p=h[1],m=h[2];this.stateful&&this.resetStates(m,a);const y=this.returnSequences?p:f;return this.returnState?[y].concat(m):y})}getInitialState(t){return nt(()=>{let e=nn(t.shape);return e=Et(e,[1,2]),e=Wh(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?f0(e,[1,s]):e):this.cell.stateSize>1?[f0(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===$i.className&&(e.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),t),e)}static fromConfig(t,e,s={}){const a=e.cell,r=vr(a,s);return new t(Object.assign(e,{cell:r}))}}$i.className="RNN";xt($i);class Zm extends Xt{}class $v extends Zm{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,mn(this.units,"units"),this.activation=pi(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ee(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ee(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ee(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ae(t.kernelRegularizer),this.recurrentRegularizer=Ae(t.recurrentRegularizer),this.biasRegularizer=Ae(t.biasRegularizer),this.kernelConstraint=ln(t.kernelConstraint),this.recurrentConstraint=ln(t.recurrentConstraint),this.biasConstraint=ln(t.biasConstraint),this.dropout=Bl([1,di([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Bl([1,di([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=ue(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return nt(()=>{if(t=t,t.length!==2)throw new X(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let s=t[1];t=t[0];const a=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mi({ones:()=>Rs(t),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mi({ones:()=>Rs(s),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));let r;const i=this.dropoutMask,l=this.recurrentDropoutMask;i!=null?r=Ha(H(t,i),this.kernel.read()):r=Ha(t,this.kernel.read()),this.bias!=null&&(r=Aa(r,this.bias.read())),l!=null&&(s=H(s,l));let u=yt(r,Ha(s,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:fi(this.activation),useBias:this.useBias,kernelInitializer:Oe(this.kernelInitializer),recurrentInitializer:Oe(this.recurrentInitializer),biasInitializer:Oe(this.biasInitializer),kernelRegularizer:Se(this.kernelRegularizer),recurrentRegularizer:Se(this.recurrentRegularizer),biasRegularizer:Se(this.biasRegularizer),activityRegularizer:Se(this.activityRegularizer),kernelConstraint:on(this.kernelConstraint),recurrentConstraint:on(this.recurrentConstraint),biasConstraint:on(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}$v.className="SimpleRNNCell";xt($v);class FE extends $i{constructor(t){t.cell=new $v(t),super(t)}call(t,e){return nt(()=>{this.cell.dropoutMask!=null&&(Gt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Gt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}static fromConfig(t,e){return new t(e)}}FE.className="SimpleRNN";xt(FE);class kv extends Zm{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new X("GRUCell does not support reset_after parameter set to true.");this.units=t.units,mn(this.units,"units"),this.activation=pi(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=pi(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ee(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ee(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ee(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ae(t.kernelRegularizer),this.recurrentRegularizer=Ae(t.recurrentRegularizer),this.biasRegularizer=Ae(t.biasRegularizer),this.kernelConstraint=ln(t.kernelConstraint),this.recurrentConstraint=ln(t.recurrentConstraint),this.biasConstraint=ln(t.biasConstraint),this.dropout=Bl([1,di([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Bl([1,di([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=ue(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return nt(()=>{if(t=t,t.length!==2)throw new X(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training==null?!1:e.training;let a=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mi({ones:()=>Rs(t),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mi({ones:()=>Rs(a),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let l,u,h;0<this.dropout&&this.dropout<1&&(t=H(t,r[0]));let f=Ha(t,this.kernel.read());this.useBias&&(f=Aa(f,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=H(a,i[0]));const p=this.recurrentKernel.read(),[m,y]=hs(p,[2*this.units,this.units],p.rank-1),b=Ha(a,m),[w,v,S]=hs(f,3,f.rank-1),[C,$]=hs(b,2,b.rank-1);l=this.recurrentActivation.apply(yt(w,C)),u=this.recurrentActivation.apply(yt(v,$));const T=Ha(H(u,a),y);h=this.activation.apply(yt(S,T));const I=yt(H(l,a),H(yt(1,Ie(l)),h));return[I,I]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:fi(this.activation),recurrentActivation:fi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Oe(this.kernelInitializer),recurrentInitializer:Oe(this.recurrentInitializer),biasInitializer:Oe(this.biasInitializer),kernelRegularizer:Se(this.kernelRegularizer),recurrentRegularizer:Se(this.recurrentRegularizer),biasRegularizer:Se(this.biasRegularizer),activityRegularizer:Se(this.activityRegularizer),kernelConstraint:on(this.kernelConstraint),recurrentConstraint:on(this.recurrentConstraint),biasConstraint:on(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}kv.className="GRUCell";xt(kv);class LE extends $i{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new kv(t),super(t)}call(t,e){return nt(()=>{this.cell.dropoutMask!=null&&(Gt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Gt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}LE.className="GRU";xt(LE);class Qm extends Zm{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,mn(this.units,"units"),this.activation=pi(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=pi(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ee(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ee(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ee(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Ae(t.kernelRegularizer),this.recurrentRegularizer=Ae(t.recurrentRegularizer),this.biasRegularizer=Ae(t.biasRegularizer),this.kernelConstraint=ln(t.kernelConstraint),this.recurrentConstraint=ln(t.recurrentConstraint),this.biasConstraint=ln(t.biasConstraint),this.dropout=Bl([1,di([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Bl([1,di([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=ue(t);const s=t[t.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let a;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,i=this.units;a=new(e=class extends ua{apply(u,h){const f=r.apply([i]),p=new fv().apply([i]),m=r.apply([i*2]);return ST(ST(f,p),m)}},e.className="CustomInit",e)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return nt(()=>{const s=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new X(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let a=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mi({ones:()=>Rs(t),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mi({ones:()=>Rs(a),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,l=this.recurrentDropoutMask;let u,h,f,p;0<this.dropout&&this.dropout<1&&(t=H(t,i[0]));let m=Ha(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=H(a,l[0])),m=yt(m,Ha(a,this.recurrentKernel.read())),this.useBias&&(m=Aa(m,this.bias.read()));const[y,b,w,v]=hs(m,4,m.rank-1);u=this.recurrentActivation.apply(y),h=this.recurrentActivation.apply(b),f=yt(H(h,r),H(u,this.activation.apply(w))),p=this.recurrentActivation.apply(v);const S=H(p,this.activation.apply(f));return[S,S,f]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:fi(this.activation),recurrentActivation:fi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Oe(this.kernelInitializer),recurrentInitializer:Oe(this.recurrentInitializer),biasInitializer:Oe(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Se(this.kernelRegularizer),recurrentRegularizer:Se(this.recurrentRegularizer),biasRegularizer:Se(this.biasRegularizer),activityRegularizer:Se(this.activityRegularizer),kernelConstraint:on(this.kernelConstraint),recurrentConstraint:on(this.recurrentConstraint),biasConstraint:on(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}Qm.className="LSTMCell";xt(Qm);class zE extends $i{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Qm(t),super(t)}call(t,e){return nt(()=>{this.cell.dropoutMask!=null&&(Gt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Gt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}zE.className="LSTM";xt(zE);class Iv extends Zm{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return nt(()=>{t=t;let s=t.slice(1);const a=[];for(const l of this.cells.slice().reverse())Array.isArray(l.stateSize)?a.push(s.splice(0,l.stateSize.length)):a.push(s.splice(0,1));a.reverse();const r=[];let i;for(let l=0;l<this.cells.length;++l){const u=this.cells[l];s=a[l],l===0?i=[t[0]].concat(s):i=[i[0]].concat(s),i=u.call(i,e),r.push(i.slice(1))}s=[];for(const l of r.slice().reverse())s.push(...l);return[i[0]].concat(s)})}build(t){m0(t)&&(t=t[0]),t=t;let e;this.cells.forEach((s,a)=>{lo(`RNNCell_${a}`,()=>{s.build(t),Array.isArray(s.stateSize)?e=s.stateSize[0]:e=s.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=r=>({className:r.getClassName(),config:r.getConfig()}),a={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),a)}static fromConfig(t,e,s={}){const a=[];for(const r of e.cells)a.push(vr(r,s));return new t({cells:a})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return g0(t)}setWeights(t){const e=[];for(const s of this.cells){const a=s.weights.length,r=t.splice(a);for(let i=0;i<s.weights.length;++i)e.push([s.weights[i],r[i]])}vv(e)}}Iv.className="StackedRNNCells";xt(Iv);function mi(n){const{ones:t,rate:e,training:s=!1,count:a=1,dropoutFunc:r}=n,i=()=>r!=null?r(t(),e):II(t(),e),l=()=>Hh(i,t,s);return!a||a<=1?pn(l().clone()):Array(a).fill(void 0).map(l).map(h=>pn(h.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var _H=function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,s=Object.getOwnPropertySymbols(n);a<s.length;a++)t.indexOf(s[a])<0&&Object.prototype.propertyIsEnumerable.call(n,s[a])&&(e[s[a]]=n[s[a]]);return e};class ME extends $i{constructor(t){if(t.unroll)throw new Wt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Wt("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new an({ndim:5})]}call(t,e){return nt(()=>{if(this.cell.dropoutMask!=null&&(Gt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Gt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new X("ConvRNN2D cell does not support constants");const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return nt(()=>{const{stateSize:e}=this.cell,s=t.shape,a=this.computeSingleOutputShape(s),r=[a[0],...a.slice(2)],i=nn(r);return Array.isArray(e)?Array(e.length).fill(i):[i]})}resetStates(t,e=!1){nt(()=>{if(!this.stateful)throw new za("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,a=this.computeSingleOutputShape(s),r=[a[0],...a.slice(2)];if(s[0]==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>nn(r)):this.states_=[nn(r)];else if(t==null)Gt(this.states_),this.keptStates!=null&&(Gt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>nn(r)):this.states_[0]=nn(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Gt(this.states_);for(let l=0;l<this.states_.length;++l){const u=t[l],h=r;if(!Jt(u.shape,h))throw new X(`State ${l} is incompatible with layer ${this.name}: expected shape=${h}, received shape=${u.shape}`);this.states_[l]=u}}this.states_=this.states_.map(l=>pn(l.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:s,kernelSize:a,padding:r,strides:i,dilationRate:l}=this.cell,u=e==="channelsFirst",h=t[u?3:2],f=t[u?4:3],p=Ca(h,a[0],r,i[0],l[0]),m=Ca(f,a[1],r,i[1],l[1]);return[...t.slice(0,2),...u?[s,p,m]:[p,m,s]]}}ME.className="ConvRNN2D";class Ev extends Qm{constructor(t){const{filters:e,kernelSize:s,strides:a,padding:r,dataFormat:i,dilationRate:l}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,mn(this.filters,"filters"),this.kernelSize=Dl(s,2,"kernelSize"),this.kernelSize.forEach(u=>mn(u,"kernelSize")),this.strides=Dl(a||1,2,"strides"),this.strides.forEach(u=>mn(u,"strides")),this.padding=r||"valid",Os(this.padding),this.dataFormat=i||"channelsLast",Xe(this.dataFormat),this.dilationRate=Dl(l||1,2,"dilationRate"),this.dilationRate.forEach(u=>mn(u,"dilationRate"))}build(t){var e;t=ue(t);const s=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[s]==null)throw new X(`The channel dimension of the input should be defined. Found ${t[s]}`);const a=t[s],r=4,i=this.kernelSize.concat([a,this.filters*r]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const h=this.biasInitializer,f=this.filters;u=new(e=class extends ua{apply(m,y){const b=h.apply([f]),w=es([f]),v=h.apply([f*2]);return dv([b,w,v])}},e.className="CustomInit",e)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return nt(()=>{if(t.length!==3)throw new X(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training||!1,a=t[0],r=t[1],i=t[2],l=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mi({ones:()=>Rs(a),rate:this.dropout,training:s,count:l,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,h=(M,j,lt)=>!j||!j[lt]?M:H(j[lt],M);let f=h(a,u,0),p=h(a,u,1),m=h(a,u,2),y=h(a,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mi({ones:()=>Rs(r),rate:this.recurrentDropout,training:s,count:l,dropoutFunc:this.dropoutFunc}));const b=this.recurrentDropoutMask;let w=h(r,b,0),v=h(r,b,1),S=h(r,b,2),C=h(r,b,3);const $=3,[T,I,D,z]=hs(this.kernel.read(),l,$),[B,R,_,A]=this.useBias?hs(this.bias.read(),l):[null,null,null,null];f=this.inputConv(f,T,B,this.padding),p=this.inputConv(p,I,R,this.padding),m=this.inputConv(m,D,_,this.padding),y=this.inputConv(y,z,A,this.padding);const[W,K,tt,Q]=hs(this.recurrentKernel.read(),l,$);w=this.recurrentConv(w,W),v=this.recurrentConv(v,K),S=this.recurrentConv(S,tt),C=this.recurrentConv(C,Q);const P=this.recurrentActivation.apply(yt(f,w)),et=this.recurrentActivation.apply(yt(p,v)),Y=yt(H(et,i),H(P,this.activation.apply(yt(m,S)))),at=H(this.recurrentActivation.apply(yt(y,C)),this.activation.apply(Y));return[at,at,Y]})}getConfig(){const t=super.getConfig(),{units:e}=t,s=_H(t,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),a)}inputConv(t,e,s,a){const r=hi(t,e,this.strides,a||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Aa(r,s,this.dataFormat):r}recurrentConv(t,e){return hi(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Ev.className="ConvLSTM2DCell";xt(Ev);class BE extends ME{constructor(t){const e=new Ev(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}BE.className="ConvLSTM2D";xt(BE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Av extends Xt{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,s=[];for(let a=0;a<this.noiseShape.length;++a)s.push(this.noiseShape[a]==null?e[a]:this.noiseShape[a]);return s}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t);if(0<this.rate&&this.rate<1){const a=e.training==null?!1:e.training,r=this.getNoiseShape(s);return Hh(()=>II(s,this.rate,r,this.seed),()=>s,a)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Av.className="Dropout";xt(Av);class VE extends Av{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}VE.className="SpatialDropout1D";xt(VE);class PE extends Xt{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,mn(this.units,"units"),this.activation=pi(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=Ee(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ee(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=ln(t.kernelConstraint),this.biasConstraint=ln(t.biasConstraint),this.kernelRegularizer=Ae(t.kernelRegularizer),this.biasRegularizer=Ae(t.biasRegularizer),this.activityRegularizer=Ae(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=ue(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=ue(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t),a=wI(this.activation.getClassName());let r;return a!=null?r=Ha(s,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Ha(s,this.kernel.read()),this.bias!=null&&(r=Aa(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const t={units:this.units,activation:fi(this.activation),useBias:this.useBias,kernelInitializer:Oe(this.kernelInitializer),biasInitializer:Oe(this.biasInitializer),kernelRegularizer:Se(this.kernelRegularizer),biasRegularizer:Se(this.biasRegularizer),activityRegularizer:Se(this.activityRegularizer),kernelConstraint:on(this.kernelConstraint),biasConstraint:on(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}PE.className="Dense";xt(PE);class UE extends Xt{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=ue(t);for(const e of t.slice(1))if(e==null)throw new X(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],ii(t,1)]}call(t,e){return nt(()=>{this.invokeCallHook(t,e);let s=Vt(t);if(this.dataFormat==="channelsFirst"&&s.rank>1){const a=[0];for(let r=2;r<s.rank;++r)a.push(r);a.push(1),s=ae(s,a)}return pG(s)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}UE.className="Flatten";xt(UE);class WE extends Xt{constructor(t){super(t),this.supportsMasking=!0,this.activation=pi(t.activation)}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t);return this.activation.apply(s)})}getConfig(){const t={activation:fi(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}WE.className="Activation";xt(WE);class GE extends Xt{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return nt(()=>(t=Vt(t),dG(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}GE.className="RepeatVector";xt(GE);class HE extends Xt{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const s="Total size of new array must be unchanged.",a=e.slice();let r=1,i=null;for(let u=0;u<a.length;++u){const h=a[u];if(this.isUnknown(h))if(i===null)i=u;else throw new X("Can only specifiy one unknown dimension.");else r*=h}const l=ii(t);if(i!==null){if(r===0||l%r!==0)throw new X(s);a[i]=l/r}else if(l!==r)throw new X(s);return a}computeOutputShape(t){let e=!1;for(let s=0;s<t.length;++s)if(this.isUnknown(t[s])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t),a=s.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return q(s,r)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}HE.className="Reshape";xt(HE);class qE extends Xt{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=$a(1,t.dims.length+1);if(!Jt(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new an({ndim:this.dims.length+1})]}computeOutputShape(t){t=ue(t);const e=t.slice();return this.dims.forEach((s,a)=>{e[a+1]=t[s]}),e}call(t,e){return ae(Vt(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}qE.className="Permute";xt(qE);class jE extends Xt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const s=Vt(t);return qf(zl(s,this.maskValue),-1)}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t),i=qf(zl(s,this.maskValue),-1,!0);return H(s,Nt(i,s.dtype))})}}jE.className="Masking";xt(jE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class XE extends Xt{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(pe(t.inputLength))}this.inputDim=t.inputDim,mn(this.inputDim,"inputDim"),this.outputDim=t.outputDim,mn(this.outputDim,"outputDim"),this.embeddingsInitializer=Ee(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ae(t.embeddingsRegularizer),this.activityRegularizer=Ae(t.activityRegularizer),this.embeddingsConstraint=ln(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return nt(()=>this.maskZero?(t=Vt(t),zl(t,re(t))):null)}computeOutputShape(t){if(t=ue(t),this.inputLength==null)return[...t,this.outputDim];const e=pe(this.inputLength);if(e.length!==t.length-1)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let s=0;for(let a=0;a<e.length;++a){const r=e[a],i=t[a+1];if(r!=null&&i!=null&&r!==i)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);r==null&&(e[s]=i),s++}}return[t[0],...e,this.outputDim]}call(t,e){return nt(()=>{this.invokeCallHook(t,e);let s=Vt(t);s.dtype!=="int32"&&(s=Ga(s,"int32"));const a=kI(this.embeddings.read(),q(s,[s.size]));return q(a,ue(this.computeOutputShape(s.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Oe(this.embeddingsInitializer),embeddingsRegularizer:Se(this.embeddingsRegularizer),activityRegularizer:Se(this.activityRegularizer),embeddingsConstraint:on(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}XE.className="Embedding";xt(XE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Do extends Xt{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Wt}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const s=t.slice(0,t.length-e.length);for(let a=0;a<e.length;++a){const r=t[t.length-e.length+a],i=e[a];if(r==null||i==null||r<0||i<0)s.push(null);else if(r===1)s.push(i);else if(i===1)s.push(r);else{if(r!==i)throw new X("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(r)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[ue(t)]),t=t,t.length<2)throw new X(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const r of t)r!=null&&r[0]!==null&&e.push(r[0]);if(e=ri(e),e.length>1)throw new X(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=t[0]==null?null:t[0].slice(1);for(let r=1;r<t.length;++r){const i=t[r]==null?null:t[r].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const a=t.map(r=>r.length);t.indexOf(null)===-1&&ri(a).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return nt(()=>{if(t=t,this.reshapeRequired){const s=[],a=t.map(r=>r.rank);if(a.indexOf(null)===-1){const r=di(a);for(let i of t){const l=i.rank;for(let u=0;u<r-l;++u)i=Wh(i,1);s.push(i)}return this.mergeFunction(s)}else{let r=!1;for(const u of t){const h=u.rank;if(h==null){const f=u.shape,p=f[0],m=f.slice(1).concat([p]);let y=q(u,[p].concat(ii(f.slice(1))));y=ae(y,[1,0]),y=q(y,m),s.push(y),r=!0}else if(h>1){const f=$a(1,h).concat([0]);s.push(ae(u,f)),r=!0}else s.push(u)}let i=this.mergeFunction(s);const l=i.rank;if(r){if(l==null){const u=i.shape,h=u.length,f=u[h-1],p=[f].concat(u.slice(0,u.length-1));i=q(ae(q(i,[-1,f]),[1,0]),p)}else if(l>1){const u=[l-1].concat($a(0,l-1));i=ae(i,u)}}return i}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let a=1;a<t.length;++a){const r=t[a]==null?null:t[a].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let s=[];for(const a of t)a!=null&&a[0]!==null&&s.push(a[0]);return s=ri(s),s.length===1?e=s.concat(e):e=[null].concat(e),e}computeMask(t,e){return nt(()=>{if(e==null)return null;if(!Array.isArray(e))throw new X("`mask` should be an Array");if(!Array.isArray(t))throw new X("`inputs` should be an Array");if(e.length!==t.length)throw new X(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(a=>a==null))return null;e=e.map(a=>a==null?a:Un(a,0));let s=e[0];for(let a=1;a<e.length-1;++a)s=qa(s,e[a]);return s})}}class KE extends Do{constructor(t){super(t)}mergeFunction(t){return nt(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=yt(e,t[s]);return e})}}KE.className="Add";xt(KE);class YE extends Do{constructor(t){super(t)}mergeFunction(t){return nt(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=H(e,t[s]);return e})}}YE.className="Multiply";xt(YE);class ZE extends Do{constructor(t){super(t)}mergeFunction(t){return nt(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=yt(e,t[s]);return H(1/t.length,e)})}}ZE.className="Average";xt(ZE);class QE extends Do{constructor(t){super(t)}mergeFunction(t){return nt(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=kr(e,t[s]);return e})}}QE.className="Maximum";xt(QE);class JE extends Do{constructor(t){super(t)}mergeFunction(t){return nt(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=xo(e,t[s]);return e})}}JE.className="Minimum";xt(JE);class tA extends Do{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new X("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const a of t)if(a!=null){e=!1;break}if(e)return;const s=[];for(let a=0;a<t.length;++a){const r=t[a].slice();r.splice(this.axis,1);let i=!1;for(const l of s)if(Jt(l,r)){i=!0;break}i||s.push(r)}if(s.length>1)throw new X("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return nt(()=>dv(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new X("A `Concatenate` layer should be called on a list of inputs.");const e=t,s=e[0].slice(),a=this.axis<0?s.length+this.axis:this.axis;for(const r of e.slice(1)){if(s[a]==null||r[a]==null){s[a]=null;break}s[a]+=r[a]}return s}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new X("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new X("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new X(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return nt(()=>{let s=!0;if(e.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const a=[];for(let i=0;i<t.length;++i)e[i]==null?a.push(Nt(Rs(t[i]),"bool")):e[i].rank<t[i].rank?a.push(Un(e[i],-1)):a.push(e[i]);const r=He(a,this.axis);return Jx(r,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}tA.className="Concatenate";xt(tA);function cc(n,t){for(;n<0;)n+=t;return n}function FH(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new Wt("batchDot is not implemented for tensors of 4D or higher rank yet");if(O(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),O(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),n.dtype==="complex64"||t.dtype==="complex64")throw new Wt("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,a=t.shape.length;e==null&&(e=[s-1,a-2]);const r=e;return nt(()=>{let i;if(s>a){i=s-a;const u=[];for(let h=0;h<i;++h)u.push(1);t=q(t,t.shape.concat(u))}else if(a>s){i=a-s;const u=[];for(let h=0;h<i;++h)u.push(1);n=q(n,n.shape.concat(u))}else i=0;let l;if(n.shape.length===2&&t.shape.length===2)r[0]===r[1]?l=Et(H(n,t),r[0]):l=Et(H(ae(n,[1,0]),t),r[1]);else{const u=r[0]!==n.shape.length-1,h=r[1]===t.shape.length-1;l=Yt(n,t,u,h)}if(i>0){let u;s>a?u=s+a-3:u=s-1;const h=[];for(let f=u;f<u+i;++f)h.push(f);l=Eo(l,h)}return l.shape.length===1&&(l=Un(l,1)),l})}class eA extends Do{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){O(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],s=t[1];if(e.length>3||s.length>3)throw new Wt("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,s);if(e[a[0]]!==s[a[1]])throw new X(`Dimension incompatibility: ${e[a[0]]} !== ${s[a[1]]}`)}mergeFunction(t){if(t.length!==2)throw new X(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],s=t[1],a;return Array.isArray(this.axes)?a=this.axes.map((r,i)=>cc(r,t[i].shape.length)):a=[cc(this.axes,e.shape.length),cc(this.axes,s.shape.length)],this.normalize&&(e=Qf(e,a[0]),s=Qf(s,a[1])),FH(e,s,a)}interpretAxes(t,e){let s;return Array.isArray(this.axes)?s=this.axes:s=[cc(this.axes,t.length),cc(this.axes,e.length)],s}computeOutputShape(t){O(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),s=t[1].slice();if(e.length>3||s.length>3)throw new Wt("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,s);e.splice(a[0],1),s.splice(a[1],1),s.splice(0,1);const r=e.concat(s);return r.length===1&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}eA.className="Dot";xt(eA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class nA extends Xt{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t);return Hh(()=>yt(Hm(s.shape,0,this.stddev),s),()=>s,e.training||!1)})}}nA.className="GaussianNoise";xt(nA);class sA extends Xt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return nt(()=>{this.invokeCallHook(t,e);const s=Vt(t);return this.rate>0&&this.rate<1?Hh(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return H(s,Hm(s.shape,1,r))},()=>s,e.training||!1):s})}}sA.className="GaussianDropout";xt(sA);class aA extends Xt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Vt(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return nt(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(t);return Hh(()=>{const r=Vt(t),l=-1.6732632423543772*1.0507009873554805;let u=Ni(Io(s),this.rate);u=Ga(u,"float32");const h=((1-this.rate)*(1+this.rate*l**2))**-.5,f=-h*l*this.rate,p=yt(H(r,u),H(yt(u,-1),l));return yt(H(p,h),f)},()=>Vt(t),e.training||!1)}return t})}}aA.className="AlphaDropout";xt(aA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ac(n,t,e,s,a,r=.001){let i;if(n.rank===2)i=E$(n,t,e,s,a,r);else if(n.rank===3)i=A$(n,t,e,s,a,r);else if(n.rank===4)i=R$(n,t,e,s,a,r);else throw new Wt(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}function LH(n,t,e,s,a=.001){return nt(()=>{const r=km(n,s),i=r.mean,l=r.variance;return[Ac(n,i,l,e,t,a),i,l]})}function zH(n,t,e,s,a=.001){return nt(()=>{const r=km(n,s),i=r.mean,l=r.variance,u=[];for(const b of $a(0,n.rank))s.indexOf(b)!==-1?u.push(1):u.push(n.shape[b]);const h=q(i,u),f=q(l,u),p=t==null?null:q(t,u),m=e==null?null:q(e,u);return[Ac(n,h,f,m,p,a),i,l]})}function MH(n,t,e,s,a=.001){return Jt(s.slice().sort(),$a(0,n.rank-1))?LH(n,t,e,s,a):zH(n,t,e,s,a)}class rA extends Xt{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Ee(t.betaInitializer||"zeros"),this.gammaInitializer=Ee(t.gammaInitializer||"ones"),this.movingMeanInitializer=Ee(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ee(t.movingVarianceInitializer||"ones"),this.betaConstraint=ln(t.betaConstraint),this.gammaConstraint=ln(t.gammaConstraint),this.betaRegularizer=Ae(t.betaRegularizer),this.gammaRegularizer=Ae(t.gammaRegularizer)}build(t){t=ue(t);const e=this.axis>=0?this.axis:this.axis+t.length,s=t[e];if(s==null)throw new X(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new an({ndim:t.length,axes:{[e]:s}})];const a=[s];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return nt(()=>{const s=e.training==null?!1:e.training,a=Vt(t),r=a.shape,i=r.length,l=$a(0,i),u=this.axis>=0?this.axis:this.axis+i;l.splice(u,1);const h=wo(1,i);h[u]=r[u];const f=l.slice();f.sort();const p=!Jt(f,$a(0,i).slice(0,i-1)),m=()=>{if(p){const C=q(this.movingMean.read(),h),$=q(this.movingVariance.read(),h),T=this.center?q(this.beta.read(),h):null,I=this.scale?q(this.gamma.read(),h):null;return Ac(a,C,$,T,I,this.epsilon)}else return Ac(a,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return m();const[y,b,w]=MH(a,this.gamma.read(),this.beta.read(),l,this.epsilon),v=(C,$,T)=>{nt(()=>{const I=1-T,D=C.read(),z=H(kt(D,$),I);C.write(kt(D,z))})};return(()=>{v(this.movingMean,b,this.momentum),v(this.movingVariance,w,this.momentum)})(),y})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Oe(this.betaInitializer),gammaInitializer:Oe(this.gammaInitializer),movingMeanInitializer:Oe(this.movingMeanInitializer),movingVarianceInitializer:Oe(this.movingVarianceInitializer),betaRegularizer:Se(this.betaRegularizer),gammaRegularizer:Se(this.gammaRegularizer),betaConstraint:on(this.betaConstraint),gammaConstraint:on(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}rA.className="BatchNormalization";xt(rA);class iA extends Xt{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Ee(t.betaInitializer||"zeros"),this.gammaInitializer=Ee(t.gammaInitializer||"ones"),this.betaRegularizer=Ae(t.betaRegularizer),this.gammaRegularizer=Ae(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=ue(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==ri(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(r=>t[r]),a=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(t,e){const s=Vt(t),a=s.shape,r=a.length;return nt(()=>{let{mean:l,variance:u}=km(s,this.axis,!0);const h=wo(1,r);for(const w of this.axis)h[w]=a[w];const f=w=>w!=null&&w.shape.length!==r?q(w,h):w;let p=this.scale?f(this.gamma.read()):null,m=this.center?f(this.beta.read()):null;const y=[],b=[];for(let w=0;w<r;++w)this.axis.indexOf(w)!==-1?(y.push(a[w]),b.push(1)):(y.push(1),b.push(a[w]));return l=Js(l,y),u=Js(u,y),p!=null&&(p=Js(p,b)),m!=null&&(m=Js(m,b)),Ac(s,l,u,m,p,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Oe(this.betaInitializer),gammaInitializer:Oe(this.gammaInitializer),betaRegularizer:Se(this.betaRegularizer),gammaRegularizer:Se(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}iA.className="LayerNormalization";xt(iA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function BH(n,t,e){return nt(()=>{if(n.rank!==4)throw new X(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new X("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=ka()),e!=="channelsLast"&&e!=="channelsFirst")throw new X(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return e==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Ci(n,s)})}class oA extends Xt{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?ka():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new X(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,s;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],s=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new X(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new X(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);s=t.padding[1]}this.padding=[e,s]}this.inputSpec=[new an({ndim:4})]}computeOutputShape(t){t=ue(t);let e,s;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?s=t[3]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],t[1],e,s]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?s=t[2]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],e,s,t[3]])}call(t,e){return nt(()=>BH(Vt(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}oA.className="ZeroPadding2D";xt(oA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Jm(n,t,e,s,a,r){return nt(()=>{Xe(a),NI(r),Os(s),e==null&&(e=[1,1]),s==null&&(s="valid"),a==null&&(a=ka()),r==null&&(r="max"),n=Tv(n,a);let i;const l=s==="same"?"same":"valid";return r==="max"?i=$m(n,t,e,l):i=bm(n,t,e,l),a==="channelsFirst"&&(i=ae(i,[0,3,1,2])),i})}function lA(n,t,e,s,a,r){return nt(()=>{Xe(a),NI(r),Os(s),e==null&&(e=[1,1,1]),s==null&&(s="valid"),a==null&&(a=ka()),r==null&&(r="max"),n=TE(n,a);let i;const l=s==="same"?"same":"valid";return r==="max"?i=ek(n,t,e,l):i=I$(n,t,e,l),a==="channelsFirst"&&(i=ae(i,[0,4,1,2,3])),i})}class uA extends Xt{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new X(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(mn(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new X(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);mn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Os(this.padding),this.inputSpec=[new an({ndim:3})]}computeOutputShape(t){t=ue(t);const e=Ca(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return nt(()=>{this.invokeCallHook(t,e),t=Wh(Vt(t),2);const s=this.poolingFunction(Vt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Eo(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class cA extends uA{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Xe(r),Os(a),Jm(t,e,s,a,r,"max")}}cA.className="MaxPooling1D";xt(cA);class hA extends uA{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Xe(r),Os(a),Jm(t,e,s,a,r,"avg")}}hA.className="AveragePooling1D";xt(hA);class dA extends Xt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new X(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];mn(this.poolSize,"poolSize"),mn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Xe(this.dataFormat),Os(this.padding),this.inputSpec=[new an({ndim:4})]}computeOutputShape(t){t=ue(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=Ca(e,this.poolSize[0],this.padding,this.strides[0]),s=Ca(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return nt(()=>(this.invokeCallHook(t,e),this.poolingFunction(Vt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class fA extends dA{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Xe(r),Os(a),Jm(t,e,s,a,r,"max")}}fA.className="MaxPooling2D";xt(fA);class pA extends dA{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Xe(r),Os(a),Jm(t,e,s,a,r,"avg")}}pA.className="AveragePooling2D";xt(pA);class mA extends Xt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new X(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];mn(this.poolSize,"poolSize"),mn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Xe(this.dataFormat),Os(this.padding),this.inputSpec=[new an({ndim:5})]}computeOutputShape(t){t=ue(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],a=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=Ca(e,this.poolSize[0],this.padding,this.strides[0]),s=Ca(s,this.poolSize[1],this.padding,this.strides[1]),a=Ca(a,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s,a]:[t[0],e,s,a,t[4]]}call(t,e){return nt(()=>(this.invokeCallHook(t,e),this.poolingFunction(Vt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class gA extends mA{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Xe(r),Os(a),lA(t,e,s,a,r,"max")}}gA.className="MaxPooling3D";xt(gA);class yA extends mA{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Xe(r),Os(a),lA(t,e,s,a,r,"avg")}}yA.className="AveragePooling3D";xt(yA);class bA extends Xt{constructor(t){super(t),this.inputSpec=[new an({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Wt}}class xA extends bA{constructor(t){super(t||{})}call(t,e){return nt(()=>{const s=Vt(t);return ze(s,1)})}}xA.className="GlobalAveragePooling1D";xt(xA);class vA extends bA{constructor(t){super(t||{})}call(t,e){return nt(()=>{const s=Vt(t);return aa(s,1)})}}vA.className="GlobalMaxPooling1D";xt(vA);class wA extends Xt{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Xe(this.dataFormat),this.inputSpec=[new an({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Wt}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class SA extends wA{call(t,e){return nt(()=>{const s=Vt(t);return this.dataFormat==="channelsLast"?ze(s,[1,2]):ze(s,[2,3])})}}SA.className="GlobalAveragePooling2D";xt(SA);class NA extends wA{call(t,e){return nt(()=>{const s=Vt(t);return this.dataFormat==="channelsLast"?aa(s,[1,2]):aa(s,[2,3])})}}NA.className="GlobalMaxPooling2D";xt(NA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class CA extends Xt{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const a=e.layer,r=vr(a,s);delete e.layer;const i={layer:r};return Object.assign(i,e),new t(i)}}class TA extends CA{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=ue(t),t.length<3)throw new X(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=ue(t);const e=[t[0]].concat(t.slice(2)),s=this.layer.computeOutputShape(e),a=t[1];return[s[0],a].concat(s.slice(1))}call(t,e){return nt(()=>(t=Vt(t),_E((i,l)=>[Vt(this.layer.call(i,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}TA.className="TimeDistributed";xt(TA);function VH(n){Ro(oG,"BidirectionalMergeMode",n)}const PH="concat";class $A extends CA{constructor(t){super(t);const e=t.layer.getConfig(),s={};s.className=t.layer.getClassName(),s.config=e,this.forwardLayer=vr(s),e.goBackwards=e.goBackwards!==!0;const a={};if(a.className=t.layer.getClassName(),a.config=e,this.backwardLayer=vr(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?PH:t.mergeMode,VH(this.mergeMode),t.weights)throw new Wt("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,s=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,s)),this.backwardLayer.setWeights(t.slice(s))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let s,a,r;return this.returnState&&(r=e.slice(1)),s=e[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,a=[s]):this.mergeMode==null?a=[s,s.slice()]:a=[s],this.returnState?this.mergeMode==null?a.concat(r).concat(r.slice()):[s].concat(r).concat(r.slice()):Jn(a)}apply(t,e){let s=e==null?null:e.initialState,a=e==null?null:e.constants;e==null&&(e={});const r=OE(t,s,a,this.numConstants);if(t=r.inputs,s=r.initialState,a=r.constants,Array.isArray(t)&&(s=t.slice(1),t=t[0]),(s==null||s.length===0)&&a==null)return super.apply(t,e);const i=[],l=[];if(s!=null){const h=s.length;if(h%2>0)throw new X("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=s,i.push(...s);const f=s.map(p=>new an({shape:p.shape}));this.forwardLayer.stateSpec=f.slice(0,h/2),this.backwardLayer.stateSpec=f.slice(h/2),l.push(...f)}if(a!=null)throw new Wt("Support for constants in Bidirectional layers is not implemented yet.");const u=i[0]instanceof ja;for(const h of i)if(h instanceof ja!==u)throw new X("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const h=[t].concat(i),f=this.inputSpec.concat(l),p=this.inputSpec;this.inputSpec=f;const m=super.apply(h,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return nt(()=>{const s=e.initialState;let a,r;if(s==null)a=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const u=s.slice(0,s.length/2),h=s.slice(s.length/2);a=this.forwardLayer.call(t,Object.assign(e,{initialState:u})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:h}))}let i;this.returnState&&(Array.isArray(a)&&(i=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=ia(r,1));let l;return this.mergeMode==="concat"?l=dv([a,r]):this.mergeMode==="sum"?l=yt(a,r):this.mergeMode==="ave"?l=H(.5,yt(a,r)):this.mergeMode==="mul"?l=H(a,r):this.mergeMode==null&&(l=[a,r]),this.returnState?this.mergeMode==null?l.concat(i):[l].concat(i):l})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){lo(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),lo(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[e,e]:s=e:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const r=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(r).concat(r):[s].concat(r).concat(r)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const s=vr(e.layer);if(delete e.layer,e.numConstants!=null)throw new Wt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=e;return a.layer=s,new t(a)}}$A.className="Bidirectional";xt($A);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class kA extends Xt{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return nt(()=>(t=Vt(t),t.dtype!=="float32"&&(t=Ga(t,"float32")),yt(H(t,this.scale),this.offset)))}}kA.className="Rescaling";xt(kA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:UH,cropAndResize:WH}=ta;class IA extends Xt{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,s,a,r,i,l,u){return nt(()=>{let h,f=!1;const p=e/i,m=s/l,y=(a+e)/i,b=(r+s)/l,w=[p,m,y,b],v=[];t.rank===3?(f=!0,h=ms([t])):h=t;for(let I=0;I<h.shape[0];I++)v.push(w);const S=Na(v,[v.length,4]),C=Ml(0,v.length,1,"int32"),T=WH(h,S,C,[a,r],"nearest");return Ga(f?Vt(oa(T)):T,u)})}upsize(t,e,s,a){return nt(()=>{const r=UH(t,[e,s]);return Ga(r,a)})}call(t,e){return nt(()=>{const s=Vt(t),a=s.dtype,r=s.shape,i=r[r.length-3],l=r[r.length-2];let u=0;i!==this.height&&(u=Math.floor((i-this.height)/2));let h=0;return l!==this.width&&(h=Math.floor((l-this.width)/2),h===0&&(h=1)),u>=0&&h>=0?this.centerCrop(s,u,h,this.height,this.width,i,l,a):this.upsize(t,this.height,this.width,a)})}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=ue(t);const e=t.length-3,s=t.length-2;return t[e]=this.height,t[s]=this.width,t}}IA.className="CenterCrop";xt(IA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function GH(n,t,e,s){let a=Vt(n);if(a.dtype!=="int32"&&(a=Ga(a,"int32")),t==="int")return a;const r=a.shape;if(a.rank===0&&(a=Un(a,-1)),t==="oneHot"&&a.shape[a.shape.length-1]!==1&&(a=Un(a,-1)),a.rank>2)throw new X(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${r} which would result in output rank ${a.rank}.`);const i=["multiHot","oneHot"].includes(t),l=a;let u;if(typeof s<"u"&&t==="count"?u=o0(l,s,e,i):u=o0(l,[],e,i),t!=="tfIdf")return u;if(s)return H(u,s);throw new X("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class EA extends Xt{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=ue(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return nt(()=>{t=Vt(t),t.dtype!=="int32"&&(t=Ga(t,"int32"));let s;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new X(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);s=Vt(e.countWeights)}const a=aa(t),r=Sc(t),i=xs(this.numTokens,a).bufferSync().get(0),l=Ni(r,0).bufferSync().get(0);if(!(i&&l))throw new X(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return GH(t,this.outputMode,this.numTokens,s)})}}EA.className="CategoryEncoding";xt(EA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const HH=["bilinear","nearest"],VT=new Set(HH);class AA extends Xt{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(VT.has(t.interpolation))this.interpolation=t.interpolation;else throw new X(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!t.cropToAspectRatio}computeOutputShape(t){t=ue(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return nt(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return ta.resizeBilinear(t,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return ta.resizeNearestNeighbor(t,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...VT]} are supported`)})}}AA.className="Resizing";xt(AA);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class RA{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}}RA.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class DA extends Xt{constructor(t){super(t),this.randomGenerator=new RA(t.seed)}getConfig(){const t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}}DA.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const qH=["bilinear","nearest"],PT=new Set(qH);class OA extends DA{constructor(t){super(t);const{factor:e,interpolation:s="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new X(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new X(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new X(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(PT.has(s))this.interpolation=s;else throw new X(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=ue(t);const e=t[2];return[this.imgHeight,-1,e]}call(t,e){return nt(()=>{const s=Vt(t);this.imgHeight=s.shape[s.shape.length-3];const a=s.shape[s.shape.length-2];this.widthFactor=Io([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*a;r=Math.round(r);const i=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return ta.resizeBilinear(t,i);case"nearest":return ta.resizeNearestNeighbor(t,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...PT]} are supported`)}})}}OA.className="RandomWidth";xt(OA);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jH=rt();jH.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var ls;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(ls||(ls={}));var UT;(function(n){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(UT||(UT={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XH={};function _A(n){return XH[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k(n,t,e,s,a){const r=t.inputParams[n];if(r&&r.inputIndexStart!==void 0){const l=r.inputIndexStart,u=r.inputIndexEnd===0?void 0:r.inputIndexEnd===void 0?l+1:r.inputIndexEnd,h=l<0?t.inputNames.length+l:l;if(r.type==="tensor")return Sn(t.inputNames[h],e,s,a);if(r.type==="tensors"){const m=t.inputs.slice(l,u);return t.inputNames.slice(l,u).filter((b,w)=>{var v;return((v=m[w])===null||v===void 0?void 0:v.op)!=="NoOp"}).map(b=>Sn(b,e,s,a))}const f=Sn(t.inputNames[h],e,s,a),p=f.dataSync();return r.type==="number"?p[0]:sa(f.shape,p)}const i=t.attrParams[n];return i&&i.value}function Sn(n,t,e,s){const[a,r]=us(n,e);if(s!=null){const l=s.getHashTableHandleByName(a);if(l!=null)return l}const i=e.currentContextIds.find(l=>!!t[sp(a,l)]);return i!==void 0?t[sp(a,i)][r]:void 0}function WT(n,t,e){return t[sp(n,e.currentContextId)]}function gr(n,t){const[e,s,a]=us(n,t);return[sp(e,t&&t.currentContextId),s,a]}function sp(n,t){return t?`${n}-${t}`:n}function us(n,t){if(n==="")return["",0,void 0];const e=t!=null&&t.parseNodeNameCache!=null;if(e){const r=t.parseNodeNameCache.get(n);if(r!=null)return r}const s=n.split(":");let a;if(s.length===1)a=[n,0,void 0];else{const r=s[0],i=s.length===3?s[1]:void 0,l=Number(s[s.length-1]);a=[r,l,i]}return e&&t.parseNodeNameCache.set(n,a),a}function zf(n,t,e){let s=k("pad",n,t,e);if(s==="explicit"){s=k("explicitPaddings",n,t,e);const a=[[0,0],[0,0],[0,0],[0,0]];for(let r=0;r<4;r++)a[r][0]=s[r*2],a[r][1]=s[r*2+1];return a}return s}function yr(n){return n.kept?n:xr(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KH=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],YH=Object.freeze(Object.defineProperty({__proto__:null,json:KH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZH=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],QH=Object.freeze(Object.defineProperty({__proto__:null,json:ZH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JH=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],t6=Object.freeze(Object.defineProperty({__proto__:null,json:JH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e6=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],n6=Object.freeze(Object.defineProperty({__proto__:null,json:e6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s6=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],a6=Object.freeze(Object.defineProperty({__proto__:null,json:s6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r6=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],i6=Object.freeze(Object.defineProperty({__proto__:null,json:r6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o6=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],l6=Object.freeze(Object.defineProperty({__proto__:null,json:o6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u6=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],c6=Object.freeze(Object.defineProperty({__proto__:null,json:u6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h6=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],d6=Object.freeze(Object.defineProperty({__proto__:null,json:h6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f6=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],p6=Object.freeze(Object.defineProperty({__proto__:null,json:f6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m6=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],g6=Object.freeze(Object.defineProperty({__proto__:null,json:m6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y6=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],b6=Object.freeze(Object.defineProperty({__proto__:null,json:y6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x6=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],v6=Object.freeze(Object.defineProperty({__proto__:null,json:x6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w6=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],S6=Object.freeze(Object.defineProperty({__proto__:null,json:w6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N6=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],C6=Object.freeze(Object.defineProperty({__proto__:null,json:N6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T6=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],$6=Object.freeze(Object.defineProperty({__proto__:null,json:T6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],I6=Object.freeze(Object.defineProperty({__proto__:null,json:k6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E6=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],A6=Object.freeze(Object.defineProperty({__proto__:null,json:E6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R6=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],D6=Object.freeze(Object.defineProperty({__proto__:null,json:R6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GT{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[YH,QH,t6,n6,a6,i6,l6,c6,d6,p6,g6,b6,v6,S6,C6,$6,I6,A6,D6],e=[].concat(...t.map(s=>s.json));this.opMappers=e.reduce((s,a)=>(s[a.tfOpName]=a,s),{})}transformGraph(t,e={}){const s=t.node,a=[],r=[],i=[],l=s.reduce((w,v)=>(w[v.name]=this.mapNode(v),v.op.startsWith("Placeholder")?a.push(w[v.name]):v.op==="Const"?r.push(w[v.name]):(v.input==null||v.input.length===0)&&i.push(w[v.name]),w),{});let u=[];const h=[];let f={},p={};e!=null&&(f=this.mapSignatureEntries(e.inputs),p=this.mapSignatureEntries(e.outputs));const m=Object.keys(l);m.forEach(w=>{const v=l[w];v.inputNames.forEach((S,C)=>{const[$,,T]=gr(S),I=l[$];if(I.outputs!=null){const D=I.outputs.indexOf(T);if(D!==-1){const z=`${$}:${D}`;v.inputNames[C]=z}}v.inputs.push(I),I.children.push(v)})}),Object.keys(p).length===0?m.forEach(w=>{const v=l[w];v.children.length===0&&h.push(v)}):Object.keys(p).forEach(w=>{const[v]=gr(w),S=l[v];S!=null&&(S.signatureKey=p[w],h.push(S))}),Object.keys(f).length>0?Object.keys(f).forEach(w=>{const[v]=gr(w),S=l[v];S&&(S.signatureKey=f[w],u.push(S))}):u=a;let y={};t.library!=null&&t.library.function!=null&&(y=t.library.function.reduce((w,v)=>(w[v.signature.name]=this.mapFunction(v),w),{}));const b={nodes:l,inputs:u,outputs:h,weights:r,placeholders:a,signature:e,functions:y};return i.length>0&&(b.initNodes=i),b}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,s)=>(e[t[s].name]=s,e),{})}mapNode(t){const e=_A(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});const s={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(a=>a.startsWith("^")?a.slice(1):a),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(s.inputParams=e.inputs.reduce((a,r)=>(a[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},a),{})),e.attrs!=null&&(s.attrParams=e.attrs.reduce((a,r)=>{const i=r.type;let l;switch(r.type){case"string":l=S0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=S0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":l=E0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=E0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":l=C0(t.attr,r.tfName,r.defaultValue||0),l===void 0&&r.tfDeprecatedName&&(l=C0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":l=I0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=I0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":l=N0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=N0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":l=R0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=R0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":l=k0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=k0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":l=A0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=A0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":l=T0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=T0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":l=$0(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=$0(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":l=HT(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=HT(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${t.op}`)}return a[r.name]={value:l,type:i},a},{})),s}mapFunction(t){const e=t.nodeDef,s=[],a=[];let r={};e!=null&&(r=e.reduce((p,m)=>(p[m.name]=this.mapNode(m),m.op==="Const"&&a.push(p[m.name]),p),{}));const i=[],l=[];t.signature.inputArg.forEach(p=>{const[m]=gr(p.name),y={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Rv(p.type),type:"dtype"}},children:[]};y.signatureKey=p.name,i.push(y),r[m]=y}),Object.keys(r).forEach(p=>{const m=r[p];m.inputNames.forEach((y,b)=>{const[w,,v]=gr(y),S=r[w];if(S.outputs!=null){const C=S.outputs.indexOf(v);if(C!==-1){const $=`${w}:${C}`;m.inputNames[b]=$}}m.inputs.push(S),S.children.push(m)})});const h=t.ret;t.signature.outputArg.forEach(p=>{const[m,y]=gr(h[p.name]),b=r[m];b!=null&&(b.defaultOutput=y,l.push(b))});const f=this.mapArgsToSignature(t);return{nodes:r,inputs:i,outputs:l,weights:a,placeholders:s,signature:f}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s),e),{}),outputs:t.signature.outputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s,t.ret),e),{})}}mapArgToTensorInfo(t,e){let s=t.name;return e!=null&&(s=e[s]),{name:s,dtype:t.type}}}function O6(n){const t=rt().global;if(typeof t.atob<"u")return t.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function FA(n,t){const e=Array.isArray(n)?String.fromCharCode.apply(null,n):O6(n);return t?e:e.toLowerCase()}function S0(n,t,e,s=!1){const a=n[t];return a!=null?FA(a.s,s):e}function N0(n,t,e){const s=n[t];return s?s.b:e}function C0(n,t,e){const s=n[t]||{},a=s.i!=null?s.i:s.f!=null?s.f:e;return typeof a=="number"?a:parseInt(a,10)}function Rv(n){switch(typeof n=="string"&&(n=ls[n]),n){case ls.DT_FLOAT:case ls.DT_HALF:return"float32";case ls.DT_INT32:case ls.DT_INT64:case ls.DT_INT8:case ls.DT_UINT8:return"int32";case ls.DT_BOOL:return"bool";case ls.DT_DOUBLE:return"float32";case ls.DT_STRING:return"string";case ls.DT_COMPLEX64:case ls.DT_COMPLEX128:return"complex64";default:return null}}function HT(n,t,e){const s=n[t];return s&&s.func?s.func.name:e}function T0(n,t,e){const s=n[t];return s&&s.type?Rv(s.type):e}function $0(n,t,e){const s=n[t];return s&&s.list&&s.list.type?s.list.type.map(a=>Rv(a)):e}function LA(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function k0(n,t,e){const s=n[t];return s&&s.shape?LA(s.shape):e}function I0(n,t,e){const s=n[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(a=>typeof a=="number"?a:parseInt(a,10)):e}function E0(n,t,e,s=!1){const a=n[t];return a&&a.list&&a.list.s?a.list.s.map(r=>FA(r,s)):e}function A0(n,t,e){const s=n[t];return s&&s.list&&s.list.shape?s.list.shape.map(a=>LA(a)):e}function R0(n,t,e){const s=n[t];return s&&s.list&&s.list.b?s.list.b:e}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _6{constructor(t,e,s){this.node=t,this.tensorMap=e,this.context=s,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(a=>this.getInput(a)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((a,r)=>(a[r]=this.getAttr(r),a),{}))}getInput(t){return Sn(t,this.tensorMap,this.context)}getAttr(t,e){const s=this.node.rawAttrs[t];if(s.tensor!=null)return Sn(t,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return C0(this.node.rawAttrs,t,e);if(s.s!=null)return S0(this.node.rawAttrs,t,e);if(s.b!=null)return N0(this.node.rawAttrs,t,e);if(s.shape!=null)return k0(this.node.rawAttrs,t,e);if(s.type!=null)return T0(this.node.rawAttrs,t,e);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return I0(this.node.rawAttrs,t,e);if(s.list.s!=null)return E0(this.node.rawAttrs,t,e);if(s.list.shape!=null)return A0(this.node.rawAttrs,t,e);if(s.list.b!=null)return R0(this.node.rawAttrs,t,e);if(s.list.type!=null)return $0(this.node.rawAttrs,t,e)}return e}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const In=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:n$,abs:en,acos:v$,acosh:w$,add:yt,addN:Z3,all:Jx,any:qf,argMax:Fl,argMin:S$,asin:N$,asinh:C$,atan:T$,atan2:$$,atanh:k$,avgPool:bm,avgPool3d:I$,basicLSTMCell:vL,batchNorm:Oh,batchNorm2d:E$,batchNorm3d:A$,batchNorm4d:R$,batchToSpaceND:xm,bincount:D$,bitwiseAnd:EL,booleanMaskAsync:f4,broadcastArgs:RL,broadcastTo:Al,buffer:Ht,cast:Nt,ceil:O$,clipByValue:fs,clone:xr,complex:li,concat:He,concat1d:_$,concat2d:F$,concat3d:L$,concat4d:z$,conv1d:e1,conv2d:hi,conv2dTranspose:s1,conv3d:M$,conv3dTranspose:V$,cos:vm,cosh:a1,cosineWindow:E1,cumprod:jf,cumsum:r1,denseBincount:o0,depthToSpace:P$,depthwiseConv2d:_h,diag:tz,dilation2d:U$,div:Dt,divNoNan:W$,dot:G$,dropout:gk,einsum:Tl,elu:Fh,enclosingPowerOfTwo:yk,ensureShape:cz,equal:Ta,erf:i1,euclideanNorm:j$,exp:ps,expandDims:Un,expm1:X$,eye:l1,fft:_m,fill:Kl,floor:zh,floorDiv:Qx,fused:F4,gather:Mh,gatherND:N4,greater:xs,greaterEqual:Ni,ifft:$c,imag:wm,image:ta,inTopKAsync:k4,irfft:N1,isFinite:K$,isInf:Y$,isNaN:Z$,leakyRelu:Sm,less:Nc,lessEqual:ko,linalg:Tk,linspace:Lz,localResponseNormalization:Q$,log:As,log1p:Nm,logSigmoid:J$,logSoftmax:u1,logSumExp:Cm,logicalAnd:qa,logicalNot:Tm,logicalOr:c1,logicalXor:tk,losses:dP,lowerBound:Qz,matMul:Yt,max:aa,maxPool:$m,maxPool3d:ek,maxPoolWithArgmax:nM,maximum:kr,mean:ze,meshgrid:rM,min:Sc,minimum:xo,mirrorPad:nk,mod:sk,moments:km,movingAverage:g4,mul:H,multiRNNCell:hM,multinomial:fM,neg:Ie,norm:Lh,notEqual:zl,oneHot:d1,ones:es,onesLike:Rs,op:U,outerProduct:bM,pad:Ci,pad1d:wM,pad2d:NM,pad3d:TM,pad4d:kM,pool:ak,pow:wr,prelu:Em,print:x$,prod:rk,raggedGather:FM,raggedRange:zM,raggedTensorToTensor:BM,rand:PM,randomGamma:uB,randomNormal:p1,randomStandardNormal:dB,randomUniform:Io,randomUniformInt:mB,range:Ml,real:Cc,reciprocal:ik,relu:Ka,relu6:m1,reshape:q,reverse:ia,reverse1d:SB,reverse2d:CB,reverse3d:$B,reverse4d:IB,rfft:Fm,round:g1,rsqrt:y1,scalar:Lt,scatterND:b4,searchSorted:h1,selu:b1,separableConv2d:x1,setdiff1dAsync:_B,sigmoid:Ua,sign:ok,signal:hP,sin:v1,sinh:w1,slice:se,slice1d:Rm,slice2d:S1,slice3d:Dm,slice4d:Tc,softmax:Om,softplus:Yl,spaceToBatchND:Im,sparse:fP,sparseToDense:w4,spectral:cP,split:hs,sqrt:Tn,square:we,squaredDifference:C1,squeeze:Eo,stack:ms,step:Zl,stridedSlice:lk,string:pP,sub:kt,sum:Et,tan:uk,tanh:bo,tensor:Na,tensor1d:Gn,tensor2d:bc,tensor3d:ck,tensor4d:t4,tensor5d:e4,tensor6d:n4,tensorScatterUpdate:a4,tile:Js,topk:dk,transpose:ae,truncatedNormal:$1,unique:fk,unsortedSegmentSum:k1,unstack:oa,upperBound:c4,variable:pk,where:On,whereAsync:mk,zeros:nn,zerosLike:re},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F6=(n,t,e,s=In)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(k("a",n,t,e),k("b",n,t,e))];case"AddN":return[s.addN(k("tensors",n,t,e))];case"FloorMod":case"Mod":return[s.mod(k("a",n,t,e),k("b",n,t,e))];case"Mul":return[s.mul(k("a",n,t,e),k("b",n,t,e))];case"RealDiv":case"Div":return[s.div(k("a",n,t,e),k("b",n,t,e))];case"DivNoNan":return[s.divNoNan(k("a",n,t,e),k("b",n,t,e))];case"FloorDiv":return[s.floorDiv(k("a",n,t,e),k("b",n,t,e))];case"Sub":return[s.sub(k("a",n,t,e),k("b",n,t,e))];case"Minimum":return[s.minimum(k("a",n,t,e),k("b",n,t,e))];case"Maximum":return[s.maximum(k("a",n,t,e),k("b",n,t,e))];case"Pow":return[s.pow(k("a",n,t,e),k("b",n,t,e))];case"SquaredDifference":return[s.squaredDifference(k("a",n,t,e),k("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L6=(n,t,e,s=In)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(k("x",n,t,e))];case"Acos":return[s.acos(k("x",n,t,e))];case"Acosh":return[s.acosh(k("x",n,t,e))];case"Asin":return[s.asin(k("x",n,t,e))];case"Asinh":return[s.asinh(k("x",n,t,e))];case"Atan":return[s.atan(k("x",n,t,e))];case"Atan2":return[s.atan2(k("x",n,t,e),k("y",n,t,e))];case"Atanh":return[s.atanh(k("x",n,t,e))];case"Ceil":return[s.ceil(k("x",n,t,e))];case"Complex":return[s.complex(k("real",n,t,e),k("imag",n,t,e))];case"Cos":return[s.cos(k("x",n,t,e))];case"Cosh":return[s.cosh(k("x",n,t,e))];case"Elu":return[s.elu(k("x",n,t,e))];case"Erf":return[s.erf(k("x",n,t,e))];case"Exp":return[s.exp(k("x",n,t,e))];case"Expm1":return[s.expm1(k("x",n,t,e))];case"Floor":return[s.floor(k("x",n,t,e))];case"Log":return[s.log(k("x",n,t,e))];case"Log1p":return[s.log1p(k("x",n,t,e))];case"Imag":return[s.imag(k("x",n,t,e))];case"Neg":return[s.neg(k("x",n,t,e))];case"Reciprocal":return[s.reciprocal(k("x",n,t,e))];case"Real":return[s.real(k("x",n,t,e))];case"Relu":return[s.relu(k("x",n,t,e))];case"Round":return[s.round(k("x",n,t,e))];case"Selu":return[s.selu(k("x",n,t,e))];case"Sigmoid":return[s.sigmoid(k("x",n,t,e))];case"Sin":return[s.sin(k("x",n,t,e))];case"Sign":return[s.sign(k("x",n,t,e))];case"Sinh":return[s.sinh(k("x",n,t,e))];case"Softplus":return[s.softplus(k("x",n,t,e))];case"Sqrt":return[s.sqrt(k("x",n,t,e))];case"Square":return[s.square(k("x",n,t,e))];case"Tanh":return[s.tanh(k("x",n,t,e))];case"Tan":return[s.tan(k("x",n,t,e))];case"ClipByValue":return[s.clipByValue(k("x",n,t,e),k("clipValueMin",n,t,e),k("clipValueMax",n,t,e))];case"Relu6":return[s.relu6(k("x",n,t,e))];case"Rsqrt":return[s.rsqrt(Sn(n.inputNames[0],t,e))];case"LeakyRelu":return[s.leakyRelu(k("x",n,t,e),k("alpha",n,t,e))];case"Prelu":return[s.prelu(k("x",n,t,e),k("alpha",n,t,e))];case"IsNan":return[s.isNaN(Sn(n.inputNames[0],t,e))];case"IsInf":return[s.isInf(Sn(n.inputNames[0],t,e))];case"IsFinite":return[s.isFinite(Sn(n.inputNames[0],t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zs(n,t,e=""){if(!(typeof n=="number"||typeof t=="number")){O(n.length===t.length,()=>e+` Shapes ${n} and ${t} must match`);for(let s=0;s<n.length;s++){const a=n[s],r=t[s];O(a<0||r<0||a===r,()=>e+` Shapes ${n} and ${t} must match`)}}}function qT(n){return!(typeof n=="number"||n.some(t=>t<0))}function hc(n,t,e){let s=D0(n,e);const a=!qT(s);if(a&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(a&&t.forEach(r=>{s=D0(r.shape,s)}),!qT(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function D0(n,t){if(typeof n=="number")return t;if(typeof t=="number")return n;if(n.length!==t.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${t}`);const e=[];for(let s=0;s<n.length;++s){const a=n[s],r=t[s];if(a>=0&&r>=0&&a!==r)throw new Error(`Incompatible shape during merge: ${n} vs. ${t}`);e[s]=a>=0?a:r}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z6{constructor(t,e,s,a,r,i,l){this.name=t,this.dtype=e,this.maxSize=s,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=i,this.clearAfterRead=l,this.tensors=[],this.closed_=!1,this.idTensor=Lt(0),pn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),Zs(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);s.tensor=e,pn(e),s.written=!0,this.tensors[t]=s}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((s,a)=>this.write(s,e[a]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let a=0;a<this.size();a++)t.push(a)}if(t.length===0)return Na([],[0].concat(this.elementShape));const s=this.readMany(t);return Zs(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),ms(s,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return Na([],[0].concat(this.elementShape));const e=[];for(let a=0;a<this.size();a++)e.push(a);const s=this.readMany(e);return Zs(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),He(s,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(t,oa(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let s=0;const a=t.map(u=>(s+=u,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const r=s===0?0:e.size/s,i=[];nt(()=>{e=q(e,[1,s,r]);for(let u=0;u<t.length;++u){const f=[0,u===0?0:a[u-1],0],p=[1,t[u],r];i[u]=q(se(e,f,p),this.elementShape)}return i});const l=[];for(let u=0;u<t.length;u++)l[u]=u;this.writeMany(l,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class So{get id(){return this.idTensor.id}constructor(t,e,s,a=-1){this.tensors=t,this.elementShape=e,this.elementDtype=s,t!=null&&t.forEach(r=>{if(s!==r.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${r.dtype}`);Zs(e,r.shape,"TensorList shape mismatch: "),pn(r)}),this.idTensor=Lt(0),this.maxNumElements=a,pn(this.idTensor)}copy(){return new So([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,s=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);Zs(t,this.elementShape,"TensorList shape mismatch: ");const a=hc(this.elementShape,this.tensors,t);return nt(()=>{const r=this.tensors.map(i=>q(i,a));return ms(r,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=hc(this.elementShape,this.tensors,t),a=this.tensors.pop();return a.kept=!1,Zs(a.shape,t,"TensorList shape mismatch: "),q(a,s)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Zs(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");pn(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);const e=new So([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let s=0;s<Math.min(this.tensors.length,t);++s)e.tensors[s]=this.tensors[s];return e}getItem(t,e,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);Zs(this.tensors[t].shape,e,"TensorList shape mismatch: ");const a=hc(this.elementShape,this.tensors,e);return q(this.tensors[t],a)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Zs(this.elementShape,e.shape,"TensorList shape mismatch: "),pn(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,s){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Zs(this.elementShape,s,"TensorList shape mismatch: "),t=t.slice(0,this.size());const a=hc(this.elementShape,this.tensors,s);return t.length===0?Na([],[0].concat(a)):nt(()=>{const r=t.map(i=>q(this.tensors[i],a));return ms(r,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Zs(this.elementShape,e,"TensorList shape mismatch: ");const s=hc(this.elementShape,this.tensors,e);return this.size()===0?Na([],[0].concat(s)):nt(()=>{const a=this.tensors.map(r=>q(r,s));return He(a,0)})}}function M6(n,t,e){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==e)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${e}`);const a=n.shape.slice(1);Zs(a,t,"TensorList shape mismatch: ");const r=oa(n);return new So(r,t,s)}function B6(n,t,e,s){return new So([],n,t,s)}function V6(n,t,e,s){if(t.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${n.shape[0]}`);const a=Math.max(...t);if(s!=null&&s!==-1&&a>=s)throw new Error(`Max index must be < array size (${a}  vs. ${s})`);const r=new So([],e,n.dtype,s),i=oa(n,0);return t.forEach((l,u)=>{r.setItem(l,i[u])}),r}function P6(n,t,e){let s=0;const a=t.map(f=>(s+=f,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const r=n.shape.slice(1),i=D0(r,e),l=s===0?0:n.size/s,u=nt(()=>{const f=[];n=q(n,[1,s,l]);for(let p=0;p<t.length;++p){const y=[0,p===0?0:a[p-1],0],b=[1,t[p],l];f[p]=q(se(n,y,b),i)}return n.dispose(),f}),h=new So([],e,n.dtype,t.length);for(let f=0;f<u.length;f++)h.setItem(f,u[f]);return h}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U6=async(n,t,e)=>{switch(n.op){case"If":case"StatelessIf":{const s=k("thenBranch",n,t,e),a=k("elseBranch",n,t,e),r=k("cond",n,t,e),i=k("args",n,t,e);return(await r.data())[0]?e.functionMap[s].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap):e.functionMap[a].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{const s=k("body",n,t,e),a=k("cond",n,t,e),r=k("args",n,t,e),i=await e.functionMap[a].executeFunctionAsync(r,e.tensorArrayMap,e.tensorListMap),l=r.map(f=>f.id);let u=await i[0].data();i.forEach(f=>{!f.kept&&l.indexOf(f.id)===-1&&f.dispose()});let h=r;for(;u[0];){const f=h;h=await e.functionMap[s].executeFunctionAsync(h,e.tensorArrayMap,e.tensorListMap);const p=h.map(y=>y.id);f.forEach(y=>{!y.kept&&l.indexOf(y.id)===-1&&p.indexOf(y.id)===-1&&y.dispose()});const m=await e.functionMap[a].executeFunctionAsync(h,e.tensorArrayMap,e.tensorListMap);u=await m[0].data(),m.forEach(y=>{!y.kept&&l.indexOf(y.id)===-1&&p.indexOf(y.id)===-1&&y.dispose()})}return h}case"LoopCond":{const s=k("pred",n,t,e);return[yr(s)]}case"Switch":{const s=k("pred",n,t,e);let a=k("data",n,t,e);return a.kept||(a=yr(a)),(await s.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const s=n.inputNames.find(a=>Sn(a,t,e)!==void 0);if(s){const a=Sn(s,t,e);return[yr(a)]}return}case"Enter":{const s=k("frameName",n,t,e),a=k("tensor",n,t,e);return e.enterFrame(s),[yr(a)]}case"Exit":{const s=k("tensor",n,t,e);return e.exitFrame(),[yr(s)]}case"NextIteration":{const s=k("tensor",n,t,e);return e.nextIteration(),[yr(s)]}case"TensorArrayV3":{const s=k("size",n,t,e),a=k("dtype",n,t,e),r=k("elementShape",n,t,e),i=k("dynamicSize",n,t,e),l=k("clearAfterRead",n,t,e),u=k("identicalElementShapes",n,t,e),h=k("name",n,t,e),f=new z6(h,a,s,r,u,i,l);return e.addTensorArray(f),[f.idTensor,Lt(1)]}case"TensorArrayWriteV3":{const s=k("tensorArrayId",n,t,e),a=k("index",n,t,e),r=k("tensor",n,t,e),i=e.getTensorArray(s.id);return i.write(a,r),[i.idTensor]}case"TensorArrayReadV3":{const s=k("tensorArrayId",n,t,e),a=k("index",n,t,e);return[e.getTensorArray(s.id).read(a)]}case"TensorArrayGatherV3":{const s=k("tensorArrayId",n,t,e),a=k("indices",n,t,e),r=k("dtype",n,t,e);return[e.getTensorArray(s.id).gather(a,r)]}case"TensorArrayScatterV3":{const s=k("tensorArrayId",n,t,e),a=k("indices",n,t,e),r=k("tensor",n,t,e),i=e.getTensorArray(s.id);return i.scatter(a,r),[i.idTensor]}case"TensorArrayConcatV3":{const s=k("tensorArrayId",n,t,e),a=e.getTensorArray(s.id),r=k("dtype",n,t,e);return[a.concat(r)]}case"TensorArraySplitV3":{const s=k("tensorArrayId",n,t,e),a=k("tensor",n,t,e),r=k("lengths",n,t,e),i=e.getTensorArray(s.id);return i.split(r,a),[i.idTensor]}case"TensorArraySizeV3":{const s=k("tensorArrayId",n,t,e),a=e.getTensorArray(s.id);return[Lt(a.size(),"int32")]}case"TensorArrayCloseV3":{const s=k("tensorArrayId",n,t,e),a=e.getTensorArray(s.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const s=k("tensorListId",n,t,e),a=k("index",n,t,e),r=k("tensor",n,t,e),i=e.getTensorList(s.id);return i.setItem(a,r),[i.idTensor]}case"TensorListGetItem":{const s=k("tensorListId",n,t,e),a=k("index",n,t,e),r=k("elementShape",n,t,e),i=k("elementDType",n,t,e);return[e.getTensorList(s.id).getItem(a,r,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=k("indices",n,t,e),a=k("tensor",n,t,e),r=k("elementShape",n,t,e),i=k("numElements",n,t,e),l=V6(a,s,r,i);return e.addTensorList(l),[l.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=k("elementShape",n,t,e),a=k("elementDType",n,t,e);let r;n.op==="TensorListReserve"?r="numElements":r="maxNumElements";const i=k(r,n,t,e),l=n.op==="TensorListReserve"?-1:i,u=B6(s,a,i,l);return e.addTensorList(u),[u.idTensor]}case"TensorListGather":{const s=k("tensorListId",n,t,e),a=k("indices",n,t,e),r=k("elementShape",n,t,e),i=k("elementDType",n,t,e);return[e.getTensorList(s.id).gather(a,i,r)]}case"TensorListStack":{const s=k("tensorListId",n,t,e),a=k("elementShape",n,t,e),r=k("elementDType",n,t,e),i=k("numElements",n,t,e);return[e.getTensorList(s.id).stack(a,r,i)]}case"TensorListFromTensor":{const s=k("tensor",n,t,e),a=k("elementShape",n,t,e),r=k("elementDType",n,t,e),i=M6(s,a,r);return e.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=k("tensorListId",n,t,e),a=e.getTensorList(s.id),r=k("dtype",n,t,e),i=k("elementShape",n,t,e);return[a.concat(r,i)]}case"TensorListPushBack":{const s=k("tensorListId",n,t,e),a=k("tensor",n,t,e),r=e.getTensorList(s.id);return r.pushBack(a),[r.idTensor]}case"TensorListPopBack":{const s=k("tensorListId",n,t,e),a=k("elementShape",n,t,e),r=k("elementDType",n,t,e);return[e.getTensorList(s.id).popBack(a,r)]}case"TensorListSplit":{const s=k("tensor",n,t,e),a=k("elementShape",n,t,e),r=k("lengths",n,t,e),i=P6(s,r,a);return e.addTensorList(i),[i.idTensor]}case"TensorListLength":{const s=k("tensorListId",n,t,e),a=e.getTensorList(s.id);return[Lt(a.size(),"int32")]}case"TensorListResize":{const s=k("tensorListId",n,t,e),a=k("size",n,t,e),i=e.getTensorList(s.id).resize(a);return e.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jT(n,t,e){const[s,a]=k("fusedOps",n,t,e),r=s==="biasadd",i=!r,l=a==="prelu",u=s==="fusedbatchnorm",h=k("numArgs",n,t,e);if(r){if(l&&h!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&r&&h!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const f=k("strides",n,t,e),p=zf(n,t,e),m=k("dataFormat",n,t,e).toUpperCase(),y=k("dilations",n,t,e);let[b,w]=k("args",n,t,e);i&&(w=b,b=void 0);const v=k("leakyreluAlpha",n,t,e);return{stride:f,pad:p,dataFormat:m,dilations:y,biasArg:b,preluArg:w,activationFunc:a,leakyreluAlpha:v}}const W6=(n,t,e,s=In)=>{switch(n.op){case"Conv1D":{const a=k("stride",n,t,e),r=k("pad",n,t,e),i=k("dataFormat",n,t,e).toUpperCase(),l=k("dilation",n,t,e);return[s.conv1d(k("x",n,t,e),k("filter",n,t,e),a,r,i,l)]}case"Conv2D":{const a=k("strides",n,t,e),r=zf(n,t,e),i=k("dataFormat",n,t,e).toUpperCase(),l=k("dilations",n,t,e);return[s.conv2d(k("x",n,t,e),k("filter",n,t,e),[a[1],a[2]],r,i,[l[1],l[2]])]}case"_FusedConv2D":{const{stride:a,pad:r,dataFormat:i,dilations:l,biasArg:u,preluArg:h,activationFunc:f,leakyreluAlpha:p}=jT(n,t,e);return[s.fused.conv2d({x:k("x",n,t,e),filter:k("filter",n,t,e),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[l[1],l[2]],bias:u,activation:f,preluActivationWeights:h,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:r,dataFormat:i,dilations:l,biasArg:u,preluArg:h,activationFunc:f,leakyreluAlpha:p}=jT(n,t,e);return[s.fused.depthwiseConv2d({x:k("x",n,t,e),filter:k("filter",n,t,e),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[l[1],l[2]],bias:u,activation:f,preluActivationWeights:h,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=k("outputShape",n,t,e),r=k("strides",n,t,e),i=zf(n,t,e);return[s.conv2dTranspose(k("x",n,t,e),k("filter",n,t,e),a,[r[1],r[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=k("strides",n,t,e),r=zf(n,t,e),i=k("dilations",n,t,e),l=k("dataFormat",n,t,e).toUpperCase();return[s.depthwiseConv2d(k("input",n,t,e),k("filter",n,t,e),[a[1],a[2]],r,l,[i[1],i[2]])]}case"Conv3D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("dataFormat",n,t,e).toUpperCase(),l=k("dilations",n,t,e);return[s.conv3d(k("x",n,t,e),k("filter",n,t,e),[a[1],a[2],a[3]],r,i,[l[1],l[2],l[3]])]}case"AvgPool":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.avgPool(k("x",n,t,e),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPool":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.maxPool(k("x",n,t,e),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e),l=k("includeBatchInIndex",n,t,e),{result:u,indexes:h}=s.maxPoolWithArgmax(k("x",n,t,e),[i[1],i[2]],[a[1],a[2]],r,l);return[u,h]}case"AvgPool3D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.avgPool3d(k("x",n,t,e),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.maxPool3d(k("x",n,t,e),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("dilations",n,t,e),l=a[1],u=a[2],h=i[1],f=i[2];return[s.dilation2d(k("x",n,t,e),k("filter",n,t,e),[l,u],r,[h,f],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G6=(n,t,e,s=In)=>{switch(n.op){case"Fill":{const a=k("shape",n,t,e),r=k("dtype",n,t,e),i=k("value",n,t,e);return[s.fill(a,i,r)]}case"LinSpace":{const a=k("start",n,t,e),r=k("stop",n,t,e),i=k("num",n,t,e);return[s.linspace(a,r,i)]}case"Multinomial":{const a=k("logits",n,t,e),r=k("numSamples",n,t,e),i=k("seed",n,t,e);return[s.multinomial(a,r,i)]}case"OneHot":{const a=k("indices",n,t,e),r=k("depth",n,t,e),i=k("onValue",n,t,e),l=k("offValue",n,t,e),u=k("dtype",n,t,e);return[s.oneHot(a,r,i,l,u)]}case"Ones":return[s.ones(k("shape",n,t,e),k("dtype",n,t,e))];case"OnesLike":return[s.onesLike(k("x",n,t,e))];case"RandomStandardNormal":return[s.randomStandardNormal(k("shape",n,t,e),k("dtype",n,t,e),k("seed",n,t,e))];case"RandomUniform":return[s.randomUniform(k("shape",n,t,e),k("minval",n,t,e),k("maxval",n,t,e),k("dtype",n,t,e))];case"RandomUniformInt":return[s.randomUniformInt(k("shape",n,t,e),k("minval",n,t,e),k("maxval",n,t,e),k("seed",n,t,e))];case"Range":{const a=k("start",n,t,e),r=k("stop",n,t,e),i=k("step",n,t,e);return[s.range(a,r,i,k("dtype",n,t,e))]}case"TruncatedNormal":{const a=k("shape",n,t,e),r=k("mean",n,t,e),i=k("stdDev",n,t,e),l=k("seed",n,t,e);return[s.truncatedNormal(a,r,i,k("dtype",n,t,e),l)]}case"Zeros":return[s.zeros(k("shape",n,t,e),k("dtype",n,t,e))];case"ZerosLike":return[s.zerosLike(k("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _b(n,t,e){const s=k("boxes",n,t,e),a=k("scores",n,t,e),r=k("maxOutputSize",n,t,e),i=k("iouThreshold",n,t,e),l=k("scoreThreshold",n,t,e),u=k("softNmsSigma",n,t,e);return{boxes:s,scores:a,maxOutputSize:r,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}}const H6=async(n,t,e,s,a=In)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:i,maxOutputSize:l,iouThreshold:u,scoreThreshold:h,softNmsSigma:f}=_b(n,t,e),p=await a.image.nonMaxSuppressionWithScoreAsync(r,i,l,u,h,f);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:i,maxOutputSize:l,iouThreshold:u,scoreThreshold:h}=_b(n,t,e),f=k("padToMaxOutputSize",n,t,e),p=await a.image.nonMaxSuppressionPaddedAsync(r,i,l,u,h,f);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:i,maxOutputSize:l,iouThreshold:u,scoreThreshold:h}=_b(n,t,e);return[await a.image.nonMaxSuppressionAsync(r,i,l,u,h)]}case"Where":{const r=a.cast(k("condition",n,t,e),"bool"),i=[await a.whereAsync(r)];return r.dispose(),i}case"ListDiff":return a.setdiff1dAsync(k("x",n,t,e),k("y",n,t,e));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q6=(n,t,e,s=In)=>{switch(n.op){case"LowerBound":{const a=k("sortedSequence",n,t,e),r=k("values",n,t,e);return[s.lowerBound(a,r)]}case"TopKV2":{const a=k("x",n,t,e),r=k("k",n,t,e),i=k("sorted",n,t,e),l=s.topk(a,r,i);return[l.values,l.indices]}case"UpperBound":{const a=k("sortedSequence",n,t,e),r=k("values",n,t,e);return[s.upperBound(a,r)]}case"Unique":{const a=k("x",n,t,e),r=s.unique(a);return[r.values,r.indices]}case"UniqueV2":{const a=k("x",n,t,e),r=k("axis",n,t,e),i=s.unique(a,r);return[i.values,i.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j6=(n,t,e,s=In)=>{switch(n.op){case"Const":return t[n.name];case"PlaceholderWithDefault":const a=k("default",n,t,e);return[Sn(n.name,t,e)||a];case"Placeholder":return[Sn(n.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const f=k("x",n,t,e);return[yr(f)]}case"IdentityN":return k("x",n,t,e).map(f=>yr(f));case"Snapshot":const r=k("x",n,t,e);return[yr(r)];case"Shape":return[s.tensor1d(k("x",n,t,e).shape,"int32")];case"ShapeN":return k("x",n,t,e).map(f=>s.tensor1d(f.shape));case"Size":return[s.scalar(k("x",n,t,e).size,"int32")];case"Rank":return[s.scalar(k("x",n,t,e).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=k("x",n,t,e),l=k("data",n,t,e),u=k("message",n,t,e),h=k("summarize",n,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let f=0;f<l.length;f++)console.log(Array.prototype.slice.call(l[f].dataSync()).slice(0,h));return[i];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X6{get id(){return this.handle.id}constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Lt(0),this.tensorMap=new Map,pn(this.handle)}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Lt(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const s=await t.data();return this.tensorMap.forEach(a=>a.dispose()),this.tensorMap.clear(),nt(()=>{const a=oa(e),r=s.length,i=a.length;O(r===i,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${i} elements.`);for(let l=0;l<r;l++){const u=s[l],h=a[l];pn(h),this.tensorMap.set(u,h)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const s=await t.data();return nt(()=>{const a=[];for(let r=0;r<s.length;r++){const i=s[r],l=this.findWithDefault(i,e);a.push(l)}return ms(a)})}findWithDefault(t,e){const s=this.tensorMap.get(t);return s??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K6=async(n,t,e,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const a=s.getHashTableHandleByName(n.name);if(a!=null)return[a];{const r=k("keyDType",n,t,e),i=k("valueDType",n,t,e),l=new X6(r,i);return s.addHashTable(n.name,l),[l.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=k("tableHandle",n,t,e,s),r=k("keys",n,t,e),i=k("values",n,t,e);return[await s.getHashTableById(a.id).import(r,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=k("tableHandle",n,t,e,s),r=k("keys",n,t,e),i=k("defaultValue",n,t,e);return[await s.getHashTableById(a.id).find(r,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=k("tableHandle",n,t,e,s);return[s.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y6=(n,t,e,s=In)=>{switch(n.op){case"ResizeBilinear":{const a=k("images",n,t,e),r=k("size",n,t,e),i=k("alignCorners",n,t,e),l=k("halfPixelCenters",n,t,e);return[s.image.resizeBilinear(a,[r[0],r[1]],i,l)]}case"ResizeNearestNeighbor":{const a=k("images",n,t,e),r=k("size",n,t,e),i=k("alignCorners",n,t,e),l=k("halfPixelCenters",n,t,e);return[s.image.resizeNearestNeighbor(a,[r[0],r[1]],i,l)]}case"CropAndResize":{const a=k("image",n,t,e),r=k("boxes",n,t,e),i=k("boxInd",n,t,e),l=k("cropSize",n,t,e),u=k("method",n,t,e),h=k("extrapolationValue",n,t,e);return[s.image.cropAndResize(a,r,i,l,u,h)]}case"ImageProjectiveTransformV3":{const a=k("images",n,t,e),r=k("transforms",n,t,e),i=k("outputShape",n,t,e),l=k("fillValue",n,t,e),u=k("interpolation",n,t,e),h=k("fillMode",n,t,e);return[s.image.transform(a,r,u.toLowerCase(),h.toLowerCase(),l,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z6=(n,t,e,s=In)=>{switch(n.op){case"Equal":return[s.equal(k("a",n,t,e),k("b",n,t,e))];case"NotEqual":return[s.notEqual(k("a",n,t,e),k("b",n,t,e))];case"Greater":return[s.greater(k("a",n,t,e),k("b",n,t,e))];case"GreaterEqual":return[s.greaterEqual(k("a",n,t,e),k("b",n,t,e))];case"Less":return[s.less(k("a",n,t,e),k("b",n,t,e))];case"LessEqual":return[s.lessEqual(k("a",n,t,e),k("b",n,t,e))];case"LogicalAnd":return[s.logicalAnd(k("a",n,t,e),k("b",n,t,e))];case"LogicalNot":return[s.logicalNot(k("a",n,t,e))];case"LogicalOr":return[s.logicalOr(k("a",n,t,e),k("b",n,t,e))];case"Select":case"SelectV2":return[s.where(k("condition",n,t,e),k("a",n,t,e),k("b",n,t,e))];case"BitwiseAnd":return[s.bitwiseAnd(k("a",n,t,e),k("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q6=(n,t,e,s=In)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(k("a",n,t,e),k("b",n,t,e),k("transposeA",n,t,e),k("transposeB",n,t,e))];case"Einsum":return[s.einsum(k("equation",n,t,e),...k("tensors",n,t,e))];case"Transpose":return[s.transpose(k("x",n,t,e),k("perm",n,t,e))];case"_FusedMatMul":const[a,r]=k("fusedOps",n,t,e),i=a==="biasadd",l=r==="prelu",u=k("numArgs",n,t,e),h=k("leakyreluAlpha",n,t,e);if(i){if(l&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[f,p]=k("args",n,t,e);return[s.fused.matMul({a:k("a",n,t,e),b:k("b",n,t,e),transposeA:k("transposeA",n,t,e),transposeB:k("transposeB",n,t,e),bias:f,activation:r,preluActivationWeights:p,leakyreluAlpha:h})];case"MatrixBandPart":return[s.linalg.bandPart(k("a",n,t,e),k("numLower",n,t,e),k("numUpper",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J6=(n,t,e,s=In)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(k("x",n,t,e),k("axis",n,t,e),k("keepDims",n,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(k("x",n,t,e),k("mean",n,t,e),k("variance",n,t,e),k("offset",n,t,e),k("scale",n,t,e),k("epsilon",n,t,e))];case"FusedBatchNormV3":return[s.batchNorm(k("x",n,t,e),k("mean",n,t,e),k("variance",n,t,e),k("offset",n,t,e),k("scale",n,t,e),k("epsilon",n,t,e))];case"LRN":return[s.localResponseNormalization(k("x",n,t,e),k("radius",n,t,e),k("bias",n,t,e),k("alpha",n,t,e),k("beta",n,t,e))];case"Softmax":return[s.softmax(k("x",n,t,e))];case"LogSoftmax":return[s.logSoftmax(k("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tq=(n,t,e,s=In)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:a,outputDenseValues:r}=s.raggedGather(k("paramsNestedSplits",n,t,e),k("paramsDenseValues",n,t,e),k("indices",n,t,e),k("outputRaggedRank",n,t,e));return a.concat(r)}case"RaggedRange":{const{rtNestedSplits:a,rtDenseValues:r}=s.raggedRange(k("starts",n,t,e),k("limits",n,t,e),k("splits",n,t,e));return[a,r]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(k("shape",n,t,e),k("values",n,t,e),k("defaultValue",n,t,e),k("rowPartitionTensors",n,t,e),k("rowPartitionTypes",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eq=(n,t,e,s=In)=>{switch(n.op){case"Max":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.max(k("x",n,t,e),l,u)]}case"Mean":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.mean(k("x",n,t,e),l,u)]}case"Min":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.min(k("x",n,t,e),l,u)]}case"Sum":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.sum(k("x",n,t,e),l,u)]}case"All":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.all(k("x",n,t,e),l,u)]}case"Any":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.any(k("x",n,t,e),l,u)]}case"ArgMax":{const l=k("axis",n,t,e);return[s.argMax(k("x",n,t,e),l)]}case"ArgMin":{const l=k("axis",n,t,e);return[s.argMin(k("x",n,t,e),l)]}case"Prod":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.prod(k("x",n,t,e),l,u)]}case"Cumprod":{const l=k("axis",n,t,e),u=k("exclusive",n,t,e),h=k("reverse",n,t,e);return[s.cumprod(k("x",n,t,e),l,u,h)]}case"Cumsum":{const l=k("axis",n,t,e),u=k("exclusive",n,t,e),h=k("reverse",n,t,e);return[s.cumsum(k("x",n,t,e),l,u,h)]}case"Bincount":const a=k("x",n,t,e),r=k("weights",n,t,e),i=k("size",n,t,e);return[s.bincount(a,r,i)];case"DenseBincount":{const l=k("x",n,t,e),u=k("weights",n,t,e),h=k("size",n,t,e),f=k("binaryOutput",n,t,e);return[s.denseBincount(l,u,h,f)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nq=(n,t,e,s=In)=>{switch(n.op){case"ConcatV2":case"Concat":{const a=k("n",n,t,e),r=k("axis",n,t,e);let i=k("tensors",n,t,e);return i=i.slice(0,a),[s.concat(i,r)]}case"Gather":{const a=k("x",n,t,e),r=k("indices",n,t,e);return[s.gather(a,s.cast(r,"int32"),0)]}case"GatherV2":{const a=k("axis",n,t,e),r=k("batchDims",n,t,e),i=k("x",n,t,e),l=k("indices",n,t,e);return[s.gather(i,s.cast(l,"int32"),a,r)]}case"Reverse":{const a=k("dims",n,t,e),r=[];for(let l=0;l<a.length;l++)a[l]&&r.push(l);const i=k("x",n,t,e);return[s.reverse(i,r)]}case"ReverseV2":{const a=k("axis",n,t,e),r=k("x",n,t,e);return[s.reverse(r,a)]}case"Slice":{const a=k("begin",n,t,e),r=k("size",n,t,e);return[s.slice(k("x",n,t,e),a,r)]}case"StridedSlice":{const a=k("begin",n,t,e),r=k("end",n,t,e),i=k("strides",n,t,e),l=k("beginMask",n,t,e),u=k("endMask",n,t,e),h=k("ellipsisMask",n,t,e),f=k("newAxisMask",n,t,e),p=k("shrinkAxisMask",n,t,e),m=k("x",n,t,e);return[s.stridedSlice(m,a,r,i,l,u,h,f,p)]}case"Pack":return nt(()=>{const a=k("axis",n,t,e),r=k("tensors",n,t,e),i=r[0].shape,l=s.squeeze(r[0]).shape,u=r.map(h=>{const f=Jt(h.shape,i);if(!f&&!Jt(s.squeeze(h).shape,l))throw new Error("the input tensors shape does not match");return f?h:s.reshape(h,i)});return[s.stack(u,a)]});case"Unpack":{const a=k("axis",n,t,e),r=k("tensor",n,t,e);return s.unstack(r,a)}case"Tile":{const a=k("reps",n,t,e);return[s.tile(k("x",n,t,e),a)]}case"Split":case"SplitV":{const a=k("axis",n,t,e),r=k("numOrSizeSplits",n,t,e),i=k("x",n,t,e);return s.split(i,r,a)}case"ScatterNd":{const a=k("indices",n,t,e),r=k("values",n,t,e),i=k("shape",n,t,e);return[s.scatterND(a,r,i)]}case"GatherNd":{const a=k("x",n,t,e),r=k("indices",n,t,e);return[s.gatherND(a,r)]}case"SparseToDense":{const a=k("sparseIndices",n,t,e),r=k("outputShape",n,t,e),i=k("sparseValues",n,t,e),l=k("defaultValue",n,t,e);return[s.sparseToDense(a,i,r,i.dtype===l.dtype?l:s.cast(l,i.dtype))]}case"TensorScatterUpdate":{const a=k("indices",n,t,e),r=k("values",n,t,e),i=k("tensor",n,t,e);return[s.tensorScatterUpdate(i,a,r)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sq=(n,t,e,s=In)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:r,emptyRowIndicator:i,reverseIndexMap:l}=s.sparse.sparseFillEmptyRows(k("indices",n,t,e),k("values",n,t,e),k("denseShape",n,t,e),k("defaultValue",n,t,e));return[a,r,i,l]}case"SparseReshape":{const{outputIndices:a,outputShape:r}=s.sparse.sparseReshape(k("inputIndices",n,t,e),k("inputShape",n,t,e),k("newShape",n,t,e));return[a,r]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(k("data",n,t,e),k("indices",n,t,e),k("segmentIds",n,t,e))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(k("data",n,t,e),k("indices",n,t,e),k("segmentIds",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aq=(n,t,e,s=In)=>{switch(n.op){case"FFT":return[s.fft(k("x",n,t,e))];case"IFFT":return[s.ifft(k("x",n,t,e))];case"RFFT":return[s.rfft(k("x",n,t,e))];case"IRFFT":return[s.irfft(k("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rq=(n,t,e,s=In)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(k("input",n,t,e),k("pattern",n,t,e),k("rewrite",n,t,e),k("replaceGlobal",n,t,e))];case"StringNGrams":{const{nGrams:a,nGramsSplits:r}=s.string.stringNGrams(k("data",n,t,e),k("dataSplits",n,t,e),k("separator",n,t,e),k("nGramWidths",n,t,e),k("leftPad",n,t,e),k("rightPad",n,t,e),k("padWidth",n,t,e),k("preserveShortSequences",n,t,e));return[a,r]}case"StringSplit":{const{indices:a,values:r,shape:i}=s.string.stringSplit(k("input",n,t,e),k("delimiter",n,t,e),k("skipEmpty",n,t,e));return[a,r,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(k("input",n,t,e),k("numBuckets",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iq=(n,t,e,s=In)=>{switch(n.op){case"Cast":return[s.cast(k("x",n,t,e),k("dtype",n,t,e))];case"ExpandDims":{const a=k("axis",n,t,e);return[s.expandDims(k("x",n,t,e),a)]}case"Squeeze":{const a=k("axis",n,t,e);return[s.squeeze(k("x",n,t,e),a)]}case"Reshape":return[s.reshape(k("x",n,t,e),k("shape",n,t,e))];case"EnsureShape":return[s.ensureShape(k("x",n,t,e),k("shape",n,t,e))];case"MirrorPad":return[s.mirrorPad(k("x",n,t,e),k("padding",n,t,e),k("mode",n,t,e))];case"PadV2":case"Pad":return[s.pad(k("x",n,t,e),k("padding",n,t,e),k("constantValue",n,t,e))];case"SpaceToBatchND":{const a=k("blockShape",n,t,e),r=k("paddings",n,t,e);return[s.spaceToBatchND(k("x",n,t,e),a,r)]}case"BatchToSpaceND":{const a=k("blockShape",n,t,e),r=k("crops",n,t,e);return[s.batchToSpaceND(k("x",n,t,e),a,r)]}case"DepthToSpace":{const a=k("blockSize",n,t,e),r=k("dataFormat",n,t,e).toUpperCase();return[s.depthToSpace(k("x",n,t,e),a,r)]}case"BroadcastTo":return[s.broadcastTo(k("x",n,t,e),k("shape",n,t,e))];case"BroadcastArgs":return[s.broadcastArgs(k("s0",n,t,e),k("s1",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XT(n,t,e,s,a=nt){const r=((i,l,u)=>{switch(i.category){case"arithmetic":return a(()=>F6(i,l,u));case"basic_math":return a(()=>L6(i,l,u));case"control":return U6(i,l,u);case"convolution":return a(()=>W6(i,l,u));case"creation":return a(()=>G6(i,l,u));case"dynamic":return H6(i,l,u);case"evaluation":return a(()=>q6(i,l,u));case"image":return a(()=>Y6(i,l,u));case"graph":return a(()=>j6(i,l,u));case"logical":return a(()=>Z6(i,l,u));case"matrices":return a(()=>Q6(i,l,u));case"normalization":return a(()=>J6(i,l,u));case"ragged":return a(()=>tq(i,l,u));case"reduction":return a(()=>eq(i,l,u));case"slice_join":return a(()=>nq(i,l,u));case"sparse":return a(()=>sq(i,l,u));case"spectral":return a(()=>aq(i,l,u));case"string":return a(()=>rq(i,l,u));case"transformation":return a(()=>iq(i,l,u));case"hash_table":return K6(i,l,u,s);case"custom":const h=_A(i.op);if(h&&h.customExecutor)return h.customExecutor(new _6(i,l,u));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,t,e);return ho(r)?r.then(i=>[].concat(i)):[].concat(r)}class KT{constructor(t={},e={},s={},a={},r){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=s,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const s=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(s))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YT(n,t,e,s){const a=new Set,r=[];let i=null,l=null;const u=new Set,h=new Set(Object.keys(n).map(m=>us(m)[0]));s=s||[];const f=new Set(s.map(m=>us(m.name)[0])),p=[...t];for(;p.length>0;){const m=p.pop();if((ao(m)||pq(m)||mq(m))&&i==null&&(i=m,l=i.children.map(y=>y.name).filter(y=>a.has(y))),a.add(m.name),e[m.name]==null&&!h.has(m.name)&&!f.has(m.name)){if(m.inputs.length===0){r.push(m.name);continue}m.inputs.forEach(y=>{u.has(y.name)||(u.add(y.name),p.push(y))})}}return{inputs:n,outputs:t,usedNodes:a,missingInputs:r,dynamicNode:i,syncInputs:l}}function oq(n,t){const{usedNodes:e,inputs:s}=t,a=Object.keys(s).map(v=>us(v)[0]).map(v=>n.nodes[v]),r=n.initNodes||[],i=v=>e.has(typeof v=="string"?v:v.name);function l(v){return[...new Map(v.map(S=>[S.name,S])).values()]}const u=l([...a,...n.weights,...r]).filter(i),h=l([...u,...Object.values(n.nodes)]).filter(i),f=new Map(h.map(v=>[v.name,v])),p={};for(const v of h){p[v.name]=p[v.name]||0;for(const S of v.children)i(S)||(p[S.name]=Number.POSITIVE_INFINITY),p[S.name]=(p[S.name]||0)+1}const m=Object.entries(p).filter(([,v])=>v===0).map(([v])=>v),y=[...m];for(;m.length>0;){const v=m.pop(),S=f.get(v);for(const C of S.children.filter(i))--p[C.name]===0&&(y.push(C.name),m.push(C.name))}const b=y.map(v=>f.get(v)),w=lq(b,u);return uq(w,u),w}function lq(n,t){const e=new Map(n.map(i=>[i.name,i])),s=t.map(i=>i.name),a=new Set(s);for(;s.length>0;){const i=s.pop(),l=e.get(i);for(const u of l.children)!e.has(u.name)||a.has(u.name)||(a.add(u.name),s.push(u.name))}return n.filter(i=>a.has(i.name))}class xf extends Error{constructor(t){super(`NodesExecutionOrderError: ${t}`)}}function uq(n,t){const e=new Map(n.map((l,u)=>[l.name,u])),s=new Set(t.map(l=>l.name)),a=l=>s.has(typeof l=="string"?l:l.name),r=new Set(n.map(l=>l.name)),i=l=>r.has(typeof l=="string"?l:l.name);for(const l of n){for(const u of l.children.filter(i)){if(!e.has(u.name))throw new xf(`Child ${u.name} of node ${l.name} is unreachable.`);if(e.get(l.name)>e.get(u.name))throw new xf(`Node ${l.name} is scheduled to run after its child ${u.name}.`)}if(!a(l))for(const u of l.inputs){if(!e.has(u.name))throw new xf(`Input ${u.name} of node ${l.name} is unreachable.`);if(e.get(u.name)>e.get(l.name))throw new xf(`Node ${l.name} is scheduled to run before its input ${u.name}.`)}}}function cq(n){const t=new Map(n.map((l,u)=>[l.name,u])),e=Number.MAX_SAFE_INTEGER,s=n.map((l,u)=>ao(l)?e:u),a=l=>{const u=s[t.get(l.name)];return u??-1},r=n.map((l,u)=>l.children.map(a).reduce((h,f)=>Math.max(h,f),s[u])),i=new Map;for(let l=0;l<n.length;++l){const u=r[l];if(u===e)continue;const h=n[l],f=n[u];i.has(f.name)||i.set(f.name,[]),i.get(f.name).push(h)}return i}const hq=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),dq=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),fq=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function ao(n){return hq.has(n.op)}function pq(n){return dq.has(n.op)}function mq(n){return fq.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ap{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(s=>t[s].map(a=>a.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(s=>{this._functionExecutorMap[s]=new ap(t.functions[s],this)})}getCompilationKey(t,e){const s=t.map(r=>r.name).sort(),a=e.map(r=>r.name).sort();return s.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(t,e){const s=YT(t,e,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:i}=s;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(a.length>0){const h=e.map(p=>p.name),f=Object.keys(t);throw new Error(`Cannot compute the outputs [${h}] from the provided inputs [${f}]. Missing the following inputs: [${a}]`)}const l=oq(this.graph,s),u=cq(l);return{orderedNodes:l,nodeLiveUntilMap:u}}cloneAndKeepTensor(t){if(t==null)return null;const e=t.clone();return pn(e),e}cloneTensorList(t){return t?t.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([e,s])=>[e,this.cloneTensorList(s)]))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);const s=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const a=s.map(m=>this.graph.nodes[us(m)[0]]),r=e.map(m=>us(m)[0]),i=new Set(r);let l=r.map(m=>this.graph.nodes[m]);l.length===0&&(l=this._outputs);const u=this.getCompilationKey(a,l);let h=this.compiledMap.get(u);h==null&&(h=this.compile(t,l),this.compiledMap.set(u,h));try{this.keepIntermediateTensors=rt().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}const f={},p={};return nt(()=>{const m=new KT(this.weightMap,f,p,this.functionExecutorMap,this.parseNodeNameCache),y=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(S=>{const[C,$]=us(S,m),T=[];T[$]=t[S],y[C]=T,this.keepIntermediateTensors&&(this.clonedTensorsMap[C]=this.cloneTensorList(T))});const b=this.getFrozenTensorIds(y),{orderedNodes:w,nodeLiveUntilMap:v}=h;for(const S of w){if(y[S.name])continue;const C=XT(S,y,m,this._resourceManager);if(ho(C))throw new Error(`The execution of the op '${S.op}' returned a promise. Please use model.executeAsync() instead.`);y[S.name]=C,this.keepIntermediateTensors&&(this.clonedTensorsMap[S.name]=this.cloneTensorList(C)),this.checkTensorForDisposalWithNodeLiveUntilInfo(S,y,m,b,i,v.get(S.name))}return this.parent==null&&m.dispose(b),e.map(S=>Sn(S,y,m))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(s=>t[s]).map(s=>s.map(a=>a.id)));return new Set(e)}checkTensorForDisposal(t,e,s,a,r,i,l){if(!(ao(e)||i.has(t))){for(const u of s[t])u!=null&&(l[u.id]=(l[u.id]||0)+e.children.length);for(const u of e.inputs){if(ao(u))continue;const h=WT(u.name,s,a);if(h!=null)for(const f of h){if(!f||f.kept||r.has(f.id))continue;const p=l[f.id];p===1?(f.dispose(),delete l[f.id]):p!=null&&l[f.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,e,s,a,r,i){function l(u){return ao(u)||r.has(u.name)}if(!(ao(t)||i==null))for(const u of i){if(l(u))continue;const h=WT(u.name,e,s);for(const f of h)!f||f.kept||a.has(f.id)||f.dispose()}}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(const e of t)e&&!e.isDisposed&&e.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(t,e,s=!1,a={},r={}){this.disposeIntermediateTensors(),s||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepIntermediateTensors=rt().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}const i=new KT(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const l=await this.executeWithControlFlow(t,i,e,s),u=e.map(m=>Sn(m,l,i)),h=u.map(m=>m.id),f=Object.keys(t).map(m=>t[m].id),p=new Set([...h,...f,...this.weightIds]);return Object.values(l).forEach(m=>{m.forEach(y=>{y&&!y.isDisposed&&!p.has(y.id)&&y.dispose()})}),this.parent==null&&i.dispose(p),u}async executeFunctionAsync(t,e,s){const a=t.reduce((r,i,l)=>(r[this.inputs[l].name]=i,r),{});return this._executeAsync(a,this.outputNodes,!0,e,s)}async executeWithControlFlow(t,e,s,a){const r=Object.keys(t),i=r.map(T=>this.graph.nodes[us(T)[0]]),l=s.map(T=>us(T)[0]),u=new Set(l);let h=l.map(T=>this.graph.nodes[T]);h.length===0&&(h=this._outputs);const{usedNodes:f,missingInputs:p,dynamicNode:m,syncInputs:y}=YT(t,h,this.weightMap,this._initNodes),b=[...i,...this.graph.weights,...this._initNodes||[]].map(T=>({node:T,contexts:e.currentContext})),w=Object.assign({},this.weightMap);Object.keys(t).forEach(T=>{const[I,D]=us(T),z=[];z[D]=t[T],w[I]=z});const v={},S=this.getFrozenTensorIds(w),C={};for(;b.length>0;){const T=this.processStack(i,b,e,w,C,S,u,v,f);await Promise.all(T)}m==null&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const $=h.filter(T=>!ao(T)&&!Sn(T.name,w,e)).map(T=>T.name);if($.length>0){let T="";throw m!=null&&(T=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${y}]`),new Error(`Cannot compute the outputs [${$}] from the provided inputs [${r}]. Consider providing the following inputs: [${p}]. ${T}`)}return w}processStack(t,e,s,a,r,i,l,u,h){const f=[];for(;e.length>0;){const p=e.pop();s.currentContext=p.contexts;let m="";if(p.node.op==="Enter"&&k("isConstant",p.node,a,s)&&([m]=gr(p.node.name,s)),a[p.node.name]==null){const y=XT(p.node,a,s,this._resourceManager);m||([m]=gr(p.node.name,s));const b=s.currentContext;ho(y)?f.push(y.then(w=>(a[m]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(w)),s.currentContext=b,this.checkTensorForDisposal(m,p.node,a,s,i,l,u),this.processChildNodes(p.node,e,s,a,r,h),w))):(a[m]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(y)),this.checkTensorForDisposal(m,p.node,a,s,i,l,u),this.processChildNodes(p.node,e,s,a,r,h))}else this.processChildNodes(p.node,e,s,a,r,h)}return f}processChildNodes(t,e,s,a,r,i){t.children.forEach(l=>{const[u]=gr(l.name,s);r[u]||!i.has(l.name)||(l.op==="Merge"?l.inputNames.some(h=>!!Sn(h,a,s))&&(r[u]=!0,e.push({contexts:s.currentContext,node:l})):l.inputNames.every(h=>!!Sn(h,a,s))&&(r[u]=!0,e.push({contexts:s.currentContext,node:l})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const s=t[e],[a]=us(e),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const i=r.attrParams.shape.value,l=i.length===s.shape.length&&s.shape.every((u,h)=>i[h]===-1||i[h]===u);O(l,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&O(s.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(t){var e,s;const a={};for(const r in t){const i=(s=(e=this._signature)===null||e===void 0?void 0:e.inputs)===null||s===void 0?void 0:s[r];i!=null?a[i.name]=t[r]:a[r]=t[r]}return a}checkInputs(t){const e=Object.keys(t).filter(s=>{const[a]=us(s);return this.graph.nodes[a]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{var s,a;const r=(a=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||a===void 0?void 0:a[e];return r!=null?r.name:e},{})}checkOutputs(t){t.forEach(e=>{const[s]=us(e);if(!this.graph.nodes[s])throw new Error(`The output '${e}' is not found in the graph`)})}}class gq{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yq="?tfjs-format=file",bq="model.json";class xq{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,e={},s=zk){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=s,e==null&&(this.loadOptions={}),this.resourceManager=new gq}findIOHandler(){const t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{const e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=this.handler.load();return ho(t)?t.then(e=>e.getWeightStream==null?this.loadSync(e):this.loadStreaming(e)):this.loadSync(t)}loadSync(t){const e=this.io.decodeWeights(t.weightData,t.weightSpecs);return this.loadWithWeightMap(t,e)}async loadStreaming(t){if(t.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const e=await o$(t.getWeightStream(),t.weightSpecs);return this.loadWithWeightMap(t,e)}loadWithWeightMap(t,e){this.artifacts=t;const s=this.artifacts.modelTopology;let a=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const r=this.artifacts.userDefinedMetadata;r.signature!=null&&(a=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}if(this.signature=a,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new ap(GT.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(e),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){const r=GT.Instance.transformGraph(t.modelInitializer);this.initializer=new ap(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}async save(t,e){if(typeof t=="string"){const s=this.io.getSaveHandlers(t);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${t}'`);t=s[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}addStructuredOutputNames(t){if(this.structuredOutputKeys){const e=t instanceof De?[t]:t,s={};return e.forEach((a,r)=>s[this.structuredOutputKeys[r]]=a),s}return t}predict(t,e){const s=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(t,e){const s=await this.executeAsync(t,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(t){var e;if(!(t instanceof De)&&!Array.isArray(t)){const r=(e=this.signature)===null||e===void 0?void 0:e.inputs;if(r!=null)for(const i in r){const l=r[i];l.resourceId!=null&&(t[i]=this.resourceIdToCapturedInput[l.resourceId])}return t}t=Array.isArray(t)?t:[t];const s=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${t.length} input tensors provided.`);let a=0;return this.inputNodes.reduce((r,i)=>{var l,u,h;const f=(h=(u=(l=this.signature)===null||l===void 0?void 0:l.inputs)===null||u===void 0?void 0:u[i])===null||h===void 0?void 0:h.resourceId;return f!=null?r[i]=this.resourceIdToCapturedInput[f]:r[i]=t[a++],r},{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){const e=this.initializerSignature.outputs,s=Object.keys(e);for(let a=0;a<s.length;a++){const r=s[a],i=e[r];this.resourceIdToCapturedInput[i.resourceId]=t[a]}}}execute(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const s=this.executor.execute(t,e);return s.length>1?s:s[0]}async executeAsync(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const s=await this.executor.executeAsync(t,e);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,s)=>(e[s]=[t[s]],e),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Gt(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function vq(n,t={},e=zk){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof n=="string"&&(n=wq(n));const s=new xq(n,t,e);return await s.load(),s}function wq(n){return n.endsWith("/")||(n=n+"/"),`${n}${bq}${yq}`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var ZT;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(ZT||(ZT={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function At(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&O(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sq=I1;class tg extends P0{nextDataId(){return tg.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new O2(this,Ys())}write(t,e,s){this.firstUse&&(this.firstUse=!1,rt().get("IS_NODE")&&Is(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const a={id:this.nextDataId()};return this.data.set(a,{values:t,dtype:s,refCount:1}),a}makeTensorInfo(t,e,s){let a;if(e==="string"&&s!=null&&s.length>0&&Fc(s[0])){const r=s.map(i=>ai(i));a=this.write(r,t,e)}else a=this.write(s,t,e);return{dataId:a,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,s,a,r){this.data.set(t,{values:e,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:s}=this.data.get(t);if(e==="complex64"){const a=this.readSync(s.real.dataId),r=this.readSync(s.imag.dataId);return Nr(a,r)}return TF(this.data.get(t).values,e)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(a=>oi(a));return Ht(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ht(t.shape,t.dtype,e)}makeOutput(t,e,s){return Ys().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(t);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Qn();return t(),{kernelMs:Qn()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){At([t],"where");const e=this.readSync(t.dataId);return Sq(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}tg.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zA(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const Nq=n=>{const{x:t}=n.inputs,e=n.backend;At(t,"abs");let s=new Float32Array(ht(t.shape));const a=e.data.get(t.dataId).values;return s=zA(a),e.makeOutput(s,t.shape,t.dtype)},Cq={kernelName:pp,backendName:"cpu",kernelFunc:Nq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ke(n){return(t,e,s,a,r)=>{const i=Pt(t,e),l=i.length,u=Ft(i),h=ht(i),f=Cn(r,h),p=t.length,m=e.length,y=Ft(t),b=Ft(e),w=Ll(t,i),v=Ll(e,i);if(w.length+v.length===0)for(let S=0;S<f.length;++S)f[S]=n(s[S%s.length],a[S%a.length]);else for(let S=0;S<f.length;++S){const C=jl(S,l,u),$=C.slice(-p);w.forEach(z=>$[z]=0);const T=Pa($,p,y),I=C.slice(-m);v.forEach(z=>I[z]=0);const D=Pa(I,m,b);f[S]=n(s[T],a[D])}return[f,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cs(n){const{inputs:t,backend:e}=n,{real:s,imag:a}=t,r=e.data.get(s.dataId).values,i=e.data.get(a.dataId).values,l=e.makeTensorInfo(s.shape,"complex64"),u=e.data.get(l.dataId);return u.complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",r),imag:e.makeTensorInfo(a.shape,"float32",i)},l}const Tq={kernelName:Z0,backendName:"cpu",kernelFunc:cs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rp(n,t,e="float32"){if(e==="complex64"){const a=rp(n,t,"float32"),r=rp(n,t,"float32");return cs({inputs:{real:a,imag:r},backend:n})}const s=_n(ht(t),e);return n.makeTensorInfo(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xa(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const $q={kernelName:nh,backendName:"cpu",kernelFunc:Xa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function No(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.data.get(s.dataId).complexTensorInfos.real,r=e.data.get(a.dataId).values;return e.makeTensorInfo(a.shape,a.dtype,r)}const kq={kernelName:Ex,backendName:"cpu",kernelFunc:No};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MA(n,t,e,s){if(s==="int32"){const a=Int32Array.from(n);return[t,"int32",a]}if(s==="bool"){const a=$o([0],e),[r,i]=Ke((l,u)=>l!==u?1:0)(t,[],n,a,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${e} to ${s}`)}function gi(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return Xa({inputs:{x:a},backend:e});const f=rp(e,a.shape,a.dtype),p=gi({inputs:{x:a},backend:e,attrs:{dtype:"float32"}}),m=cs({inputs:{real:p,imag:f},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),m}if(a.dtype==="complex64"){const f=No({inputs:{input:a},backend:e}),p=gi({inputs:{x:f},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(f),p}if(!F2(a.dtype,r)){const f=Xa({inputs:{x:a},backend:e});return{dataId:f.dataId,shape:f.shape,dtype:r}}const i=e.data.get(a.dataId).values,[l,u,h]=MA(i,a.shape,a.dtype,r);return e.makeTensorInfo(l,u,h)}const Iq={kernelName:Wc,backendName:"cpu",kernelFunc:gi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cn(n,t,e,s){return e==null?({inputs:a,backend:r})=>{const{a:i,b:l}=a,u=r;At([i,l],n);const h=u.data.get(i.dataId).values,f=u.data.get(l.dataId).values,p=i.dtype==="string"?Cr(h):h,m=i.dtype==="string"?Cr(f):f,y=s||i.dtype,[b,w]=t(i.shape,l.shape,p,m,y);return u.makeTensorInfo(w,y,b)}:({inputs:a,backend:r})=>{const{a:i,b:l}=a,u=r;if(i.dtype==="complex64"||l.dtype==="complex64"){const h=gi({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),f=u.data.get(h.dataId),p=f.complexTensorInfos.real,m=f.complexTensorInfos.imag,y=u.data.get(p.dataId).values,b=u.data.get(m.dataId).values,w=gi({inputs:{x:l},backend:u,attrs:{dtype:"complex64"}}),v=u.data.get(w.dataId),S=v.complexTensorInfos.real,C=v.complexTensorInfos.imag,$=u.data.get(S.dataId).values,T=u.data.get(C.dataId).values,[I,D,z]=e(i.shape,l.shape,y,b,$,T),B=u.makeTensorInfo(z,"float32",I),R=u.makeTensorInfo(z,"float32",D),_=cs({inputs:{real:B,imag:R},backend:u});return u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(w),u.disposeIntermediateTensorInfo(B),u.disposeIntermediateTensorInfo(R),_}else{const h=u.data.get(i.dataId).values,f=u.data.get(l.dataId).values,p=s||i.dtype,[m,y]=t(i.shape,l.shape,h,f,p);return u.makeTensorInfo(y,p,m)}}}function Dv(n){return(t,e,s,a,r,i)=>{const l=Pt(t,e),u=ht(l),h=l.length,f=Ft(l),p=Cn("float32",u),m=Cn("float32",u),y=Ll(t,l),b=Ll(e,l),w=Nr(s,a),v=Nr(r,i),S=t.length,C=Ft(t),$=e.length,T=Ft(e);if(y.length+b.length===0)for(let I=0;I<p.length;I++){const D=I%w.length,z=I%v.length,B=n(w[D*2],w[D*2+1],v[z*2],v[z*2+1]);p[I]=B.real,m[I]=B.imag}else for(let I=0;I<p.length;I++){const D=jl(I,h,f),z=D.slice(-S);y.forEach(W=>z[W]=0);const B=Pa(z,S,C),R=D.slice(-$);b.forEach(W=>R[W]=0);const _=Pa(R,$,T),A=n(w[B*2],w[B*2+1],v[_*2],v[_*2+1]);p[I]=A.real,m[I]=A.imag}return[p,m,l]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BA=Ke((n,t)=>n+t),Eq=Dv((n,t,e,s)=>({real:n+e,imag:t+s})),Vl=cn(Xl,BA,Eq),Aq={kernelName:Xl,backendName:"cpu",kernelFunc:Vl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ov(n,t,e,s,a){const r=ht(s),i=_n(a,e);for(let l=0;l<n.length;l++){const u=n[l];if(u<0)throw new Error("Input x must be non-negative!");u>=a||(r>0?i[u]+=t[l]:i[u]+=1)}return i}function VA(n,t,e,s=!1){const a=n.shape[0],r=n.shape[1],i=Ht([a,e],t.dtype);for(let l=0;l<a;l++)for(let u=0;u<r;u++){const h=n.get(l,u);if(h<0)throw new Error("Input x must be non-negative!");h>=e||(s?i.set(1,l,h):t.size>0?i.set(i.get(l,h)+t.get(l,u),l,h):i.set(i.get(l,h)+1,l,h))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PA=Ke((n,t)=>n&t),Rq=cn(Sp,PA),Dq={kernelName:Sp,backendName:"cpu",kernelFunc:Rq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ya(n){return(t,e,s)=>{const a=Ge(e,t.length);for(let r=0;r<t.length;++r)a[r]=n(t[r],s);return a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function me(n,t,e){const s=Ya(t);return ki(n,s,e)}function ki(n,t,e){return({inputs:s,attrs:a,backend:r})=>{const{x:i}=s;At(i,n);const l=r,u=l.data.get(i.dataId).values;let h;if(i.dtype==="string"){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");h=Cr(u)}else h=u;const f=e||i.dtype,p=t(h,f,a);return l.makeTensorInfo(i.shape,f,p)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UA=Ya(n=>Math.ceil(n)),Oq=ki(Gc,UA),_q={kernelName:Gc,backendName:"cpu",kernelFunc:Oq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WA(n,t,e,s){const a=Ge(e,ht(t));if(s&&e!=="string"){let r=0;n.forEach(i=>{const l=ht(i.shape);a.set(i.vals,r),r+=l})}else{let r=0;n.forEach(i=>{const l=e==="string"?Cr(i.vals):i.vals;let u=0;for(let h=0;h<i.shape[0];++h){const f=h*t[1]+r;for(let p=0;p<i.shape[1];++p)a[f+p]=l[u++]}r+=i.shape[1]})}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GA=Ke((n,t)=>n===t?1:0),HA=cn(Rp,GA,null,"bool"),Fq={kernelName:Rp,backendName:"cpu",kernelFunc:HA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qA=Ya(n=>Math.exp(n)),jA=ki(Zc,qA,"float32"),Lq={kernelName:Zc,backendName:"cpu",kernelFunc:jA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XA=Ya(n=>Math.expm1(n)),zq=ki(Qc,XA),Mq={kernelName:Qc,backendName:"cpu",kernelFunc:zq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KA=Ya(n=>Math.floor(n)),Bq=ki(Jc,KA),Vq={kernelName:Jc,backendName:"cpu",kernelFunc:Bq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YA=Ke((n,t)=>Math.floor(n/t)),Pq=cn(th,YA,null,"int32"),Uq={kernelName:th,backendName:"cpu",kernelFunc:Pq};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(n,t,e,s,a,r,i,l,u){const h=Ht([s,r],e);for(let f=0;f<s;f++){const p=[];let m=0;for(let y=0;y<a;y++){const b=n[f*a+y];m+=b*i[y],p.push(b)}if(m<0||m>=u/r)throw new Error(`Invalid indices: ${p} does not index into ${l}`);for(let y=0;y<r;y++)h.values[f*r+y]=t.get(...t.indexToLoc(m*r+y))}return h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(n,t,e){const s=Ht(e,n.dtype);for(let a=0;a<s.size;++a){const i=s.indexToLoc(a).slice(),l=i[0],u=i[2],h=t.locToIndex([l,u]);i[2]=t.values[h];const f=n.locToIndex(i);0<=f&&f<n.values.length&&(s.values[a]=n.values[f])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JA=Ke((n,t)=>n>t?1:0),Wq=cn(Fp,JA,null,"bool"),Gq={kernelName:Fp,backendName:"cpu",kernelFunc:Wq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tR=Ke((n,t)=>n>=t?1:0),Hq=cn(eh,tR,null,"bool"),qq={kernelName:eh,backendName:"cpu",kernelFunc:Hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eR=Ke((n,t)=>n<t?1:0),jq=cn(zp,eR,null,"bool"),Xq={kernelName:zp,backendName:"cpu",kernelFunc:jq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nR=Ke((n,t)=>n<=t?1:0),Kq=cn(Mp,nR,null,"bool"),Yq={kernelName:Mp,backendName:"cpu",kernelFunc:Kq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sR(n,t,e){const s=(t-n)/(e-1),a=_n(e,"float32");a[0]=n;for(let r=1;r<a.length;r++)a[r]=a[r-1]+s;return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aR=Ya(n=>Math.log(n)),Zq=ki(ih,aR),Qq={kernelName:ih,backendName:"cpu",kernelFunc:Zq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rR(n,t,e,s){const a=Cn(s,ht(e));for(let r=0;r<a.length;++r){const i=r*t;let l=n[i];for(let u=0;u<t;++u){const h=n[i+u];(Number.isNaN(h)||h>l)&&(l=h)}a[r]=l}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iR=Ke((n,t)=>Math.max(n,t)),Jq=cn(lh,iR),tj={kernelName:lh,backendName:"cpu",kernelFunc:Jq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oR=Ke((n,t)=>Math.min(n,t)),ej=cn(uh,oR),nj={kernelName:uh,backendName:"cpu",kernelFunc:ej};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _v=Ke((n,t)=>n*t),sj=Dv((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e})),eg=cn(hh,_v,sj),aj={kernelName:hh,backendName:"cpu",kernelFunc:eg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lR(n,t,e){const s=bi(-1,e);return _v([],t,s,n,e)}function rj(n){const{inputs:t,backend:e}=n,{x:s}=t;At(s,"neg");const a=e.data.get(s.dataId).values,[r,i]=lR(a,s.shape,s.dtype);return e.makeTensorInfo(i,s.dtype,r)}const ij={kernelName:Kp,backendName:"cpu",kernelFunc:rj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uR=Ke((n,t)=>n!==t?1:0),oj=cn(Yp,uR,null,"bool"),lj={kernelName:Yp,backendName:"cpu",kernelFunc:oj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fv(n,t,e,s,a){const r=t.length,i=ht(t),l=Ft(t),u=Ft(a),h=Cn(e,ht(a));for(let f=0;f<i;++f){const p=jl(f,r,l),m=new Array(p.length);for(let b=0;b<m.length;b++)m[b]=p[s[b]];const y=Pa(m,r,u);h[y]=n[f]}return h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ss(n){const{inputs:t,attrs:e,backend:s}=n,{x:a}=t,{perm:r}=e;At(a,"transpose");const i=a.shape.length,l=new Array(i);for(let p=0;p<l.length;p++)l[p]=a.shape[r[p]];const u=s.data.get(a.dataId).values,h=Fv(u,a.shape,a.dtype,r,l);return{dataId:s.write(h,l,a.dtype),shape:l,dtype:a.dtype}}const uj={kernelName:kl,backendName:"cpu",kernelFunc:ss};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cR(n,t,e,s){const[a,r]=yn(n,s),i=ds(t,"int32"),l=_n(ht(a),i),u=ht(r);for(let h=0;h<l.length;++h){const f=h*u;let p=1;for(let m=0;m<u;++m)p*=e[f+m];l[h]=p}return{outVals:l,outShape:a,outDtype:i}}function cj(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;At(a,"prod");const l=a.shape.length,u=jt(r,a.shape),h=_e(u,l);let f=u,p=a;const m=[];h!=null&&(p=ss({inputs:{x:a},backend:e,attrs:{perm:h}}),m.push(p),f=je(f.length,l));const y=e.data.get(p.dataId).values,{outVals:b,outShape:w,outDtype:v}=cR(p.shape,p.dtype,y,f);let S=w;return i&&(S=qe(w,u)),m.forEach(C=>e.disposeIntermediateTensorInfo(C)),e.makeTensorInfo(S,v,b)}const hj={kernelName:nm,backendName:"cpu",kernelFunc:cj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dj(n,t,e){n.forEach((s,a)=>{if(s<0||s>=e){const r=jl(a,t.length,Ft(t)).join(",");throw new Error(`indices[${r}] = ${s} is not in [0, ${e})`)}})}function fj(n,t){for(let e=0;e<n.length;++e){const s=n[e],a=e===n.length-1?t:n[e+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>a)throw new Error("Ragged splits must not point past values");for(let r=1;r<s.length;++r)if(s[r-1]>s[r])throw new Error("Ragged splits must be sorted in ascending order")}}function pj(n,t,e,s){const a=[];let r=0;const i=t.length-1+e.length,l=new Array(i).fill(null).map(()=>[0]);fj(e,s);let u=1;for(let h=0;h<t.length-1;++h){u*=t[h];const f=t[h+1];for(let p=1;p<u+1;++p)l[h].push(p*f)}for(let h=0;h<n.length;++h){let f=n[h],p=n[h]+1;for(let m=0;m<e.length;++m){const y=e[m],b=m+t.length-1;if(b>=0){const w=l[b],v=w[w.length-1]-y[f];for(let S=f;S<p;++S)l[b].push(y[S+1]+v)}f=y[f],p=y[p]}p!==f&&(a.push([f,p]),r+=p-f)}return{outSplits:l,valueSlices:a,numValues:r}}function mj(n){const t=[];for(let e=0;e<n.length;++e){const s=n[e].length,a=Ge("int32",s);t.push(a),n[e].forEach((r,i)=>a[i]=r)}return t}function QT(n,t){const e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let s=t;s<n.length;s++)e[t-1]*=n[s];return e}function gj(n,t,e,s,a,r){const i=QT(t,2)[1],l=QT(r,2)[1];let u=0;for(const h of e)for(let f=h[0];f<h[1];++f){for(let p=0;p<s;++p)a[u*l+p]=n[f*i+p];++u}}function yj(n,t,e,s,a){const r=t.slice();r[0]=a;const i=Ge(e,ht(r)),l=n.length,u=l===0?0:l/t[0];return gj(n,t,s,u,i,r),[i,r]}function hR(n,t,e,s,a,r,i,l){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const u=t[0][0]-1;if(dj(r,i,u),s.length===0)throw new Error("params.rank must be nonzero");const h=s[0],{outSplits:f,valueSlices:p,numValues:m}=pj(r,i,n,h),y=mj(f),b=yj(e,s,a,p,m);return[y,b[0],b[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JT=2147483647;function dR(n,t,e,s,a,r,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const l=t.length===0,u=a.length===0,h=i.length===0,f=[];l||f.push(t[0]),u||f.push(a[0]),h||f.push(i[0]);for(let v=1;v<f.length;++v)if(f[v]!==f[v-1])throw new Error("starts, limits, and deltas must have the same shape");const p=f.length===0?1:f[0],m=Ge("int32",p+1);m[0]=0;for(let v=0;v<p;++v){const S=l?n[0]:n[v],C=u?s[0]:s[v],$=h?r[0]:r[v];if($===0)throw new Error("Requires delta != 0");let T;if($>0&&C<S||$<0&&C>S)T=0;else if(T=Math.ceil(Math.abs((C-S)/$)),T>JT)throw new Error(`Requires ((limit - start) / delta) <= ${JT}`);m[v+1]=m[v]+T}const y=m[p],b=Ge(e,y);let w=0;for(let v=0;v<p;++v){const S=m[v+1]-m[v];let C=l?n[0]:n[v];const $=h?r[0]:r[v];for(let T=0;T<S;++T)b[w++]=C,C+=$}return[m,b]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Xs=Sa;class ip{constructor(t,e,s,a,r,i,l,u,h,f){this.shape=t,this.shapeShape=e,this.values=s,this.valuesShape=a,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=l,this.rowPartitionValues=u,this.rowPartitionValuesShapes=h,this.rowPartitionTypes=Xk(f),this.raggedRank=Kk(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Xs.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Xs.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Xs.VALUE_ROWIDS:return ip.getMaxWidthValueRowID(e);case Xs.ROW_SPLITS:return ip.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Xs[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(e===0||e===1)return 0;let s=0;for(let a=0;a<e-1;++a){const r=t[a+1]-t[a];r>s&&(s=r)}return s}static getMaxWidthValueRowID(t){const e=t.length;if(e===0)return 0;let s=0,a=t[0],r=0;for(let i=1;i<e;++i){const l=t[i];l!==a&&(a=l,r=Math.max(i-s,r),s=i)}return Math.max(e-s,r)}tensorShapeFromTensor(t,e,s=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return e2(t,s)}calculateOutputSize(t){const e=this.valuesShape,s=this.defaultValueShape;Yk(s,e);const a=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=jk(this.raggedRank,a,e);i[0]<0&&(i[0]=t);for(let l=1;l<=this.raggedRank;++l)i[l]<0&&(i[l]=this.getMaxWidth(l));return i}calculateFirstParentOutputIndex(t,e,s){const a=Math.min(t,s),r=[];let i=0;for(let l=0;l<a;++l,i+=e)r.push(i);for(let l=a;l<t;++l)r.push(-1);return O(r.length===t,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(t,e,s,a){const r=t.length,i=[];for(let l=0;l<r-1;++l){const u=t[l+1]-t[l];let h=Math.min(a,u),f=e[l];f===-1&&(h=0);for(let p=0;p<h;++p)i.push(f),f+=s;for(let p=0;p<u-h;++p)i.push(-1)}if(r>0&&i.length!==t[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,s,a){const r=t.length,i=[];if(r===0)return[];let l=0,u=t[0];if(u>=e.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${e.length}`);let h=e[u];i.push(h);for(let f=1;f<r;++f){const p=t[f];if(p===u)h>=0&&(++l,l<a?h+=s:h=-1);else{if(l=0,u=p,p>=e.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${e.length}`);h=e[p]}i.push(h)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,s,a){const r=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case Xs.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,e,s,a);case Xs.ROW_SPLITS:if(r.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(r,e,s,a);default:throw new Error(`Unsupported partition type: ${Xs[i]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case Xs.FIRST_DIM_SIZE:return t[0];case Xs.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Xs.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Xs[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),s=this.calculateOutputSize(e),a=new Array(this.raggedRank+1);a[a.length-1]=1;for(let u=a.length-2;u>=0;--u)a[u]=a[u+1]*s[u+1];const r=e2(s,!1),i=Ge(this.valuesDType,ht(r));if(a[0]*s[0]>0){let u=this.calculateFirstParentOutputIndex(e,a[0],s[0]);for(let h=1;h<=this.raggedRank;++h)u=this.calculateOutputIndex(h-1,u,a[h],s[h]);this.setOutput(this.raggedRank,u,i,r)}return[r,i]}setOutput(t,e,s,a){if(s.length===0)return;const r=this.values,i=s;let l=a.slice();l=l.slice(t+1);const u=ht(l),h=e.length;let f=this.defaultValue;if(f.length!==u&&f.length!==1){const b=this.defaultValueShape;nt(()=>{const w=q(f,b);f=Al(w,l).dataSync()})}let p=0,m=0,y=0;for(let b=0;b<=h;++b){let w=b<h?e[b]:-1;if(w===y){++y;continue}if(m<y){const v=r.subarray(p*u),S=i.subarray(m*u),C=(y-m)*u;t2(S,v,C)}if(b>=h){const v=s.length;w=Math.floor(v/u)}if(w>y)if(this.defaultValue.length===1)i.subarray(y*u,w*u).fill(this.defaultValue[0]),y=w;else for(;w>y;){const v=i.slice(y*u);t2(v,f,u),++y}w<0?(p=b+1,m=y):(p=b,m=y,y=m+1)}}}function t2(n,t,e){for(let s=0;s<e;s++)n[s]=t[s]}function e2(n,t){const e=[];for(let s of n){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}e.push(s)}return e}function fR(n,t,e,s,a,r,i,l,u,h){return new ip(n,t,e,s,a,r,i,l,u,h).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pR(n,t,e,s){const a=n===t,r=n<t&&e<0,i=t<n&&e>1;if(a||r||i)return _n(0,s);const l=Math.abs(Math.ceil((t-n)/e)),u=_n(l,s);t<n&&e===1&&(e=-1),u[0]=n;for(let h=1;h<u.length;h++)u[h]=u[h-1]+e;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mR=Ya(n=>1/Math.sqrt(n)),bj=ki(yh,mR),xj={kernelName:yh,backendName:"cpu",kernelFunc:bj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oo(n,t,e,s,a,r,i,l,u,h){const f=[s/a,a],p=n.values,m=t.values;if(s===0)return Ht(e,t.dtype);const y=u instanceof rn?u:Ht(f,t.dtype);typeof u=="string"||typeof u=="number"?y.values.fill(u):typeof u=="boolean"&&y.values.fill(+u);for(let b=0;b<r;b++){const w=[];let v=0;for(let S=0;S<i;S++){const C=p[b*i+S];w.push(C),v+=C*l[S]}if(v<0||v>=s/a)throw new Error(`Invalid indices: ${w} does not index into ${e}`);for(let S=0;S<a;S++)h?y.values[v*a+S]+=m[b*a+S]:y.values[v*a+S]=t.rank===0?m[0]:m[b*a+S]}return y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vj=Ya(n=>1/(1+Math.exp(-n))),gR=me(Sh,n=>1/(1+Math.exp(-n))),wj={kernelName:Sh,backendName:"cpu",kernelFunc:gR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yR(n,t,e,s,a){const r=P1(s,t,e),i=ht(e),l=Ft(s);if(r){const p=U1(t,l);return a==="string"?n.slice(p,p+i):n.subarray(p,p+i)}const u=a==="string"?Cr(n):n,h=Ht(s,a,u),f=Ht(e,a);for(let p=0;p<f.size;++p){const m=f.indexToLoc(p),y=m.map((b,w)=>b+t[w]);f.set(h.get(...y),...m)}return a==="string"?gI(f.values):f.values}function Co(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,size:i}=s;At(a,"slice");const[l,u]=Vm(a,r,i);B1(a,l,u);const h=e.data.get(a.dataId).values,f=yR(h,l,u,a.shape,a.dtype);return e.makeTensorInfo(u,a.dtype,f)}const Sj={kernelName:lm,backendName:"cpu",kernelFunc:Co};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bR(n,t,e,s,a,r,i){const l=t[0],u=r[0],h=new Array(u),f=new Array(l),p=t[1];if(u===0){if(l!==0)throw new Error(sI(l));const v=Ge(e,0),S=Ge(a,0);return[v,[0,p],S,h,f]}let m=!0,y=0;const b=new Array(u).fill(0);for(let v=0;v<l;++v){const S=n[v*p];if(S<0)throw new Error(aI(v,S));if(S>=u)throw new Error(rI(v,S,u));++b[S],m=m&&S>=y,y=S}let w=!0;for(let v=0;v<u;++v){const S=b[v]===0;h[v]=S,w=w&&!S,b[v]=Math.max(b[v],1),v>0&&(b[v]+=b[v-1])}if(w&&m){const v=n,S=s;for(let C=0;C<l;++C)f[C]=C;return[v,[l,p],S,h,f]}else{const v=b[u-1],S=Ge(e,v*p),C=Ge(a,v),$=new Array(u).fill(0);for(let T=0;T<l;++T){const I=n[T*p],D=$[I],z=(I===0?0:b[I-1])+D;$[I]++;for(let B=0;B<p;++B)S[z*p+B]=n[T*p+B];C[z]=s[T],f[T]=z}for(let T=0;T<u;++T)if($[T]===0){const D=T===0?0:b[T-1];S[D*p+0]=T;for(let z=1;z<p;++z)S[D*p+z]=0;C[D]=i}return[S,[v,p],C,h,f]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xR(n,t,e,s,a){const r=ht(s),i=t[0],l=a.length,u=[];let h=1,f=-1;for(let v=0;v<l;++v){const S=a[v];if(S===-1){if(f!==-1)throw new Error(iI(f,v));f=v,u.push(1)}else{if(S<0)throw new Error(oI(v,S));h*=S,u.push(S)}}if(f!==-1){if(h<=0)throw new Error(lI());const v=Math.trunc(r/h);if(h*v!==r)throw new Error(uI(s,u));u[f]=v}if(ht(u)!==r)throw new Error(cI(s,u));const m=s.length,y=[];if(m>0){y[m-1]=1;for(let v=m-2;v>=0;--v)y[v]=y[v+1]*s[v+1]}const b=[];if(l>0){b[l-1]=1;for(let v=l-2;v>=0;--v)b[v]=b[v+1]*u[v+1]}const w=Ge(e,i*l);for(let v=0;v<i;++v){let S=0;for(let C=0;C<m;++C)S+=n[v*m+C]*y[C];for(let C=0;C<l;++C)w[v*l+C]=Math.trunc(S/b[C]),S%=b[C]}return[w,[i,l],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lv(n,t,e,s,a,r=!1,i=0){const l=s.length,u=[t[0],n.length/t[0]],h=u[1],p=l>0?a[l-1]+1:0;if(p<0)throw new Error(h0());const m=t.slice();m[0]=p;const y=m.reduce(($,T)=>$*T,1),b=Ge(e,y);if(l===0)return p>0&&b.fill(i),[b,m];if(p<=0)throw new Error(h0());let w=0,v=1,S=0,C=a[w];for(;;){let $=0;if(v<l){if($=a[v],C===$){++v;continue}if(C>=$)throw new Error(hI())}if(C<0||C>=p)throw new Error(dI(C,p));C>S&&b.fill(i,S*h,C*h);for(let T=w;T<v;++T){const I=s[T];if(I<0||I>=u[0])throw new Error(fI(T,s[T],u[0]));for(let D=0;D<h;D++)b[C*h+D]+=n[I*h+D]}if(r)for(let T=0;T<h;T++)b[C*h+T]/=v-w;if(w=v,++v,S=C+1,C=$,v>l)break}return S<p&&b.fill(i,S*h,p*h),[b,m]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nj=Ya(n=>Math.sqrt(n)),Cj=me(Ch,n=>Math.sqrt(n)),Tj={kernelName:Ch,backendName:"cpu",kernelFunc:Cj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vR=Ke((n,t)=>{const e=n-t;return e*e}),$j=cn(Th,vR),kj={kernelName:Th,backendName:"cpu",kernelFunc:$j};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wR=Ya((n,t)=>{const{pattern:e,replaceGlobal:s,rewrite:a}=t;return n.replace(new RegExp(e,s?"g":""),a)}),Ij=ki(fm,wR),Ej={kernelName:fm,backendName:"cpu",kernelFunc:Ij};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(n,t,e,s){const a=Ht(n,t.dtype);for(let r=0;r<a.size;r++){const i=a.indexToLoc(r),l=new Array(i.length);for(let u=0;u<l.length;u++)l[u]=i[u]*e[u]+s[u];a.set(t.get(...l),...i)}return a}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Aj{constructor(t,e,s,a,r,i){this.separator=ai(t),this.nGramWidths=e,this.leftPad=ai(s),this.rightPad=ai(a),this.padWidth=r,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const s=this.getPadWidth(e);return Math.max(0,t+2*s-e+1)}createNGrams(t,e,s,a,r,i){for(let l=0;l<r;++l){const u=this.getPadWidth(i),h=Math.max(0,u-l),f=Math.max(0,u-(r-(l+1))),p=i-(h+f),m=e+(h>0?0:l-u);let y=0;y+=h*this.leftPad.length;for(let C=0;C<p;++C)y+=t[m+C].length;y+=f*this.rightPad.length;const b=h+f+p-1;y+=b*this.separator.length,s[a+l]=new Uint8Array(y);const w=s[a+l];let v=0;const S=C=>C.forEach($=>w[v++]=$);for(let C=0;C<h;++C)S(this.leftPad),S(this.separator);for(let C=0;C<p-1;++C)S(t[m+C]),S(this.separator);if(p>0){S(t[m+p-1]);for(let C=0;C<f;++C)S(this.separator),S(this.rightPad)}else{for(let C=0;C<f-1;++C)S(this.rightPad),S(this.separator);S(this.rightPad)}}}compute(t,e){const s=t.length,a=e.length;if(a>0){let u=e[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let h=1;h<a;++h){let f=e[h]>=u;if(f=f&&e[h]<=s,!f)throw new Error(`Invalid split value ${e[h]}, must be in [${u}, ${s}]`);u=e[h]}if(u!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${u}`)}const r=a-1,i=Ge("int32",a);if(s===0||a===0){const u=new Array(s);for(let h=0;h<=r;++h)i[h]=0;return[u,i]}i[0]=0;for(let u=1;u<=r;++u){const h=e[u]-e[u-1];let f=0;this.nGramWidths.forEach(p=>{f+=this.getNumNGrams(h,p)}),this.preserveShort&&h>0&&f===0&&(f=1),i[u]=i[u-1]+f}const l=new Array(i[r]);for(let u=0;u<r;++u){const h=e[u];let f=i[u];if(this.nGramWidths.forEach(p=>{const m=e[u+1]-e[u],y=this.getNumNGrams(m,p);this.createNGrams(t,h,l,f,y,p),f+=y}),this.preserveShort&&f===i[u]){const p=e[u+1]-e[u];if(p===0)continue;const m=p+2*this.padWidth;this.createNGrams(t,h,l,f,1,m)}}return[l,i]}}function NR(n,t,e,s,a,r,i,l){return new Aj(e,s,a,r,i,l).compute(n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rj(n,t,e,s){if(!n.length)return;if(t.length===0){for(let r=0;r<n.length;++r)s.push(n.subarray(r,r+1));return}if(t.length===1){const r=t[0];let i=n.indexOf(r);for(;i!==-1;){const l=n.subarray(0,i);(!e||l.length!==0)&&s.push(l),n=n.subarray(i+1),i=n.indexOf(r)}(!e||n.length!==0)&&s.push(n);return}let a=0;for(let r=0;r<n.length+1;r++)if(r===n.length||t.indexOf(n[r])!==-1){const i=n.subarray(a,r);(!e||i.length!==0)&&s.push(i),a=r+1}}function CR(n,t,e){const s=n.length,a=[];let r=0,i=0;const l=new Array(s);for(let m=0;m<s;++m){const y=a.length;Rj(n[m],t,e,a);const b=a.length-y;l[m]=b,r+=b,i=Math.max(i,b)}const u=Ge("int32",r*2),h=new Array(r),f=[s,i];let p=0;for(let m=0;m<s;++m)for(let y=0;y<l[m];++y)u[p*2]=m,u[p*2+1]=y,h[p]=a[p],++p;return[u,h,f]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TR(n,t){const e=Ge("int32",n.length);for(let s=0;s<n.length;++s)e[s]=WF(n[s]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $R=Ke((n,t)=>n-t),Dj=Dv((n,t,e,s)=>({real:n-e,imag:t-s})),zv=cn($h,$R,Dj),Oj={kernelName:$h,backendName:"cpu",kernelFunc:zv};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kR(n,t){const e=new Array(n.rank);for(let a=0;a<e.length;a++)e[a]=n.shape[a]*t[a];const s=Ht(e,n.dtype);for(let a=0;a<s.values.length;++a){const r=s.indexToLoc(a),i=new Array(n.rank);for(let u=0;u<i.length;u++)i[u]=r[u]%n.shape[u];const l=n.locToIndex(i);s.values[a]=n.values[l]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mc=(n,t)=>{const e=t.value-n.value;return e===0?n.index-t.index:e};function IR(n,t,e=0,s=n.length-1){for(;s>e;){if(s-e>600){const l=s-e+1,u=t-e+1,h=Math.log(l),f=.5*Math.exp(2*h/3),p=.5*Math.sqrt(h*f*(l-f)/l)*Math.sign(u-l/2),m=Math.max(e,Math.floor(t-u*f/l+p)),y=Math.min(s,Math.floor(t+(l-u)*f/l+p));IR(n,t,m,y)}const a=n[t];let r=e,i=s;for(Sl(n,e,t),mc(n[s],a)>0&&Sl(n,e,s);r<i;){for(Sl(n,r,i),r++,i--;mc(n[r],a)<0;)r=r+1;for(;mc(n[i],a)>0;)i=i-1}mc(n[e],a)===0?Sl(n,e,i):(i=i+1,Sl(n,i,s)),i<=t&&(e=i+1),t<=i&&(s=i-1)}}function ER(n,t,e,s,a){const r=t[t.length-1],[i,l]=[n.length/r,r],u=Cn(e,i*s),h=Cn("int32",i*s);for(let p=0;p<i;p++){const m=p*l,y=n.subarray(m,m+l);let b=new Array(y.length);y.forEach((C,$)=>b[$]={value:C,index:$}),s<b.length&&(IR(b,s),b=b.slice(0,s)),a&&b.sort(mc);const w=p*s,v=u.subarray(w,w+s),S=h.subarray(w,w+s);for(let C=0;C<s;C++)v[C]=b[C].value,S[C]=b[C].index}const f=t.slice();return f[f.length-1]=s,[Ht(f,e,u),Ht(f,"int32",h)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AR(n,t,e,s){const a=jt(t,e)[0],r=[1,e[0],1];for(let b=0;b<a;b++)r[0]*=e[b];r[1]=e[a];for(let b=a+1;b<e.length;b++)r[2]*=e[b];const i=new Map,l=new Int32Array(e[a]),u=new rn(r,s,n),h=[],f=r[0]===1&&r[2]===1;for(let b=0;b<e[a];b++){let w;if(f)w=n[b].toString();else{const S=[];for(let C=0;C<r[0];C++)for(let $=0;$<r[2];$++)S.push(u.get(C,b,$));w=S.join(",")}const v=i.get(w);if(v!=null)l[b]=v;else{const S=i.size;i.set(w,S),l[b]=S,h.push(b)}}const p=r.slice();p[1]=i.size;const m=new rn(p,s);h.forEach((b,w)=>{for(let v=0;v<r[0];v++)for(let S=0;S<r[2];S++)m.set(u.get(v,b,S),v,w,S)});const y=e.slice();return y[a]=p[1],{outputValues:m.values,outputShape:y,indices:l}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _j=Object.freeze(Object.defineProperty({__proto__:null,addImpl:BA,bincountImpl:Ov,bincountReduceImpl:VA,bitwiseAndImpl:PA,castImpl:MA,ceilImpl:UA,concatImpl:WA,equalImpl:GA,expImpl:qA,expm1Impl:XA,floorDivImpl:YA,floorImpl:KA,gatherNdImpl:ZA,gatherV2Impl:QA,greaterEqualImpl:tR,greaterImpl:JA,lessEqualImpl:nR,lessImpl:eR,linSpaceImpl:sR,logImpl:aR,maxImpl:rR,maximumImpl:iR,minimumImpl:oR,multiplyImpl:_v,negImpl:lR,notEqualImpl:uR,prodImpl:cR,raggedGatherImpl:hR,raggedRangeImpl:dR,raggedTensorToTensorImpl:fR,rangeImpl:pR,rsqrtImpl:mR,scatterImpl:oo,sigmoidImpl:vj,simpleAbsImpl:zA,sliceImpl:yR,sparseFillEmptyRowsImpl:bR,sparseReshapeImpl:xR,sparseSegmentReductionImpl:Lv,sqrtImpl:Nj,squaredDifferenceImpl:vR,staticRegexReplaceImpl:wR,stridedSliceImpl:SR,stringNGramsImpl:NR,stringSplitImpl:CR,stringToHashBucketFastImpl:TR,subImpl:$R,tileImpl:kR,topKImpl:ER,transposeImpl:Fv,uniqueImpl:AR},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */s$("cpu",()=>new tg,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RR=me(Kc,n=>n>=0?n:Math.exp(n)-1),Fj={kernelName:Kc,backendName:"cpu",kernelFunc:RR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DR(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{alpha:r}=s;At([a],"leakyRelu");const i=ht(a.shape),l=e.data.get(a.dataId).values,u=Cn("float32",i);for(let h=0;h<l.length;h++)u[h]=l[h]<0?r*l[h]:l[h];return e.makeTensorInfo(a.shape,"float32",u)}const Lj={kernelName:Lp,backendName:"cpu",kernelFunc:DR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zj=Ke((n,t)=>n<0?t*n:n);function OR(n){const{inputs:t,backend:e}=n,{x:s,alpha:a}=t;At([s,a],"prelu");const r=e.data.get(s.dataId).values,i=e.data.get(a.dataId).values,[l,u]=zj(s.shape,a.shape,r,i,"float32");return e.makeTensorInfo(u,"float32",l)}const Mj={kernelName:em,backendName:"cpu",kernelFunc:OR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _R=me(ph,n=>Math.max(0,n)),Bj={kernelName:ph,backendName:"cpu",kernelFunc:_R};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FR=me(mh,n=>Math.min(Math.max(0,n),6)),Vj={kernelName:mh,backendName:"cpu",kernelFunc:FR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function op(n,t,e,s,a){if(e==="linear")return Xa({inputs:{x:t},backend:n});if(e==="relu")return _R({inputs:{x:t},backend:n});if(e==="elu")return RR({inputs:{x:t},backend:n});if(e==="relu6")return FR({inputs:{x:t},backend:n});if(e==="prelu")return OR({inputs:{x:t,alpha:s},backend:n});if(e==="leakyrelu")return DR({inputs:{x:t},backend:n,attrs:{alpha:a}});if(e==="sigmoid")return gR({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Te(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{shape:r}=s,i=ht(a.shape),l=_2(r,i),u=ht(l);O(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(a.dataId);const h=e.data.get(a.dataId);if(h.complexTensorInfos!=null){const f=h.complexTensorInfos.real,p=h.complexTensorInfos.imag;f.shape=l,p.shape=l}return{dataId:a.dataId,shape:l,dtype:a.dtype}}const Pj={kernelName:sm,backendName:"cpu",kernelFunc:Te};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LR(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r}=t,{transposeA:i,transposeB:l}=s;At([a,r],"matMul");const u=a.shape.length,h=r.shape.length,f=i?a.shape[u-2]:a.shape[u-1],p=l?r.shape[h-1]:r.shape[h-2],m=i?a.shape[u-1]:a.shape[u-2],y=l?r.shape[h-2]:r.shape[h-1],b=a.shape.slice(0,-2),w=r.shape.slice(0,-2),v=ht(b),S=ht(w),$=Pt(a.shape.slice(0,-2),r.shape.slice(0,-2)).concat([m,y]);O(f===p,()=>`Error in matMul: inner shapes (${f}) and (${p}) of Tensors with shapes ${a.shape} and ${r.shape} and transposeA=${i} and transposeB=${l} must match.`);const T=i?[v,f,m]:[v,m,f],I=l?[S,y,p]:[S,p,y],D=Te({inputs:{x:a},backend:e,attrs:{shape:T}}),z=Te({inputs:{x:r},backend:e,attrs:{shape:I}}),B=i?D.shape[1]:D.shape[2],R=i?D.shape[2]:D.shape[1],_=l?z.shape[1]:z.shape[2],A=Math.max(v,S),W=e.data.get(D.dataId).values,K=e.data.get(z.dataId).values,tt=Ft(D.shape),Q=Ft(z.shape),[P,et,Y]=i?[tt[0],1,tt[1]]:[tt[0],tt[1],1],[at,M,j]=l?[1,Q[1],Q[0]]:[Q[1],1,Q[0]],lt=R*_,ot=Ht([A,R,_],D.dtype),ut=ot.values,mt=e.blockSize;for(let bt=0;bt<A;bt++){const Ct=bt%v,wt=bt%S;for(let Tt=0;Tt<R;Tt+=mt){const It=Math.min(Tt+mt,R);for(let Mt=0;Mt<_;Mt+=mt){const te=Math.min(Mt+mt,_);for(let ee=0;ee<B;ee+=mt){const ye=Math.min(ee+mt,B);for(let ce=Tt;ce<It;ce++)for(let ne=Mt;ne<te;ne++){let be=0;for(let fe=ee;fe<ye;fe++){const vs=W[Ct*P+ce*et+fe*Y],Be=K[fe*at+ne*M+wt*j];be+=vs*Be}ut[bt*lt+(ce*_+ne)]+=be}}}}}return e.disposeIntermediateTensorInfo(D),e.disposeIntermediateTensorInfo(z),e.makeTensorInfo($,ot.dtype,ot.values)}const Uj={kernelName:vp,backendName:"cpu",kernelFunc:LR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wj(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r,bias:i,preluActivationWeights:l}=t,{transposeA:u,transposeB:h,activation:f,leakyreluAlpha:p}=s;let m,y,b;const w=[];m=LR({inputs:{a,b:r},attrs:{transposeA:u,transposeB:h},backend:e}),i&&(y=Vl({inputs:{a:m,b:i},backend:e}),w.push(m),m=y),f&&(b=op(e,m,f,l,p),w.push(m),m=b);for(const S of w)e.disposeIntermediateTensorInfo(S);return m}const Gj={kernelName:Vf,backendName:"cpu",kernelFunc:Wj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hj=me(Lc,n=>Math.acos(n)),qj={kernelName:Lc,backendName:"cpu",kernelFunc:Hj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jj=me(zc,n=>Math.acosh(n)),Xj={kernelName:zc,backendName:"cpu",kernelFunc:jj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kj(n){const{inputs:t,backend:e}=n,s=t;At(t,"addN");const a=s.map(l=>e.data.get(l.dataId).values),r=Ht(s[0].shape,s[0].dtype),i=r.values;for(let l=0;l<s.length;l++){const u=a[l];for(let h=0;h<i.length;h++)i[h]+=u[h]}return e.makeTensorInfo(r.shape,r.dtype,r.values)}const Yj={kernelName:mp,backendName:"cpu",kernelFunc:Kj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zj(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;At(a,"all");const l=jt(r,a.shape);let u=l;const h=_e(u,a.shape.length);let f=a;h!=null&&(f=ss({inputs:{x:a},backend:e,attrs:{perm:h}}),u=je(u.length,a.shape.length)),kn("all",u,f.shape.length);const[p,m]=yn(f.shape,u),y=ht(m),b=_n(ht(p),f.dtype),w=e.data.get(f.dataId).values;for(let S=0;S<b.length;++S){const C=S*y;let $=w[C];for(let T=0;T<y;++T){const I=w[C+T];$=$&&I}b[S]=$}h!=null&&e.disposeIntermediateTensorInfo(f);const v=e.makeTensorInfo(p,f.dtype,b);if(i){const S=qe(p,l),C=Te({inputs:{x:v},backend:e,attrs:{shape:S}});return e.disposeIntermediateTensorInfo(v),C}return v}const Qj={kernelName:H0,backendName:"cpu",kernelFunc:Zj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jj(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;At(a,"any");const l=jt(r,a.shape);let u=l;const h=_e(u,a.shape.length);let f=a;h!=null&&(f=ss({inputs:{x:a},backend:e,attrs:{perm:h}}),u=je(u.length,a.shape.length)),kn("any",u,f.shape.length);const[p,m]=yn(f.shape,u),y=ht(m),b=_n(ht(p),f.dtype),w=e.data.get(f.dataId).values;for(let S=0;S<b.length;++S){const C=S*y;let $=w[C];for(let T=0;T<y;++T){const I=w[C+T];$=$||I}b[S]=$}h!=null&&e.disposeIntermediateTensorInfo(f);const v=e.makeTensorInfo(p,f.dtype,b);if(i){const S=qe(p,l),C=Te({inputs:{x:v},backend:e,attrs:{shape:S}});return e.disposeIntermediateTensorInfo(v),C}return v}const t5={kernelName:q0,backendName:"cpu",kernelFunc:Jj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;At(a,"argMax");let i=jt(r,a.shape);const l=_e(i,a.shape.length);let u=a;const h=[];l!=null&&(u=ss({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=je(i.length,u.shape.length)),i=[i[0]],kn("argMax",i,u.shape.length);const[f,p]=yn(u.shape,i),m=ht(f),y=_n(m,"int32"),b=ht(p),w=e.data.get(u.dataId).values;for(let v=0;v<y.length;++v){const S=v*b;let C=w[S],$=0;for(let T=0;T<b;++T){const I=w[S+T];I>C&&(C=I,$=T)}y[v]=$}return h.forEach(v=>e.disposeIntermediateTensorInfo(v)),e.makeTensorInfo(f,"int32",y)}const n5={kernelName:gp,backendName:"cpu",kernelFunc:e5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;At(a,"argMin");let i=jt(r,a.shape);const l=_e(i,a.shape.length);let u=a;const h=[];l!=null&&(u=ss({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=je(i.length,u.shape.length)),i=[i[0]],kn("argMin",i,u.shape.length);const[f,p]=yn(u.shape,i),m=ht(f),y=_n(m,"int32"),b=ht(p),w=e.data.get(u.dataId).values;for(let v=0;v<y.length;++v){const S=v*b;let C=w[S],$=0;for(let T=0;T<b;++T){const I=w[S+T];I<C&&(C=I,$=T)}y[v]=$}return h.forEach(v=>e.disposeIntermediateTensorInfo(v)),e.makeTensorInfo(f,"int32",y)}const a5={kernelName:yp,backendName:"cpu",kernelFunc:s5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r5=me(Mc,n=>Math.asin(n)),i5={kernelName:Mc,backendName:"cpu",kernelFunc:r5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o5=me(Bc,n=>Math.asinh(n)),l5={kernelName:Bc,backendName:"cpu",kernelFunc:o5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u5=me(Vc,n=>Math.atan(n)),c5={kernelName:Vc,backendName:"cpu",kernelFunc:u5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h5=Ke((n,t)=>Math.atan2(n,t)),d5=cn(Uc,h5),f5={kernelName:Uc,backendName:"cpu",kernelFunc:d5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p5=me(Pc,n=>Math.atanh(n)),m5={kernelName:Pc,backendName:"cpu",kernelFunc:p5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mv(n,t,e,s,a,r){const i=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,h=a.dilationWidth,f=a.effectiveFilterHeight,p=a.effectiveFilterWidth,m=a.padInfo.top,y=a.padInfo.left,b=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=Ht(a.outShape,e),v=w.values,S=a.outShape[1]*a.outShape[2]*a.outShape[3],C=a.outShape[2]*a.outShape[3],$=a.outShape[3];for(let T=0;T<a.batchSize;++T){const I=T*S,D=T*s[0];for(let z=0;z<a.inChannels;++z)for(let B=0;B<a.outHeight;++B){const R=B*i-m,_=Math.max(0,R),A=Math.min(a.inHeight,f+R),W=I+B*C;for(let K=0;K<a.outWidth;++K){const tt=K*l-y,Q=Math.max(0,tt),P=Math.min(a.inWidth,p+tt);let et=b,Y=0,at=0;for(let j=_;j<A;j+=u){const lt=D+j*s[1];for(let ot=Q;ot<P;ot+=h){const ut=lt+ot*s[2],mt=n[ut+z];r==="max"&&mt>et?et=mt:r==="avg"&&(Y+=mt,at++)}if(isNaN(et))break}const M=W+K*$+z;v[M]=r==="avg"?Y/at:et}}}return w}function zR(n,t,e,s,a=!1,r=!1){const i=Ht(s.outShape,"int32"),l=s.strideHeight,u=s.strideWidth,h=s.dilationHeight,f=s.dilationWidth,p=s.effectiveFilterHeight,m=s.effectiveFilterWidth,y=s.padInfo.top,b=s.padInfo.left,w=Ht(t,e,n);for(let v=0;v<s.batchSize;++v)for(let S=0;S<s.inChannels;++S)for(let C=0;C<s.outHeight;++C){const $=C*l-y;let T=$;for(;T<0;)T+=h;const I=Math.min(s.inHeight,p+$);for(let D=0;D<s.outWidth;++D){const z=D*u-b;let B=z;for(;B<0;)B+=f;const R=Math.min(s.inWidth,m+z);let _=Number.NEGATIVE_INFINITY,A=-1;for(let W=T;W<I;W+=h){const K=W-$;for(let tt=B;tt<R;tt+=f){const Q=tt-z,P=w.get(v,W,tt,S);P>_&&(_=P,a?A=r?((v*s.inHeight+W)*s.inWidth+tt)*s.inChannels+S:(W*s.inWidth+tt)*s.inChannels+S:A=K*m+Q)}}i.set(A,v,C,D,S)}}return i}function MR(n,t,e,s,a,r){const i=a.strideDepth,l=a.strideHeight,u=a.strideWidth,h=a.dilationDepth,f=a.dilationHeight,p=a.dilationWidth,m=a.effectiveFilterDepth,y=a.effectiveFilterHeight,b=a.effectiveFilterWidth,w=a.padInfo.front,v=a.padInfo.top,S=a.padInfo.left,C=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,$=Ht(a.outShape,e),T=$.values,I=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],D=a.outShape[2]*a.outShape[3]*a.outShape[4],z=a.outShape[3]*a.outShape[4],B=a.outShape[4];for(let R=0;R<a.batchSize;++R){const _=R*I,A=R*s[0];for(let W=0;W<a.inChannels;++W)for(let K=0;K<a.outDepth;++K){const tt=K*i-w;let Q=tt;for(;Q<0;)Q+=h;const P=Math.min(a.inDepth,m+tt),et=_+K*D;for(let Y=0;Y<a.outHeight;++Y){const at=Y*l-v;let M=at;for(;M<0;)M+=f;const j=Math.min(a.inHeight,y+at),lt=et+Y*z;for(let ot=0;ot<a.outWidth;++ot){const ut=ot*u-S;let mt=ut;for(;mt<0;)mt+=p;const bt=Math.min(a.inWidth,b+ut),Ct=lt+ot*B;let wt=C,Tt=0,It=0;for(let te=Q;te<P;te+=h){const ee=A+te*s[1];for(let ye=M;ye<j;ye+=f){const ce=ee+ye*s[2];for(let ne=mt;ne<bt;ne+=p){const be=ce+ne*s[3],fe=n[be+W];if(r==="max"&&fe>wt?wt=fe:r==="avg"&&(Tt+=fe,It++),isNaN(wt))break}if(isNaN(wt))break}if(isNaN(wt))break}const Mt=Ct+W;T[Mt]=r==="avg"?Tt/Math.max(It,1):wt}}}}return $}function g5(n,t){const e=Ht(t.outShape,"int32"),s=t.strideDepth,a=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterDepth,f=t.effectiveFilterHeight,p=t.effectiveFilterWidth,m=t.padInfo.front,y=t.padInfo.top,b=t.padInfo.left;for(let w=0;w<t.batchSize;++w)for(let v=0;v<t.inChannels;++v)for(let S=0;S<t.outDepth;++S){const C=S*s-m;let $=C;for(;$<0;)$+=i;const T=Math.min(t.inDepth,h+C);for(let I=0;I<t.outHeight;++I){const D=I*a-y;let z=D;for(;z<0;)z+=l;const B=Math.min(t.inHeight,f+D);for(let R=0;R<t.outWidth;++R){const _=R*r-b;let A=_;for(;A<0;)A+=u;const W=Math.min(t.inWidth,p+_);let K=Number.NEGATIVE_INFINITY,tt=-1;for(let Q=$;Q<T;Q+=i){const P=Q-C;for(let et=z;et<B;et+=l){const Y=et-D;for(let at=A;at<W;at+=u){const M=at-_,j=n.get(w,Q,et,at,v);j>=K&&(K=j,tt=P*f*p+Y*f+M)}}}e.set(tt,w,S,I,R,v)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;At(a,"avgPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;O($n(i,h),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const f=la(a.shape,r,i,h,l,u);let p;if(f.filterWidth===1&&f.filterHeight===1&&Jt(f.inShape,f.outShape))p=Xa({inputs:{x:a},backend:e});else{const m=e.data.get(a.dataId).values,y=Ft(a.shape),b=Mv(m,a.shape,a.dtype,y,f,"avg");p=e.makeTensorInfo(f.outShape,a.dtype,b.values)}return p}const b5={kernelName:bp,backendName:"cpu",kernelFunc:y5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u,dataFormat:h}=s;At(a,"avgPool3d");const f=Tr(a.shape,r,i,1,l,u,h),p=e.data.get(a.dataId).values,m=MR(p,a.shape,a.dtype,Ft(a.shape),f,"avg");return e.makeTensorInfo(m.shape,"float32",m.values)}const v5={kernelName:xp,backendName:"cpu",kernelFunc:x5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w5(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,{filterSize:i,strides:l,pad:u,dimRoundingMode:h}=s;At([a,r],"avgPool3DGrad");const f=Tr(r.shape,i,l,1,u,h),p=f.strideDepth,m=f.strideHeight,y=f.strideWidth,b=f.filterDepth,w=f.filterHeight,v=f.filterWidth,S=f.dilationDepth,C=f.dilationHeight,$=f.dilationWidth,T=f.effectiveFilterDepth,I=f.effectiveFilterHeight,D=f.effectiveFilterWidth,z=T-1-f.padInfo.front,B=D-1-f.padInfo.left,R=I-1-f.padInfo.top,_=Ht(r.shape,"float32"),A=1/(b*w*v),W=e.bufferSync(a);for(let K=0;K<f.batchSize;++K)for(let tt=0;tt<f.inChannels;++tt)for(let Q=0;Q<f.inDepth;++Q)for(let P=0;P<f.inHeight;++P)for(let et=0;et<f.inWidth;++et){const Y=Q-z,at=P-R,M=et-B;let j=0;for(let lt=0;lt<T;lt+=S){const ot=(Y+lt)/p;if(!(ot<0||ot>=f.outDepth||Math.floor(ot)!==ot))for(let ut=0;ut<I;ut+=C){const mt=(at+ut)/m;if(!(mt<0||mt>=f.outHeight||Math.floor(mt)!==mt))for(let bt=0;bt<D;bt+=$){const Ct=(M+bt)/y;if(Ct<0||Ct>=f.outWidth||Math.floor(Ct)!==Ct)continue;const wt=W.get(K,ot,mt,Ct,tt);j+=wt}}}_.set(j*A,K,Q,P,et,tt)}return e.makeTensorInfo(_.shape,_.dtype,_.values)}const S5={kernelName:X0,backendName:"cpu",kernelFunc:w5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N5(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r;At([a,r],"avgPoolGrad");const{filterSize:l,strides:u,pad:h}=s,f=la(i.shape,l,u,1,h),p=f.strideHeight,m=f.strideWidth,y=f.filterHeight,b=f.filterWidth,w=f.dilationHeight,v=f.dilationWidth,S=f.effectiveFilterHeight,C=f.effectiveFilterWidth,$=C-1-f.padInfo.left,T=S-1-f.padInfo.top,I=Ht(i.shape,"float32"),D=1/(y*b),z=e.data.get(a.dataId).values,B=Ht(a.shape,"float32",z);for(let R=0;R<f.batchSize;++R)for(let _=0;_<f.inChannels;++_)for(let A=0;A<f.inHeight;++A)for(let W=0;W<f.inWidth;++W){const K=A-T,tt=W-$;let Q=0;for(let P=0;P<S;P+=w){const et=(K+P)/p;if(!(et<0||et>=f.outHeight||Math.floor(et)!==et))for(let Y=0;Y<C;Y+=v){const at=(tt+Y)/m;if(at<0||at>=f.outWidth||Math.floor(at)!==at)continue;const M=B.get(R,et,at,_);Q+=M}}I.set(Q*D,R,A,W,_)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}const C5={kernelName:j0,backendName:"cpu",kernelFunc:N5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,scale:r,offset:i,mean:l,variance:u}=t;O(l.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),O(i==null||l.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),O(r==null||l.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),At([a,l,u,r,i],"batchNorm");let{varianceEpsilon:h}=s;h==null&&(h=.001);const f=e.data.get(a.dataId).values,p=e.data.get(l.dataId).values,m=e.data.get(u.dataId).values,y=r?e.data.get(r.dataId).values:new Float32Array([1]),b=i?e.data.get(i.dataId).values:new Float32Array([0]),w=new Float32Array(f.length),v=b.length,S=y.length,C=m.length,$=p.length;let T=0,I=0,D=0,z=0;for(let B=0;B<f.length;++B)w[B]=b[T++]+(f[B]-p[I++])*y[D++]/Math.sqrt(m[z++]+h),T>=v&&(T=0),I>=$&&(I=0),D>=S&&(D=0),z>=C&&(z=0);return e.makeTensorInfo(a.shape,a.dtype,w)}const $5={kernelName:Op,backendName:"cpu",kernelFunc:T5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,crops:i}=s;At([a],"batchToSpaceND");const l=r.reduce((S,C)=>S*C),u=Bh(a.shape,r,l),h=Vh(u.length,r.length),f=Ph(a.shape,r,l),p=j1(i,r.length),m=X1(f,i,r.length),y=Te({inputs:{x:a},backend:e,attrs:{shape:u}}),b=ss({inputs:{x:y},backend:e,attrs:{perm:h}}),w=Te({inputs:{x:b},backend:e,attrs:{shape:f}}),v=Co({inputs:{x:w},backend:e,attrs:{begin:p,size:m}});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(w),v}const I5={kernelName:wp,backendName:"cpu",kernelFunc:k5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i}=s,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,h=Ov(l,u,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,h)}const A5={kernelName:K0,backendName:"cpu",kernelFunc:E5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R5(n){const{inputs:t,backend:e}=n,{s0:s,s1:a}=t,r=e.data.get(s.dataId).values,i=e.data.get(a.dataId).values,l=Pt(Array.from(r),Array.from(i));return e.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const D5={kernelName:Y0,backendName:"cpu",kernelFunc:R5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O5=me(Hc,(n,t)=>{const e=t;return n>e.clipValueMax?e.clipValueMax:n<e.clipValueMin?e.clipValueMin:n}),_5={kernelName:Hc,backendName:"cpu",kernelFunc:O5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F5=n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(ht(t.shape)),a=e.data.get(t.dataId),r=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,l=e.data.get(r.dataId).values,u=e.data.get(i.dataId).values;for(let h=0;h<l.length;h++){const f=l[h],p=u[h];s[h]=Math.hypot(f,p)}return e.makeOutput(s,t.shape,"float32")},L5={kernelName:Np,backendName:"cpu",kernelFunc:F5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pl(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.data.get(s.dataId).complexTensorInfos.imag,r=e.data.get(a.dataId).values;return e.makeTensorInfo(a.shape,a.dtype,r)}const z5={kernelName:mx,backendName:"cpu",kernelFunc:Pl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ul(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s,r=jt(a,t[0].shape)[0],i=t.map(w=>w.shape);G1(i,r);let l=Wa(t.map(w=>w.shape),r);if(ht(l)===0)return e.makeTensorInfo(l,t[0].dtype,[]);const u=t.filter(w=>ht(w.shape)>0);if(u.length===1)return Xa({inputs:{x:u[0]},backend:e});if(u[0].dtype==="complex64"){const w=u.map(T=>No({inputs:{input:T},backend:e})),v=u.map(T=>Pl({inputs:{input:T},backend:e})),S=Ul({inputs:w,backend:e,attrs:{axis:r}}),C=Ul({inputs:v,backend:e,attrs:{axis:r}}),$=cs({inputs:{real:S,imag:C},backend:e});return w.forEach(T=>e.disposeIntermediateTensorInfo(T)),v.forEach(T=>e.disposeIntermediateTensorInfo(T)),e.disposeIntermediateTensorInfo(S),e.disposeIntermediateTensorInfo(C),$}const h=u.map(w=>{const S=[-1,ht(w.shape.slice(r))];return Te({inputs:{x:w},backend:e,attrs:{shape:S}})}),f=h.map(w=>({vals:e.data.get(w.dataId).values,shape:w.shape}));l=Wa(h.map(w=>w.shape),1);const p=h[0].shape[0]===1,m=WA(f,l,t[0].dtype,p),y=Wa(u.map(w=>w.shape),r),b=e.makeTensorInfo(y,t[0].dtype,m);return h.forEach(w=>e.disposeIntermediateTensorInfo(w)),b}const M5={kernelName:Cp,backendName:"cpu",kernelFunc:Ul};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BR(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dataFormat:u,dilations:h,dimRoundingMode:f}=s;At([a,r],"conv2d");const p=$r(u),m=gn(a.shape,r.shape,i,h,l,f,!1,p),y=m.filterHeight,b=m.filterWidth,w=m.dilationHeight,v=m.dilationWidth,S=m.padInfo.left,C=m.padInfo.top,$=m.dataFormat==="channelsLast",T=new rn(m.outShape,a.dtype),I=Ft(a.shape),D=Ft(r.shape),z=I[0],B=$?I[1]:I[2],R=$?I[2]:1,_=$?1:I[1],A=T.strides[0],W=$?T.strides[1]:T.strides[2],K=$?T.strides[2]:1,tt=$?1:T.strides[1],Q=e.data.get(a.dataId).values,P=e.data.get(r.dataId).values,et=T.values;for(let Y=0;Y<m.batchSize;++Y){const at=Y*z,M=Y*A;for(let j=0;j<m.outHeight;++j){const lt=M+j*W,ot=j*m.strideHeight-C;for(let ut=0;ut<y;++ut){const mt=ot+ut*w;if(mt<0||mt>=m.inHeight)continue;const bt=ut*D[0],Ct=at+mt*B;for(let wt=0;wt<m.outWidth;++wt){const Tt=lt+wt*K,It=wt*m.strideWidth-S;for(let Mt=0;Mt<b;++Mt){const te=It+Mt*v;if(te<0||te>=m.inWidth)continue;const ee=bt+Mt*D[1],ye=Ct+te*R;let ce=ee;for(let ne=0;ne<m.inChannels;++ne){const be=Q[ye+ne*_];for(let fe=0;fe<m.outChannels;++fe)et[Tt+fe*tt]+=be*P[ce+fe];ce+=m.outChannels}}}}}}return e.makeTensorInfo(T.shape,T.dtype,et)}const B5={kernelName:Tp,backendName:"cpu",kernelFunc:BR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,dataFormat:u,dimRoundingMode:h,filterShape:f}=s;At([a,r],"conv2dBackpropFilter");const p=$r(u),m=gn(a.shape,f,i,1,l,h,!1,p),{strideHeight:y,strideWidth:b,filterHeight:w,filterWidth:v}=m,S=m.dataFormat==="channelsLast",C=new rn(m.filterShape,"float32"),$=m.padInfo.left,T=m.padInfo.top,I=e.data.get(a.dataId).values,D=e.data.get(r.dataId).values,z=new rn(a.shape,a.dtype,I),B=new rn(r.shape,r.dtype,D);for(let R=0;R<w;++R){const _=Math.max(0,Math.ceil((T-R)/y)),A=Math.min(m.outHeight,(m.inHeight+T-R)/y);for(let W=0;W<v;++W){const K=Math.max(0,Math.ceil(($-W)/b)),tt=Math.min(m.outWidth,(m.inWidth+$-W)/b);for(let Q=0;Q<m.inChannels;++Q)for(let P=0;P<m.outChannels;++P){let et=0;for(let Y=0;Y<m.batchSize;++Y)for(let at=_;at<A;++at){const M=R+at*y-T;for(let j=K;j<tt;++j){const lt=W+j*b-$;S?et+=z.get(Y,M,lt,Q)*B.get(Y,at,j,P):et+=z.get(Y,Q,M,lt)*B.get(Y,P,at,j)}}C.set(et,R,W,Q,P)}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const P5={kernelName:Q0,backendName:"cpu",kernelFunc:V5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U5(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{inputShape:i,strides:l,pad:u,dataFormat:h,dimRoundingMode:f}=s;At([a,r],"conv2dBackpropInput");const p=Ft(r.shape),m=Ft(a.shape);let y=$r(h);const b=gn(i,r.shape,l,1,u,f,!1,y),w=new rn(b.inShape,"float32"),v=w.values,S=e.data.get(a.dataId).values,C=e.data.get(r.dataId).values,[$,T,I]=p,{batchSize:D,filterHeight:z,filterWidth:B,inChannels:R,inHeight:_,inWidth:A,outChannels:W,outHeight:K,outWidth:tt,strideHeight:Q,strideWidth:P}=b;y=b.dataFormat;const et=z-1-b.padInfo.top,Y=B-1-b.padInfo.left,at=y==="channelsLast",M=w.strides[0],j=at?w.strides[1]:w.strides[2],lt=at?w.strides[2]:1,ot=at?1:w.strides[1],ut=m[0],mt=at?m[1]:m[2],bt=at?m[2]:1,Ct=at?1:m[1];for(let wt=0;wt<D;++wt)for(let Tt=0;Tt<R;++Tt)for(let It=0;It<_;++It){const Mt=It-et,te=Math.max(0,Math.ceil(Mt/Q)),ee=Math.min(K,(z+Mt)/Q);for(let ye=0;ye<A;++ye){const ce=ye-Y,ne=Math.max(0,Math.ceil(ce/P)),be=Math.min(tt,(B+ce)/P);let fe=0;for(let Be=te;Be<ee;++Be){const _s=Be*Q-Mt;for(let Xn=ne;Xn<be;++Xn){const Za=Xn*P-ce,Ve=ut*wt+mt*Be+bt*Xn,ha=$*(z-1-_s)+T*(B-1-Za)+I*Tt;for(let da=0;da<W;++da){const fa=S[Ve+Ct*da],ws=C[ha+da];fe+=fa*ws}}}const vs=M*wt+j*It+lt*ye+ot*Tt;v[vs]=fe}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}const W5={kernelName:$p,backendName:"cpu",kernelFunc:U5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u}=s;At([a,r],"conv3d");const h=wi(a.shape,r.shape,i,u,l),{filterDepth:f,filterHeight:p,filterWidth:m,dilationDepth:y,dilationHeight:b,dilationWidth:w,padInfo:v}=h,S=v.front,C=v.left,$=v.top,T=new rn(h.outShape,a.dtype),I=e.data.get(a.dataId).values,D=e.data.get(r.dataId).values,z=T.values,B=Ft(a.shape),R=Ft(r.shape);for(let _=0;_<h.batchSize;++_){const A=_*B[0],W=_*T.strides[0];for(let K=0;K<h.outDepth;++K){const tt=W+K*T.strides[1],Q=K*h.strideDepth-S;for(let P=0;P<f;++P){const et=Q+P*y;if(et<0||et>=h.inDepth)continue;const Y=P*R[0],at=A+et*B[1];for(let M=0;M<h.outHeight;++M){const j=tt+M*T.strides[2],lt=M*h.strideHeight-$;for(let ot=0;ot<p;++ot){const ut=lt+ot*b;if(ut<0||ut>=h.inHeight)continue;const mt=Y+ot*R[1],bt=at+ut*B[2];for(let Ct=0;Ct<h.outWidth;++Ct){const wt=j+Ct*h.outChannels,Tt=Ct*h.strideWidth-C;for(let It=0;It<m;++It){const Mt=Tt+It*w;if(Mt<0||Mt>=h.inWidth)continue;const te=mt+It*R[2],ee=bt+Mt*h.inChannels;let ye=te;for(let ce=0;ce<h.inChannels;++ce){const ne=I[ee+ce];for(let be=0;be<h.outChannels;++be)z[wt+be]+=ne*D[ye+be];ye+=h.outChannels}}}}}}}}return e.makeTensorInfo(T.shape,T.dtype,T.values)}const H5={kernelName:kp,backendName:"cpu",kernelFunc:G5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,filterShape:u}=s;At([a,r],"conv3dBackpropFilterV2");const h=Ft(a.shape),f=Ft(r.shape),p=wi(a.shape,u,i,1,l),m=p.strideDepth,y=p.strideHeight,b=p.strideWidth,w=p.filterDepth,v=p.filterHeight,S=p.filterWidth,C=new rn(p.filterShape,"float32"),$=C.values,[T,I,D,z]=C.strides,B=e.data.get(r.dataId).values,[R,_,A,W]=f,K=e.data.get(a.dataId).values,[tt,Q,P,et]=h,Y=p.padInfo.front,at=p.padInfo.left,M=p.padInfo.top;for(let j=0;j<w;++j){const lt=Math.max(0,Math.ceil((Y-j)/m)),ot=Math.min(p.outDepth,(p.inDepth+Y-j)/m),ut=j*T;for(let mt=0;mt<v;++mt){const bt=Math.max(0,Math.ceil((M-mt)/y)),Ct=Math.min(p.outHeight,(p.inHeight+M-mt)/y),wt=mt*I+ut;for(let Tt=0;Tt<S;++Tt){const It=Math.max(0,Math.ceil((at-Tt)/b)),Mt=Math.min(p.outWidth,(p.inWidth+at-Tt)/b),te=Tt*D+wt;for(let ee=0;ee<p.inChannels;++ee){const ye=ee*z+te;for(let ce=0;ce<p.outChannels;++ce){let ne=0;for(let be=0;be<p.batchSize;++be){const fe=be*tt,vs=be*R;for(let Be=lt;Be<ot;++Be){const Xn=(j+Be*m-Y)*Q+fe,Za=Be*_+vs;for(let Ve=bt;Ve<Ct;++Ve){const da=(mt+Ve*y-M)*P+Xn,fa=Ve*A+Za;for(let ws=It;ws<Mt;++ws){const zo=(Tt+ws*b-at)*et+da,uu=ws*W+fa;ne+=K[zo+ee]*B[uu+ce]}}}}$[ye+ce]=ne}}}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const j5={kernelName:J0,backendName:"cpu",kernelFunc:q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X5(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{pad:i,strides:l,inputShape:u}=s;At([a],"conv3dBackpropInputV2");const h=Ft(a.shape),f=Ft(r.shape),p=wi(u,r.shape,l,1,i),m=new rn(p.inShape,"float32"),y=m.values,[b,w,v,S]=m.strides,C=e.data.get(a.dataId).values,[$,T,I,D]=h,z=e.data.get(r.dataId).values,[B,R,_,A]=f,{batchSize:W,filterDepth:K,filterHeight:tt,filterWidth:Q,inChannels:P,inDepth:et,inHeight:Y,inWidth:at,outChannels:M,outDepth:j,outHeight:lt,outWidth:ot,strideDepth:ut,strideHeight:mt,strideWidth:bt}=p,Ct=K-1-p.padInfo.front,wt=tt-1-p.padInfo.top,Tt=Q-1-p.padInfo.left;for(let It=0;It<W;++It)for(let Mt=0;Mt<P;++Mt)for(let te=0;te<et;++te){const ee=te-Ct,ye=Math.max(0,Math.ceil(ee/ut)),ce=Math.min(j,(K+ee)/ut);for(let ne=0;ne<Y;++ne){const be=ne-wt,fe=Math.max(0,Math.ceil(be/mt)),vs=Math.min(lt,(tt+be)/mt);for(let Be=0;Be<at;++Be){const _s=Be-Tt,Xn=Math.max(0,Math.ceil(_s/bt)),Za=Math.min(ot,(Q+_s)/bt);let Ve=0;for(let ha=ye;ha<ce;++ha){const da=ha*ut-ee;for(let fa=fe;fa<vs;++fa){const ws=fa*mt-be;for(let Ei=Xn;Ei<Za;++Ei){const zo=Ei*bt-_s,uu=$*It+T*ha+I*fa+D*Ei,og=B*(K-1-da)+R*(tt-1-ws)+_*(Q-1-zo)+A*Mt;for(let Ra=0;Ra<M;++Ra){const Kn=C[uu+Ra],lg=z[og+Ra];Ve+=Kn*lg}}}}y[b*It+w*te+v*ne+S*Be+Mt]=Ve}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const K5={kernelName:tx,backendName:"cpu",kernelFunc:X5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y5=me(qc,n=>Math.cos(n)),Z5={kernelName:qc,backendName:"cpu",kernelFunc:Y5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q5=me(jc,n=>Math.cosh(n)),J5={kernelName:jc,backendName:"cpu",kernelFunc:Q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t8(n){const{inputs:t,backend:e,attrs:s}=n,{image:a,boxes:r,boxInd:i}=t,{cropSize:l,method:u,extrapolationValue:h}=s,[f,p,m,y]=a.shape,b=r.shape[0],[w,v]=l,S=Ht([b,w,v,y],"float32"),C=e.data.get(r.dataId).values,$=e.data.get(i.dataId).values,T=e.data.get(a.dataId).values,I=Ft(a.shape),D=Ft(S.shape);for(let z=0;z<b;z++){const B=z*4,R=C[B],_=C[B+1],A=C[B+2],W=C[B+3],K=$[z];if(K>=f)continue;const tt=w>1?(A-R)*(p-1)/(w-1):0,Q=v>1?(W-_)*(m-1)/(v-1):0;for(let P=0;P<w;P++){const et=w>1?R*(p-1)+P*tt:.5*(R+A)*(p-1);if(et<0||et>p-1){for(let Y=0;Y<v;Y++)for(let at=0;at<y;at++){const M=at+Y*D[2]+P*D[1]+z*D[0];S.values[M]=h}continue}if(u==="bilinear"){const Y=Math.floor(et),at=Math.ceil(et),M=et-Y;for(let j=0;j<v;j++){const lt=v>1?_*(m-1)+j*Q:.5*(_+W)*(m-1);if(lt<0||lt>m-1){for(let bt=0;bt<y;bt++){const Ct=bt+j*D[2]+P*D[1]+z*D[0];S.values[Ct]=h}continue}const ot=Math.floor(lt),ut=Math.ceil(lt),mt=lt-ot;for(let bt=0;bt<y;bt++){let Ct=bt+ot*I[2]+Y*I[1]+K*I[0];const wt=T[Ct];Ct=bt+ut*I[2]+Y*I[1]+K*I[0];const Tt=T[Ct];Ct=bt+ot*I[2]+at*I[1]+K*I[0];const It=T[Ct];Ct=bt+ut*I[2]+at*I[1]+K*I[0];const Mt=T[Ct],te=wt+(Tt-wt)*mt,ee=It+(Mt-It)*mt;Ct=bt+j*D[2]+P*D[1]+z*D[0],S.values[Ct]=te+(ee-te)*M}}}else for(let Y=0;Y<v;++Y){const at=v>1?_*(m-1)+Y*Q:.5*(_+W)*(m-1);if(at<0||at>m-1){for(let lt=0;lt<y;lt++){const ot=lt+Y*D[2]+P*D[1]+z*D[0];S.values[ot]=h}continue}const M=Math.round(at),j=Math.round(et);for(let lt=0;lt<y;lt++){const ot=lt+M*I[2]+j*I[1]+K*I[0],ut=lt+Y*D[2]+P*D[1]+z*D[0];S.values[ut]=T[ot]}}}}return e.makeTensorInfo(S.shape,S.dtype,S.values)}const e8={kernelName:nx,backendName:"cpu",kernelFunc:t8};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;At(a,"cumprod");const u=_e([r],a.shape.length);let h=a;u!=null&&(h=ss({inputs:{x:a},backend:e,attrs:{perm:u}}));const f=je(1,a.shape.length)[0];if(f!==h.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${h.shape.length-1} but got axis=${f}`);const p=ds(h.dtype,"int32"),m=W0(ht(h.shape),p),y=e.data.get(h.dataId).values,b=h.shape[h.shape.length-1],w=l?(S,C)=>S+b-C-1:(S,C)=>S+C;for(let S=0;S<y.length;S+=b)for(let C=0;C<b;C++){const $=w(S,C);if(C===0)m[$]=i?1:y[$];else{const T=w(S,C-1);m[$]=i?y[T]*m[T]:y[$]*m[T]}}const v=e.makeTensorInfo(h.shape,p,m);if(u!=null){const S=Si(u),C=ss({inputs:{x:v},backend:e,attrs:{perm:S}});return e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(h),C}return v}const s8={kernelName:ex,backendName:"cpu",kernelFunc:n8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;At(a,"cumsum");const u=_e([r],a.shape.length);let h=a;u!=null&&(h=ss({inputs:{x:a},backend:e,attrs:{perm:u}}));const f=je(1,a.shape.length)[0];if(f!==h.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${h.shape.length-1} but got axis=${f}`);const p=ds(h.dtype,"int32"),m=_n(ht(h.shape),p),y=e.data.get(h.dataId).values,b=h.shape[h.shape.length-1],w=l?(S,C)=>S+b-C-1:(S,C)=>S+C;for(let S=0;S<y.length;S+=b)for(let C=0;C<b;C++){const $=w(S,C);if(C===0)m[$]=i?0:y[$];else{const T=w(S,C-1);m[$]=i?y[T]+m[T]:y[$]+m[T]}}const v=e.makeTensorInfo(h.shape,p,m);if(u!=null){const S=Si(u),C=ss({inputs:{x:v},backend:e,attrs:{perm:S}});return e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(h),C}return v}const r8={kernelName:Ip,backendName:"cpu",kernelFunc:a8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i,binaryOutput:l}=s;if(a.shape.length===1){const u=e.data.get(a.dataId).values,h=e.data.get(r.dataId).values,f=Ov(u,h,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,f)}else if(a.shape.length===2){const u=e.bufferSync(a),h=e.bufferSync(r),f=VA(u,h,i,l);return e.makeTensorInfo(f.shape,r.dtype,f.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const o8={kernelName:sx,backendName:"cpu",kernelFunc:i8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockSize:r,dataFormat:i}=s;O(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const l=a.shape[0],u=a.shape[1],h=a.shape[2],f=a.shape[3],p=u*r,m=h*r,y=f/(r*r),b=e.data.get(a.dataId).values,w=new Float32Array(l*p*m*y);let v=0;for(let S=0;S<l;++S)for(let C=0;C<p;++C){const $=Math.floor(C/r),T=C%r;for(let I=0;I<m;++I){const D=Math.floor(I/r),z=I%r,B=(T*r+z)*y;for(let R=0;R<y;++R){const A=R+B+f*(D+h*($+u*S));w[v++]=b[A]}}}return e.makeTensorInfo([l,p,m,y],a.dtype,w)}const u8={kernelName:ax,backendName:"cpu",kernelFunc:l8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VR(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u,dimRoundingMode:h}=s;At([a,r],"depthwiseConv2DNative");const f=Ft(a.shape),p=Ft(r.shape);let m=u;m==null&&(m=[1,1]),O($n(i,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${m}'`);const y=gn(a.shape,r.shape,i,m,l,h,!0),{filterHeight:b,filterWidth:w,dilationHeight:v,dilationWidth:S,padInfo:C}=y,$=C.left,T=C.top,I=y.outChannels/y.inChannels,D=new rn(y.outShape,a.dtype),z=e.data.get(a.dataId).values,B=e.data.get(r.dataId).values,R=D.values;for(let _=0;_<y.batchSize;++_){const A=_*f[0],W=_*D.strides[0];for(let K=0;K<y.outHeight;++K){const tt=W+K*D.strides[1],Q=K*y.strideHeight-T;for(let P=0;P<b;++P){const et=Q+P*v;if(et<0||et>=y.inHeight)continue;const Y=P*p[0],at=A+et*f[1];for(let M=0;M<y.outWidth;++M){const j=tt+M*D.strides[2],lt=M*y.strideWidth-$;for(let ot=0;ot<w;++ot){const ut=lt+ot*S;if(ut<0||ut>=y.inWidth)continue;const mt=Y+ot*p[1],bt=at+ut*y.inChannels;let Ct=j,wt=mt;for(let Tt=0;Tt<y.inChannels;++Tt){const It=z[bt+Tt];for(let Mt=0;Mt<I;++Mt)R[Ct+Mt]+=It*B[wt+Mt];Ct+=I,wt+=I}}}}}}return e.makeTensorInfo(D.shape,D.dtype,D.values)}const c8={kernelName:Ep,backendName:"cpu",kernelFunc:VR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,filterShape:f}=s;At([a,r],"depthwiseConv2dNativeBackpropFilter");const p=gn(a.shape,f,i,l,u,h,!0),{strideHeight:m,strideWidth:y,filterHeight:b,filterWidth:w}=p,v=new rn(p.filterShape,"float32"),S=p.padInfo.left,C=p.padInfo.top,$=p.outChannels/p.inChannels,T=e.data.get(a.dataId).values,I=new rn(a.shape,a.dtype,T),D=e.data.get(r.dataId).values,z=new rn(r.shape,r.dtype,D);for(let B=0;B<b;++B){const R=Math.max(0,Math.ceil((C-B)/m)),_=Math.min(p.outHeight,(p.inHeight+C-B)/m);for(let A=0;A<w;++A){const W=Math.max(0,Math.ceil((S-A)/y)),K=Math.min(p.outWidth,(p.inWidth+S-A)/y);for(let tt=0;tt<p.outChannels;++tt){const Q=Math.trunc(tt/$),P=tt%$;let et=0;for(let Y=0;Y<p.batchSize;++Y)for(let at=R;at<_;++at){const M=B+at*m-C;for(let j=W;j<K;++j){const lt=A+j*y-S;et+=I.get(Y,M,lt,Q)*z.get(Y,at,j,tt)}}v.set(et,B,A,Q,P)}}}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const d8={kernelName:rx,backendName:"cpu",kernelFunc:h8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f8(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,inputShape:f}=s;At([a,r],"depthwiseConv2DNativeBackpropInput");const p=Ft(a.shape),m=Ft(r.shape),y=gn(f,r.shape,i,l,u,h,!0),b=new rn(y.inShape,"float32"),w=b.values,[v,S,C]=b.strides,$=e.data.get(a.dataId).values,[T,I,D]=p,z=e.data.get(r.dataId).values,[B,R,_]=m,{batchSize:A,filterHeight:W,filterWidth:K,inChannels:tt,inHeight:Q,inWidth:P,outChannels:et,outHeight:Y,outWidth:at,strideHeight:M,strideWidth:j}=y,lt=W-1-y.padInfo.top,ot=K-1-y.padInfo.left,ut=et/tt;for(let mt=0;mt<A;++mt)for(let bt=0;bt<tt;++bt)for(let Ct=0;Ct<Q;++Ct){const wt=Ct-lt,Tt=Math.max(0,Math.ceil(wt/M)),It=Math.min(Y,(W+wt)/M);for(let Mt=0;Mt<P;++Mt){const te=Mt-ot,ee=Math.max(0,Math.ceil(te/j)),ye=Math.min(at,(K+te)/j);let ce=0;for(let ne=Tt;ne<It;++ne){const be=ne*M-wt;for(let fe=ee;fe<ye;++fe){const vs=fe*j-te,Be=T*mt+I*ne+D*fe,_s=B*(W-1-be)+R*(K-1-vs)+_*bt;for(let Xn=0;Xn<ut;++Xn){const Za=bt*ut+Xn,Ve=$[Be+Za],ha=z[_s+Xn];ce+=Ve*ha}}}w[v*mt+S*Ct+C*Mt+bt]=ce}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const p8={kernelName:ix,backendName:"cpu",kernelFunc:f8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m8(n){const{inputs:t,backend:e}=n,{x:s}=t,a=ht(s.shape),r=e.data.get(s.dataId).values,i=Ht([a,a],s.dtype),l=i.values;for(let h=0;h<r.length;h++)l[h*a+h]=r[h];const u=[...s.shape,...s.shape];return e.makeTensorInfo(u,i.dtype,i.values)}const g8={kernelName:ox,backendName:"cpu",kernelFunc:m8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y8={kernelName:Ap,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:a}=n,{strides:r,pad:i,dilations:l}=e,u=t,h=u.data.get(s.dataId).values,f=s.shape.length,p=u.data.get(a.dataId).values,m=a.shape.length,{batchSize:y,inHeight:b,inWidth:w,inChannels:v,outHeight:S,outWidth:C,padInfo:$,strideHeight:T,strideWidth:I,filterHeight:D,filterWidth:z,dilationHeight:B,dilationWidth:R,outShape:_}=Dh(s.shape,a.shape,r,i,"NHWC",l),A=ht(_),W=_.length,K=Ge(s.dtype,A);for(let Q=0;Q<y;++Q)for(let P=0;P<S;++P){const et=P*T-$.top;for(let Y=0;Y<C;++Y){const at=Y*I-$.left;for(let M=0;M<v;++M){let j=Number.MIN_SAFE_INTEGER;for(let ot=0;ot<D;++ot){const ut=et+ot*B;if(ut>=0&&ut<b)for(let mt=0;mt<z;++mt){const bt=at+mt*R;if(bt>=0&&bt<w){const Ct=Pa([Q,ut,bt,M],f,Ft(s.shape)),wt=Pa([ot,mt,M],m,Ft(a.shape)),Tt=h[Ct]+p[wt];Tt>j&&(j=Tt)}}}const lt=Pa([Q,P,Y,M],W,Ft(_));K[lt]=j}}}return{dataId:u.write($o(K,s.dtype),_,s.dtype),shape:_,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b8={kernelName:qb,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:a,dy:r}=n,{strides:i,pad:l,dilations:u}=e,h=t,f=sa(s.shape,h.data.get(s.dataId).values),p=sa(a.shape,h.data.get(a.dataId).values),{batchSize:m,inHeight:y,inWidth:b,inChannels:w,outHeight:v,outWidth:S,padInfo:C,strideHeight:$,strideWidth:T,filterHeight:I,filterWidth:D,dilationHeight:z,dilationWidth:B,outShape:R}=Dh(s.shape,a.shape,i,l,"NHWC",u);O(r.rank===R.length,()=>`Error in ${qb}, dy must have the same rank as output ${R.length}, but got ${r.rank}`);const _=sa(R,h.data.get(r.dataId).values),A=z2(a.shape,a.dtype);for(let K=0;K<m;++K)for(let tt=0;tt<v;++tt){const Q=tt*$-C.top;for(let P=0;P<S;++P){const et=P*T-C.left;for(let Y=0;Y<w;++Y){let at=Number.MIN_SAFE_INTEGER,M=0,j=0;for(let lt=0;lt<I;++lt){const ot=Q+lt*z;if(ot>=0&&ot<y)for(let ut=0;ut<D;++ut){const mt=et+ut*B;if(mt>=0&&mt<b){const bt=f[K][ot][mt][Y]+p[lt][ut][Y];bt>at&&(at=bt,M=lt,j=ut)}}}A[M][j][Y]+=_[K][tt][P][Y]}}}return{dataId:h.write($o(A,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x8={kernelName:Hb,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:a,dy:r}=n,{strides:i,pad:l,dilations:u}=e,h=t,f=sa(s.shape,h.data.get(s.dataId).values),p=sa(a.shape,h.data.get(a.dataId).values),{batchSize:m,inHeight:y,inWidth:b,inChannels:w,outHeight:v,outWidth:S,padInfo:C,strideHeight:$,strideWidth:T,filterHeight:I,filterWidth:D,dilationHeight:z,dilationWidth:B,outShape:R}=Dh(s.shape,a.shape,i,l,"NHWC",u);O(r.rank===R.length,()=>`Error in ${Hb}, dy must have the same rank as output ${R.length}, but got ${r.rank}`);const _=sa(R,h.data.get(r.dataId).values),A=z2(s.shape,s.dtype);for(let K=0;K<m;++K)for(let tt=0;tt<v;++tt){const Q=tt*$-C.top;for(let P=0;P<S;++P){const et=P*T-C.left;for(let Y=0;Y<w;++Y){let at=Number.MIN_SAFE_INTEGER,M=Q<0?0:Q,j=et<0?0:et;for(let lt=0;lt<I;++lt){const ot=Q+lt*z;if(ot>=0&&ot<y)for(let ut=0;ut<D;++ut){const mt=et+ut*B;if(mt>=0&&mt<b){const bt=f[K][ot][mt][Y]+p[lt][ut][Y];bt>at&&(at=bt,M=ot,j=mt)}}}A[K][M][j][Y]+=_[K][tt][P][Y]}}}return{dataId:h.write($o(A,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v8(n){const{inputs:t,backend:e,attrs:s}=n,{image:a}=t,{canvas:r,options:i}=s,{contextOptions:l,imageOptions:u}=i||{},h=(u==null?void 0:u.alpha)||1,f=(l==null?void 0:l.contextType)||"2d";if(f!=="2d")throw new Error(`Context type ${l.contextType} is not supported by the CPU backend.`);const p=r.getContext(f,(l==null?void 0:l.contextAttributes)||{});if(p==null)throw new Error(`Could not get the context with ${f} type.`);const[m,y]=a.shape.slice(0,2),b=a.shape.length===2?1:a.shape[2],w=e.data.get(a.dataId).values,v=a.dtype==="float32"?255:1,S=new Uint8ClampedArray(y*m*4);for(let $=0;$<m*y;++$){const T=[0,0,0,255*h];for(let D=0;D<b;D++){const z=w[$*b+D];if(a.dtype==="float32"){if(z<0||z>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${z}.`)}else if(a.dtype==="int32"&&(z<0||z>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${z}.`);b===1?(T[0]=z*v,T[1]=z*v,T[2]=z*v):T[D]=z*v}const I=$*4;S[I+0]=Math.round(T[0]),S[I+1]=Math.round(T[1]),S[I+2]=Math.round(T[2]),S[I+3]=Math.round(T[3])}r.width=y,r.height=m;const C=new ImageData(S,y,m);return p.putImageData(C,0,0),a}const w8={kernelName:OF,backendName:"cpu",kernelFunc:v8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yh(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;At(a,"sum");let l;a.dtype==="bool"?l=gi({inputs:{x:a},backend:e,attrs:{dtype:"int32"}}):l=Xa({inputs:{x:a},backend:e});const u=l.shape.length,h=jt(r,l.shape),f=_e(h,u);let p=h,m=l;f!=null&&(m=ss({inputs:{x:l},backend:e,attrs:{perm:f}}),p=je(p.length,u)),kn("sum",p,m.shape.length);const[y,b]=yn(m.shape,p),w=ds(m.dtype,"int32");let v=rp(e,y,w);const S=ht(b),C=e.data.get(v.dataId).values,$=e.data.get(m.dataId).values;for(let T=0;T<C.length;++T){const I=T*S;let D=0;for(let z=0;z<S;++z)D+=$[I+z];C[T]=D}if(i){const T=qe(v.shape,h),I=v;v=Te({inputs:{x:v},backend:e,attrs:{shape:T}}),e.disposeIntermediateTensorInfo(I)}return e.disposeIntermediateTensorInfo(l),f!=null&&e.disposeIntermediateTensorInfo(m),v}const S8={kernelName:um,backendName:"cpu",kernelFunc:Yh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N8(n){const{inputs:t,backend:e,attrs:s}=n,{equation:a}=s,r=t,{allDims:i,summedDims:l,idDims:u}=nv(a,r.length);av(i.length,u,r);const{path:h,steps:f}=rv(l,u),p=f.length;let m=null,y=i.length;const b=[];for(let w=0;w<p;++w){for(const v of f[w]){const{permutationIndices:S,expandDims:C}=sv(y,u[v]);let $;iv(S)?$=r[v]:($=ss({inputs:{x:r[v]},backend:e,attrs:{perm:S}}),b.push($));const T=$.shape.slice();for(let I=0;I<C.length;++I)T.splice(C[I],0,1);Jt($.shape,T)||($=Te({inputs:{x:$},backend:e,attrs:{shape:T}}),b.push($)),m===null?m=$:(m=eg({inputs:{a:$,b:m},backend:e}),b.push(m))}w<p-1&&(h[w]>=0&&(m=Yh({inputs:{x:m},backend:e,attrs:{axis:h[w]-(i.length-y),keepDims:!1}}),b.push(m)),y--)}for(const w of b)w!==m&&e.disposeIntermediateTensorInfo(w);return m}const C8={kernelName:lx,backendName:"cpu",kernelFunc:N8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T8(n){const{inputs:t,backend:e}=n,{dy:s,y:a}=t;At([s,a],"eluGrad");const r=new Float32Array(ht(a.shape)),i=e.data.get(a.dataId).values,l=e.data.get(s.dataId).values;for(let u=0;u<i.length;++u){const h=i[u];h>=0?r[u]=l[u]:r[u]=l[u]*(h+1)}return e.makeTensorInfo(a.shape,"float32",r)}const $8={kernelName:ux,backendName:"cpu",kernelFunc:T8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k8=K1,I8=Y1,E8=Z1,A8=Q1,R8=J1,D8=tv,O8=me(Yc,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+k8*e);return t*(1-((((D8*s+R8)*s+A8)*s+E8)*s+I8)*s*Math.exp(-e*e))}),_8={kernelName:Yc,backendName:"cpu",kernelFunc:O8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lp(n){const{inputs:t,backend:e,attrs:s}=n,{input:a}=t,{dim:r}=s,i=a.shape.length,l=a.shape.slice();let u=r;return r<0&&(O(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+r+1),l.splice(u,0,1),Te({inputs:{x:a},backend:e,attrs:{shape:l}})}const F8={kernelName:Dp,backendName:"cpu",kernelFunc:lp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L8=Ke((n,t)=>n/t),Bv=cn(Xc,L8),O0={kernelName:Xc,backendName:"cpu",kernelFunc:Bv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PR(n,t,e){const s=n.shape,a=s[0],r=s[1],i=e.data.get(n.dataId),l=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,h=[a,r],f=ht(h),p=Cn("float32",f),m=Cn("float32",f);for(let v=0;v<a;v++){const S=Co({inputs:{x:l},backend:e,attrs:{begin:[v,0],size:[1,r]}}),C=Co({inputs:{x:u},backend:e,attrs:{begin:[v,0],size:[1,r]}}),$=cs({inputs:{real:S,imag:C},backend:e}),{real:T,imag:I}=z8($,t,e),D=Nr(T,I);for(let z=0;z<r;z++){const B=ev(D,z);p[v*r+z]=B.real,m[v*r+z]=B.imag}e.disposeIntermediateTensorInfo(S),e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo($)}const y=e.makeTensorInfo(h,"float32",p),b=e.makeTensorInfo(h,"float32",m),w=cs({inputs:{real:y,imag:b},backend:e});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),w}function z8(n,t,e){const s=ht(n.shape),a=e.data.get(n.dataId),r=e.data.get(a.complexTensorInfos.real.dataId).values,i=e.data.get(a.complexTensorInfos.imag.dataId).values;if(M8(s)){const l=_0(r,i,s,t,e),u=[n.shape[0],n.shape[1]];if(t){const h=e.makeTensorInfo(u,"float32",l.real),f=e.makeTensorInfo(u,"float32",l.imag),p=e.makeTensorInfo([],"float32",bi(s,"float32")),m=Xa({inputs:{x:p},backend:e}),y=O0.kernelFunc({inputs:{a:h,b:p},backend:e}),b=O0.kernelFunc({inputs:{a:f,b:m},backend:e}),w=e.data.get(y.dataId).values,v=e.data.get(b.dataId).values;return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),{real:w,imag:v}}return l}else{const l=Nr(r,i),u=B8(l,s,t);return Zk(u)}}function M8(n){return(n&n-1)===0}function _0(n,t,e,s,a){if(e===1)return{real:n,imag:t};const r=Nr(n,t),i=e/2,l=Qk(r),u=l.real,h=l.imag,f=[u.length],p=a.makeTensorInfo(f,"float32",u),m=a.makeTensorInfo(f,"float32",h),y=cs({inputs:{real:p,imag:m},backend:a}),b=Jk(r),w=b.real,v=b.imag,S=[w.length],C=a.makeTensorInfo(S,"float32",w),$=a.makeTensorInfo(S,"float32",v),T=cs({inputs:{real:C,imag:$},backend:a}),I=_0(u,h,i,s,a),D=I.real,z=I.imag,B=[D.length],R=a.makeTensorInfo(B,"float32",D),_=a.makeTensorInfo(B,"float32",z),A=cs({inputs:{real:R,imag:_},backend:a}),W=_0(w,v,i,s,a),K=W.real,tt=W.imag,Q=[K.length],P=a.makeTensorInfo(Q,"float32",K),et=a.makeTensorInfo(Q,"float32",tt),Y=cs({inputs:{real:P,imag:et},backend:a}),at=eI(e,s),M=[at.real.length],j=a.makeTensorInfo(M,"float32",at.real),lt=a.makeTensorInfo(M,"float32",at.imag),ot=cs({inputs:{real:j,imag:lt},backend:a}),ut=eg({inputs:{a:ot,b:Y},backend:a}),mt=Vl({inputs:{a:A,b:ut},backend:a}),bt=zv({inputs:{a:A,b:ut},backend:a}),Ct=No({inputs:{input:mt},backend:a}),wt=No({inputs:{input:bt},backend:a}),Tt=Pl({inputs:{input:mt},backend:a}),It=Pl({inputs:{input:bt},backend:a}),Mt=Ul({inputs:[Ct,wt],backend:a,attrs:{axis:0}}),te=Ul({inputs:[Tt,It],backend:a,attrs:{axis:0}}),ee=a.data.get(Mt.dataId).values,ye=a.data.get(te.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(et),a.disposeIntermediateTensorInfo(Y),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(lt),a.disposeIntermediateTensorInfo(ot),a.disposeIntermediateTensorInfo(ut),a.disposeIntermediateTensorInfo(mt),a.disposeIntermediateTensorInfo(bt),a.disposeIntermediateTensorInfo(Ct),a.disposeIntermediateTensorInfo(Tt),a.disposeIntermediateTensorInfo(wt),a.disposeIntermediateTensorInfo(It),a.disposeIntermediateTensorInfo(Mt),a.disposeIntermediateTensorInfo(te),{real:ee,imag:ye}}function B8(n,t,e){const s=new Float32Array(t*2);for(let a=0;a<t;a++){let r=0,i=0;for(let l=0;l<t;l++){const u=nI(a*l,t,e),h=ev(n,l);r+=h.real*u.real-h.imag*u.imag,i+=h.real*u.imag+h.imag*u.real}e&&(r/=t,i/=t),tI(s,r,i,a)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V8(n){const{inputs:t,backend:e}=n,{input:s}=t,a=ht(s.shape),r=s.shape[s.shape.length-1],i=a/r,l=Te({inputs:{x:s},backend:e,attrs:{shape:[i,r]}}),u=PR(l,!1,e),h=Te({inputs:{x:u},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(u),h}const P8={kernelName:cx,backendName:"cpu",kernelFunc:V8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vv(n){const{backend:t,attrs:e}=n,{shape:s,value:a,dtype:r}=e,i=r||ql(a),l=Ge(i,ht(s));return W8(l,a,i),t.makeTensorInfo(s,i,l)}const U8={kernelName:hx,backendName:"cpu",kernelFunc:Vv};function W8(n,t,e){n.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G8={kernelName:dx,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,a=e,r=Cn(s.dtype,ht(s.shape)),[i,l,u,h]=s.shape,f=a.data.get(s.dataId).values;for(let m=0;m<i;m++){const y=m*u*l*h;for(let b=0;b<l;b++){const w=b*(u*h);for(let v=0;v<u;v++){const S=v*h;for(let C=0;C<h;C++){const $=Math.round(u-v-1),T=y+w+S+C;let I=f[T];if($>=0&&$<u){const D=$*h,z=y+w+D+C;I=f[z]}r[T]=I}}}}return{dataId:a.write(r,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dataFormat:f,dilations:p,dimRoundingMode:m,activation:y,leakyreluAlpha:b}=s;let w=BR({inputs:{x:a,filter:r},backend:e,attrs:{strides:u,pad:h,dataFormat:f,dilations:p,dimRoundingMode:m}});if(i){const v=w;if(f==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const S=Te({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});w=Vl({inputs:{a:w,b:S},backend:e}),e.disposeIntermediateTensorInfo(S)}else w=Vl({inputs:{a:w,b:i},backend:e});e.disposeIntermediateTensorInfo(v)}if(y){const v=w;if(f==="NCHW"&&y==="prelu"&&l.shape.length===1&&l.shape[0]!==1){const S=Te({inputs:{x:l},backend:e,attrs:{shape:[l.shape[0],1,1]}});w=op(e,w,y,S,b),e.disposeIntermediateTensorInfo(S)}else w=op(e,w,y,l,b);e.disposeIntermediateTensorInfo(v)}return w}const q8={kernelName:Pf,backendName:"cpu",kernelFunc:H8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dataFormat:f,dilations:p,dimRoundingMode:m,activation:y,leakyreluAlpha:b}=s;let w=VR({inputs:{x:a,filter:r},backend:e,attrs:{strides:u,pad:h,dataFormat:f,dilations:p,dimRoundingMode:m}});if(i){const v=w;w=Vl({inputs:{a:w,b:i},backend:e}),e.disposeIntermediateTensorInfo(v)}if(y){const v=w;w=op(e,w,y,l,b),e.disposeIntermediateTensorInfo(v)}return w}const X8={kernelName:Uf,backendName:"cpu",kernelFunc:j8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K8(n){const{inputs:t,backend:e}=n,{params:s,indices:a}=t,r=ht(s.shape),i=a.shape,l=i[i.length-1],[u,h,f,p]=M1(s,a);if(h===0)return e.makeTensorInfo(u,s.dtype,[]);const m=e.data.get(a.dataId).values,y=e.bufferSync(s),b=ZA(m,y,s.dtype,h,l,f,p,s.shape,r);return e.makeTensorInfo(u,s.dtype,b.values)}const Y8={kernelName:fx,backendName:"cpu",kernelFunc:K8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,indices:r}=t,{axis:i,batchDims:l}=s;At([a,r],"gatherV2");const u=jt(i,a.shape)[0],h=e.data.get(r.dataId).values,f=a.shape[u];for(let T=0;T<h.length;++T){const I=h[T];O(I<=f-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${f-1}]`)}let p=l;l==null&&(p=0);const m=ht(r.shape),y=lv(a,r,u,p),b=Te({inputs:{x:a},backend:e,attrs:{shape:[y.batchSize,y.outerSize,y.dimSize,y.sliceSize]}}),w=Te({inputs:{x:r},backend:e,attrs:{shape:[y.batchSize,m/y.batchSize]}}),v=[y.batchSize,y.outerSize,m/y.batchSize,y.sliceSize],S=e.bufferSync(w),C=e.bufferSync(b),$=QA(C,S,v);return e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(w),e.makeTensorInfo(y.outputShape,$.dtype,$.values)}const Q8={kernelName:_p,backendName:"cpu",kernelFunc:Z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J8(n){const{inputs:t,backend:e}=n,{input:s}=t,a=ht(s.shape),r=s.shape[s.shape.length-1],i=a/r,l=Te({inputs:{x:s},backend:e,attrs:{shape:[i,r]}}),u=PR(l,!0,e),h=Te({inputs:{x:u},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(u),h}const tX={kernelName:px,backendName:"cpu",kernelFunc:J8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eX=me(sh,n=>Number.isFinite(n)?1:0,"bool"),nX={kernelName:sh,backendName:"cpu",kernelFunc:eX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sX=me(ah,n=>Math.abs(n)===1/0?1:0,"bool"),aX={kernelName:ah,backendName:"cpu",kernelFunc:sX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rX=me(rh,n=>Number.isNaN(n)?1:0,"bool"),iX={kernelName:rh,backendName:"cpu",kernelFunc:rX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oX(n){const{backend:t,attrs:e}=n,{start:s,stop:a,num:r}=e,i=sR(s,a,r);return t.makeTensorInfo([i.length],"float32",i)}const lX={kernelName:gx,backendName:"cpu",kernelFunc:oX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uX=me(oh,n=>Math.log1p(n)),cX={kernelName:oh,backendName:"cpu",kernelFunc:uX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hX=Ke((n,t)=>n&&t),dX=cn(Bp,hX,null,"bool"),fX={kernelName:Bp,backendName:"cpu",kernelFunc:dX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pX=me(Vp,n=>n?0:1,"bool"),mX={kernelName:Vp,backendName:"cpu",kernelFunc:pX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gX=Ke((n,t)=>n||t),yX=cn(Pp,gX,null,"bool"),bX={kernelName:Pp,backendName:"cpu",kernelFunc:yX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{depthRadius:r,bias:i,alpha:l,beta:u}=s;At(a,"LRN");const h=a.shape[3],f=h-1,p=e.data.get(a.dataId).values,m=ht(a.shape),y=new Float32Array(m);function b(w){const v=w%h;let S=w-v+Math.max(0,v-r);const C=w-v+Math.min(v+r,f);let $=0;for(;S<=C;S++){const T=p[S];$+=T*T}return $}for(let w=0;w<m;w++){const v=b(w),S=p[w]*Math.pow(i+l*v,-u);y[w]=S}return e.makeTensorInfo(a.shape,a.dtype,y)}const vX={kernelName:Up,backendName:"cpu",kernelFunc:xX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,y:r,dy:i}=t,{depthRadius:l,bias:u,alpha:h,beta:f}=s;At(i,"LRNGrad");const p=ht(i.shape),m=i.shape[3],y=e.data.get(i.dataId).values,b=e.data.get(a.dataId).values,w=e.data.get(r.dataId).values,v=new Float32Array(p),S=p;for(let C=0;C<S;C++){const $=C%m,T=C-$+Math.max(0,$-l),I=C-$+Math.min(m,$+l+1);let D=0;for(let z=T;z<I;z++)D+=Math.pow(b[z],2);D=h*D+u;for(let z=T;z<I;z++){let B=-2*h*f*b[z]*w[C]/D;C===z&&(B+=Math.pow(D,-f)),B*=y[C],v[z]+=B}}return e.makeTensorInfo(i.shape,a.dtype,v)}const SX={kernelName:yx,backendName:"cpu",kernelFunc:wX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UR(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reductionIndices:r,keepDims:i}=s,l=e;let u=a.shape;const h=u.length,f=jt(r,u);let p=f;const m=_e(p,h);let y=l.data.get(a.dataId).values;if(m!=null){const T=new Array(h);for(let I=0;I<T.length;I++)T[I]=u[m[I]];y=Fv(y,u,a.dtype,m,T),p=je(p.length,h),u=T}At(a,"max"),kn("max",p,h);const[b,w]=yn(u,p),v=ht(w),S=rR(y,v,b,a.dtype),C=l.write(S,b,a.dtype);let $=b;return i&&($=qe(b,f)),{dataId:C,shape:$,dtype:a.dtype}}const NX={kernelName:Wp,backendName:"cpu",kernelFunc:UR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;At(a,"maxPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;O($n(i,h),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const f=la(a.shape,r,i,h,l,u);let p;if(f.filterWidth===1&&f.filterHeight===1&&Jt(f.inShape,f.outShape))p=Xa({inputs:{x:a},backend:e});else{const m=e.data.get(a.dataId).values,y=Ft(a.shape),b=Mv(m,a.shape,a.dtype,y,f,"max");p=e.makeTensorInfo(f.outShape,a.dtype,b.values)}return p}const TX={kernelName:Gp,backendName:"cpu",kernelFunc:CX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $X(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u,dataFormat:h}=s;At(a,"maxPool3d");const f=Tr(a.shape,r,i,1,l,u,h),p=e.data.get(a.dataId).values,m=MR(p,a.shape,a.dtype,Ft(a.shape),f,"max");return e.makeTensorInfo(m.shape,"float32",m.values)}const kX={kernelName:Hp,backendName:"cpu",kernelFunc:$X};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IX(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,{filterSize:i,strides:l,pad:u,dimRoundingMode:h}=s;At([a,r],"maxPool3DGrad");const f=Tr(r.shape,i,l,1,u,h),p=e.bufferSync(r),m=g5(p,f),y=f.strideDepth,b=f.strideHeight,w=f.strideWidth,v=f.dilationDepth,S=f.dilationHeight,C=f.dilationWidth,$=f.effectiveFilterDepth,T=f.effectiveFilterHeight,I=f.effectiveFilterWidth,D=$-1-f.padInfo.front,z=I-1-f.padInfo.left,B=T-1-f.padInfo.top,R=Ht(r.shape,"float32"),_=e.bufferSync(a);for(let A=0;A<f.batchSize;++A)for(let W=0;W<f.inChannels;++W)for(let K=0;K<f.inDepth;++K)for(let tt=0;tt<f.inHeight;++tt)for(let Q=0;Q<f.inWidth;++Q){const P=K-D,et=tt-B,Y=Q-z;let at=0;for(let M=0;M<$;M+=v){const j=(P+M)/y;if(!(j<0||j>=f.outDepth||Math.floor(j)!==j))for(let lt=0;lt<T;lt+=S){const ot=(et+lt)/b;if(!(ot<0||ot>=f.outHeight||Math.floor(ot)!==ot))for(let ut=0;ut<I;ut+=C){const mt=(Y+ut)/w;if(mt<0||mt>=f.outWidth||Math.floor(mt)!==mt)continue;const bt=$*T*I-1-m.get(A,j,ot,mt,W),Ct=M*T*I+lt*I+ut,wt=bt===Ct?1:0;if(wt===0)continue;const Tt=_.get(A,j,ot,mt,W);at+=Tt*wt}}}R.set(at,A,K,tt,Q,W)}return e.makeTensorInfo(R.shape,R.dtype,R.values)}const EX={kernelName:xx,backendName:"cpu",kernelFunc:IX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AX(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r,output:i}=t,l=r;At([r,i],"maxPoolGrad");const{filterSize:u,strides:h,pad:f,dimRoundingMode:p}=s,m=la(l.shape,u,h,1,f,p),y=e.data.get(l.dataId).values,b=Ht(m.outShape,l.dtype,zR(y,l.shape,l.dtype,m).values),w=m.strideHeight,v=m.strideWidth,S=m.dilationHeight,C=m.dilationWidth,$=m.effectiveFilterHeight,T=m.effectiveFilterWidth,I=T-1-m.padInfo.left,D=$-1-m.padInfo.top,z=Ht(l.shape,"float32"),B=e.data.get(a.dataId).values,R=Ht(a.shape,"float32",B);for(let _=0;_<m.batchSize;++_)for(let A=0;A<m.inChannels;++A)for(let W=0;W<m.inHeight;++W)for(let K=0;K<m.inWidth;++K){const tt=W-D,Q=K-I;let P=0;for(let et=0;et<$;et+=S){const Y=(tt+et)/w;if(!(Y<0||Y>=m.outHeight||Math.floor(Y)!==Y))for(let at=0;at<T;at+=C){const M=(Q+at)/v;if(M<0||M>=m.outWidth||Math.floor(M)!==M)continue;const j=$*T-1-b.get(_,Y,M,A),lt=et*T+at,ot=j===lt?1:0;if(ot===0)continue;const ut=R.get(_,Y,M,A);P+=ut*ot}}z.set(P,_,W,K,A)}return e.makeTensorInfo(z.shape,z.dtype,z.values)}const RX={kernelName:bx,backendName:"cpu",kernelFunc:AX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DX(n,t,e,s,a){const r=Ft(t),i=Mv(n,t,e,r,a,"max"),l=zR(n,t,e,a,!0,s);return[i.values,l.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OX={kernelName:vx,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:a,strides:r,pad:i,includeBatchInIndex:l}=t,u=e;At(s,"MaxPoolWithArgmax");const h=u.data.get(s.dataId).values,f=la(s.shape,a,r,[1,1],i),[p,m]=DX(h,s.shape,s.dtype,l,f),y=u.write(p,f.outShape,s.dtype),b=u.write(m,f.outShape,s.dtype);return[{dataId:y,shape:f.outShape,dtype:s.dtype},{dataId:b,shape:f.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _X(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=jt(r,a.shape),h=yn(a.shape,l)[1],f=ht(h),p=[],m=e.makeTensorInfo([],"float32",new Float32Array([f]));p.push(m);const y=gi({inputs:{x:a},backend:e,attrs:{dtype:"float32"}});p.push(y);const b=Bv({inputs:{a:y,b:m},backend:e});p.push(b);const w=Yh({inputs:{x:b},backend:e,attrs:{axis:r,keepDims:i}});return p.forEach(v=>e.disposeIntermediateTensorInfo(v)),w}const FX={kernelName:qp,backendName:"cpu",kernelFunc:_X};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;At(a,"min");const l=jt(r,a.shape);let u=l;const h=_e(u,a.shape.length);let f=a;h!=null&&(f=ss({inputs:{x:a},backend:e,attrs:{perm:h}}),u=je(u.length,a.shape.length)),kn("min",u,f.shape.length);const[p,m]=yn(f.shape,u),y=ht(m),b=_n(ht(p),f.dtype),w=e.data.get(f.dataId).values;for(let S=0;S<b.length;++S){const C=S*y;let $=w[C];for(let T=0;T<y;++T){const I=w[C+T];(Number.isNaN(I)||I<$)&&($=I)}b[S]=$}h!=null&&e.disposeIntermediateTensorInfo(f);const v=e.makeTensorInfo(p,f.dtype,b);if(i){const S=qe(p,l),C=Te({inputs:{x:v},backend:e,attrs:{shape:S}});return e.disposeIntermediateTensorInfo(v),C}return v}const zX={kernelName:jp,backendName:"cpu",kernelFunc:LX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{paddings:r,mode:i}=s;At(a,"mirrorPad");const l=r.map(($,T)=>$[0]+a.shape[T]+$[1]),u=r.map($=>$[0]),h=r.map(($,T)=>$[0]+a.shape[T]),f=i==="reflect"?0:1,p=e.data.get(a.dataId).values,m=a.shape.length,y=Ft(a.shape),b=ht(l),w=l.length,v=Ft(l),S=Cn(a.dtype,b);for(let $=0;$<b;$++){let T=jl($,w,v);for(let D=0;D<w;D++)T[D]<u[D]?T[D]=u[D]*2-T[D]-f:T[D]>=h[D]&&(T[D]=(h[D]-1)*2-T[D]+f);T=T.map((D,z)=>D-u[z]);const I=Pa(T,m,y);S[$]=p[I]}return{dataId:e.write(S,l,a.dtype),shape:l,dtype:a.dtype}}const BX={kernelName:Xp,backendName:"cpu",kernelFunc:MX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VX=Ke((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),PX=cn(ch,VX),UX={kernelName:ch,backendName:"cpu",kernelFunc:PX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WR(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{dim:r}=s,i=a.shape.length;let l=r;if(l===-1&&(l=i-1),l!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${l}`);const u=jt([l],a.shape),h=UR({inputs:{x:a},backend:e,attrs:{reductionIndices:u,keepDims:!1}}),f=qe(h.shape,u),p=Te({inputs:{x:h},backend:e,attrs:{shape:f}}),m=zv({inputs:{a,b:p},backend:e}),y=jA({inputs:{x:m},backend:e}),b=Yh({inputs:{x:y},backend:e,attrs:{axis:u,keepDims:!1}}),w=Te({inputs:{x:b},backend:e,attrs:{shape:f}}),v=Bv({inputs:{a:y,b:w},backend:e});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(w),v}const WX={kernelName:dm,backendName:"cpu",kernelFunc:WR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GX(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{numSamples:r,seed:i,normalized:l}=s;At(a,"multinomial");const u=l?a:WR({inputs:{logits:a},backend:e,attrs:{dim:-1}}),h=u.shape[0],f=u.shape[1],p=e.data.get(u.dataId).values,m=[h,r],y=_n(ht(m),"int32");for(let b=0;b<h;++b){const w=b*f,v=new Float32Array(f-1);v[0]=p[w];for(let $=1;$<v.length;++$)v[$]=v[$-1]+p[w+$];const S=Am.alea(i.toString()),C=b*r;for(let $=0;$<r;++$){const T=S();y[C+$]=v.length;for(let I=0;I<v.length;I++)if(T<v[I]){y[C+$]=I;break}}}return l||e.disposeIntermediateTensorInfo(u),e.makeTensorInfo(m,"int32",y)}const HX={kernelName:wx,backendName:"cpu",kernelFunc:GX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qX=R1;function jX(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=s;At(a,"NonMaxSuppression");const h=e.data.get(a.dataId).values,f=e.data.get(r.dataId).values,{selectedIndices:p}=qX(h,f,i,l,u);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}const XX={kernelName:Sx,backendName:"cpu",kernelFunc:jX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KX=D1;function YX(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:h}=s;At(a,"NonMaxSuppressionPadded");const f=e.data.get(a.dataId).values,p=e.data.get(r.dataId).values,{selectedIndices:m,validOutputs:y}=KX(f,p,i,l,u,h);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([y]))]}const ZX={kernelName:Nx,backendName:"cpu",kernelFunc:YX};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QX=O1;function JX(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,softNmsSigma:h}=s;At(a,"NonMaxSuppressionWithScore");const f=e.data.get(a.dataId).values,p=e.data.get(r.dataId).values,m=i,y=l,b=u,w=h,{selectedIndices:v,selectedScores:S}=QX(f,p,m,y,b,w);return[e.makeTensorInfo([v.length],"int32",new Int32Array(v)),e.makeTensorInfo([S.length],"float32",new Float32Array(S))]}const tK={kernelName:Cx,backendName:"cpu",kernelFunc:JX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eK(n){const{inputs:t,backend:e,attrs:s}=n,{indices:a}=t,{dtype:r,depth:i,onValue:l,offValue:u}=s;At(a,"oneHot");const h=ht(a.shape),f=new Float32Array(h*i);f.fill(u);const p=e.data.get(a.dataId).values;for(let m=0;m<h;++m)p[m]>=0&&p[m]<i&&(f[m*i+p[m]]=l);return e.makeTensorInfo([...a.shape,i],r,f)}const nK={kernelName:Qp,backendName:"cpu",kernelFunc:eK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function up(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const a=No({inputs:{input:s},backend:e}),r=up({inputs:{x:a},backend:e}),i=Pl({inputs:{input:s},backend:e}),l=up({inputs:{x:i},backend:e}),u=cs({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return Vv({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const sK={kernelName:gm,backendName:"cpu",kernelFunc:up};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const a=No({inputs:{input:s},backend:e}),r=GR({inputs:{x:a},backend:e}),i=Pl({inputs:{input:s},backend:e}),l=up({inputs:{x:i},backend:e}),u=cs({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return Vv({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const aK={kernelName:Zp,backendName:"cpu",kernelFunc:GR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s;if(t.length===1)return lp({inputs:{input:t[0]},backend:e,attrs:{dim:a}});const r=t[0].shape,i=t[0].dtype;t.forEach(f=>{bs(r,f.shape,"All tensors passed to stack must have matching shapes"),O(i===f.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=t.map(f=>{const p=lp({inputs:{input:f},backend:e,attrs:{dim:a}});return l.push(p),p}),h=Ul({inputs:u,backend:e,attrs:{axis:a}});return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),h}const rK={kernelName:Jp,backendName:"cpu",kernelFunc:HR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iK(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{paddings:r,constantValue:i}=s;At(a,"pad");const l=r.map((C,$)=>C[0]+a.shape[$]+C[1]),u=r.map(C=>C[0]),h=e.data.get(a.dataId).values,f=ht(a.shape),p=a.shape.length,m=Ft(a.shape),y=ht(l),b=l.length,w=Ft(l),v=Cn(a.dtype,y);i!==0&&v.fill(i);for(let C=0;C<f;C++){const T=jl(C,p,m).map((D,z)=>D+u[z]),I=Pa(T,b,w);v[I]=h[C]}return{dataId:e.write(v,l,a.dtype),shape:l,dtype:a.dtype}}const qR={kernelName:tm,backendName:"cpu",kernelFunc:iK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oK=Ke((n,t)=>Math.pow(n,t)),lK=cn(dh,oK),uK={kernelName:dh,backendName:"cpu",kernelFunc:lK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cK(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=t,{outputRaggedRank:l}=s,u=a.map(S=>e.data.get(S.dataId).values),h=a.map(S=>S.shape),f=e.data.get(r.dataId).values,p=e.data.get(i.dataId).values,[m,y,b]=hR(u,h,f,r.shape,r.dtype,p,i.shape),w=m.map(S=>e.makeTensorInfo([S.length],"int32",S)),v=e.makeTensorInfo(b,r.dtype,y);return w.concat([v])}const hK={kernelName:Tx,backendName:"cpu",kernelFunc:cK};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dK(n){const{inputs:t,backend:e}=n,{starts:s,limits:a,deltas:r}=t,i=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,[h,f]=dR(i,s.shape,s.dtype,l,a.shape,u,r.shape),p=e.makeTensorInfo([h.length],"int32",h),m=e.makeTensorInfo([f.length],s.dtype,f);return[p,m]}const fK={kernelName:$x,backendName:"cpu",kernelFunc:dK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pK(n){const{inputs:t,backend:e,attrs:s}=n,{shape:a,values:r,defaultValue:i,rowPartitionTensors:l}=t,{rowPartitionTypes:u}=s,h=e.data.get(a.dataId).values,f=e.data.get(r.dataId).values,p=e.data.get(i.dataId).values,m=l.map(v=>e.data.get(v.dataId).values),y=l.map(v=>v.shape),[b,w]=fR(h,a.shape,f,r.shape,r.dtype,p,i.shape,m,y,u);return e.makeTensorInfo(b,r.dtype,w)}const mK={kernelName:kx,backendName:"cpu",kernelFunc:pK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gK(n){const{backend:t,attrs:e}=n,{start:s,stop:a,dtype:r,step:i}=e,l=pR(s,a,i,r);return t.makeTensorInfo([l.length],r,l)}const yK={kernelName:Ix,backendName:"cpu",kernelFunc:gK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bK=me(fh,n=>1/n),xK={kernelName:fh,backendName:"cpu",kernelFunc:bK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vK(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s;At(a,"resizeBilinear");const u=Ft(a.shape),[h,f]=l,[p,m,y,b]=a.shape,w=e.data.get(a.dataId).values,v=new Float32Array(ht([p,h,f,b])),S=[r&&h>1?m-1:m,r&&f>1?y-1:y],C=[r&&h>1?h-1:h,r&&f>1?f-1:f];let $=0;const T=S[0]/C[0],I=S[1]/C[1];for(let D=0;D<p;D++)for(let z=0;z<h;z++){let B;i?B=T*(z+.5)-.5:B=T*z;const R=Math.max(0,Math.floor(B)),_=B-R,A=Math.min(m-1,Math.ceil(B)),W=D*u[0]+R*u[1],K=D*u[0]+A*u[1];for(let tt=0;tt<f;tt++){let Q;i?Q=I*(tt+.5)-.5:Q=I*tt;const P=Math.max(0,Math.floor(Q)),et=Q-P,Y=Math.min(y-1,Math.ceil(Q)),at=W+P*u[2],M=K+P*u[2],j=W+Y*u[2],lt=K+Y*u[2];for(let ot=0;ot<b;ot++){const ut=w[at+ot],mt=w[M+ot],bt=w[j+ot],Ct=w[lt+ot],wt=ut+(bt-ut)*et,Tt=mt+(Ct-mt)*et,It=wt+(Tt-wt)*_;v[$++]=It}}}return e.makeTensorInfo([p,h,f,b],"float32",v)}const wK={kernelName:rm,backendName:"cpu",kernelFunc:vK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SK(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s;At([r,a],"resizeBilinearGrad");const l=Ft(a.shape),[u,h,f,p]=a.shape,[,m,y]=r.shape,b=new Float32Array(u*h*f*p),w=[i&&m>1?h-1:h,i&&y>1?f-1:f],v=[i&&m>1?m-1:m,i&&y>1?y-1:y],S=w[0]/v[0],C=w[1]/v[1],$=e.data.get(r.dataId).values;let T=0;for(let I=0;I<u;I++){const D=I*l[0];for(let z=0;z<m;z++){const B=z*S,R=Math.floor(B),_=Math.min(Math.ceil(B),h-1),A=D+R*l[1],W=D+_*l[1],K=B-R,tt=1-K;for(let Q=0;Q<y;Q++){const P=Q*C,et=Math.floor(P),Y=Math.min(Math.ceil(P),f-1),at=P-et,M=1-at,j=A+et*l[2],lt=A+Y*l[2],ot=W+et*l[2],ut=W+Y*l[2],mt=tt*M,bt=tt*at,Ct=K*M,wt=K*at;for(let Tt=0;Tt<p;Tt++){const It=$[T++];b[j+Tt]+=It*mt,b[lt+Tt]+=It*bt,b[ot+Tt]+=It*Ct,b[ut+Tt]+=It*wt}}}}return e.makeTensorInfo([u,f,h,p],"float32",b)}const NK={kernelName:Rx,backendName:"cpu",kernelFunc:SK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CK(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s;At(a,"resizeNearestNeighbor");const u=Ft(a.shape),[h,f]=l,[p,m,y,b]=a.shape,w=e.data.get(a.dataId).values,v=new Float32Array(p*h*f*b),S=[r&&h>1?m-1:m,r&&f>1?y-1:y],C=[r&&h>1?h-1:h,r&&f>1?f-1:f],$=S[0]/C[0],T=S[1]/C[1];let I=0;for(let D=0;D<p;D++){const z=D*u[0];for(let B=0;B<h;B++){const R=i?$*(B+.5):$*B;let _=Math.min(m-1,r?Math.round(R):Math.floor(R));i&&(_=Math.max(0,_));const A=z+_*u[1];for(let W=0;W<f;W++){const K=i?T*(W+.5):T*W;let tt=Math.min(y-1,r?Math.round(K):Math.floor(K));i&&(tt=Math.max(0,tt));const Q=A+tt*u[2];for(let P=0;P<b;P++){const et=w[Q+P];v[I++]=et}}}}return e.makeTensorInfo([p,h,f,b],a.dtype,v)}const TK={kernelName:am,backendName:"cpu",kernelFunc:CK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $K(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s;At([r,a],"resizeNearestNeighborGrad");const l=Ft(a.shape),u=Ft(r.shape),[h,f,p,m]=a.shape,[,y,b]=r.shape,w=new Float32Array(h*f*p*m),v=e.data.get(r.dataId).values,S=[i&&y>1?f-1:f,i&&b>1?p-1:p],C=[i&&y>1?y-1:y,i&&b>1?b-1:b],$=S[0]/C[0],T=S[1]/C[1],I=1/$,D=1/T,z=Math.ceil(I)*2+2,B=Math.ceil(D)*2+2;for(let R=0;R<h;R++){const _=R*l[0];for(let A=0;A<f;A++){const W=_+A*l[1],K=Math.floor(A*I),tt=Math.floor(K-z/2);for(let Q=0;Q<p;Q++){const P=W+Q*l[2],et=Math.floor(Q*D),Y=Math.floor(et-B/2);for(let at=0;at<m;at++){let M=0;for(let j=0;j<z;j++){const lt=j+tt;if(lt<0||lt>=y)continue;const ot=_+lt*u[1],ut=lt*$,mt=Math.min(f-1,i?Math.round(ut):Math.floor(ut));if(A===mt)for(let bt=0;bt<B;bt++){const Ct=bt+Y;if(Ct<0||Ct>=b)continue;const wt=ot+Ct*u[2],Tt=Ct*T,It=Math.min(p-1,i?Math.round(Tt):Math.floor(Tt));Q===It&&(M+=v[wt+at])}}w[P+at]=M}}}}return e.makeTensorInfo(a.shape,a.dtype,w)}const kK={kernelName:Ax,backendName:"cpu",kernelFunc:$K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IK(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dims:r}=s;At(a,"reverse");const i=a.shape.length,l=jt(r,a.shape);if(i===0)return Xa({inputs:{x:a},backend:e});const u=new rn(a.shape,a.dtype),h=e.bufferSync(a);for(let f=0;f<u.size;f++){const p=u.indexToLoc(f),m=p.slice();l.forEach(y=>m[y]=a.shape[y]-1-m[y]),u.set(h.get(...m),...p)}return e.makeTensorInfo(u.shape,u.dtype,u.values)}const EK={kernelName:im,backendName:"cpu",kernelFunc:IK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AK={kernelName:Xx,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:a,fillValue:r,center:i}=t,l=e,u=Cn(s.dtype,ht(s.shape)),[h,f,p,m]=s.shape,[y,b]=q1(i,f,p),w=255,v=Math.sin(a),S=Math.cos(a),C=l.data.get(s.dataId).values;for(let T=0;T<h;T++){const I=T*p*f*m;for(let D=0;D<f;D++){const z=D*(p*m);for(let B=0;B<p;B++){const R=B*m;for(let _=0;_<m;_++){const A=[h,D,B,_],W=A[2],K=A[1];let tt=(W-y)*S-(K-b)*v,Q=(W-y)*v+(K-b)*S;tt=Math.round(tt+y),Q=Math.round(Q+b);let P=r;if(typeof r!="number"&&(_===3?P=w:P=r[_]),tt>=0&&tt<p&&Q>=0&&Q<f){const Y=Q*(p*m),at=tt*m,M=I+Y+at+_;P=C[M]}const et=I+z+R+_;u[et]=P}}}}return{dataId:l.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RK=me(gh,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2===0?t:t+1}),DK={kernelName:gh,backendName:"cpu",kernelFunc:RK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OK(n){const{inputs:t,backend:e,attrs:s}=n,{indices:a,updates:r}=t,{shape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:h,strides:f,outputSize:p}=Ao(r,a,i),m=!0,y=e.bufferSync(a),b=e.bufferSync(r),w=oo(y,b,i,p,h,u,l,f,0,m);return e.makeTensorInfo(i,w.dtype,w.values)}const _K={kernelName:Dx,backendName:"cpu",kernelFunc:OK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FK(n,t){let e=0,s=n.length,a=0;for(;e<s;)a=Math.floor((e+s)/2),n[a]<t?e=a+1:s=a;return s}function LK(n,t){let e=0,s=n.length,a=0;for(;e<s;)a=Math.floor((e+s)/2),n[a]<=t?e=a+1:s=a;return s}function zK(n,t,e,s,a,r){const i=Ge("int32",e*a);for(let l=0;l<e;++l){const u=n.slice(l*s,(l+1)*s),h=l*a;for(let f=0;f<a;++f)i[h+f]=r==="left"?FK(u,t[f+h]):LK(u,t[f+h])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MK(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:a,values:r}=t,{side:i}=s,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,h=zK(l,u,a.shape[0],a.shape[1],r.shape[1],i);return e.makeTensorInfo(r.shape,"int32",h)}const BK={kernelName:_x,backendName:"cpu",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VK(n){const{inputs:t,backend:e}=n,{condition:s,t:a,e:r}=t;At([s,a,r],"select");const i=s.shape.length,l=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values,h=e.data.get(r.dataId).values,f=ds(a.dtype,r.dtype),p=_n(ht(a.shape),f);let m=0;const y=i===0||i>1||a.shape.length===1?1:ht(a.shape.slice(1));for(let b=0;b<l.length;b++)for(let w=0;w<y;w++)l[b]===1?p[m++]=u[b]:p[m++]=h[b];return e.makeTensorInfo(a.shape,f,p)}const PK={kernelName:om,backendName:"cpu",kernelFunc:VK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UK=Um,WK=Wm,GK=me(bh,n=>n>=0?WK*n:UK*(Math.exp(n)-1)),HK={kernelName:bh,backendName:"cpu",kernelFunc:GK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qK=me(wh,n=>n<0?-1:n>0?1:0),jK={kernelName:wh,backendName:"cpu",kernelFunc:qK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XK=me(xh,n=>Math.sin(n)),KK={kernelName:xh,backendName:"cpu",kernelFunc:XK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YK=me(vh,n=>Math.sinh(n)),ZK={kernelName:vh,backendName:"cpu",kernelFunc:YK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QK=11920928955078125e-23,n2=Math.log(QK)+2,JK=me(Nh,n=>{const t=n>-n2,e=n<n2,s=Math.exp(n);let a;return e?a=s:t?a=n:a=Math.log(1+s),a}),t7={kernelName:Nh,backendName:"cpu",kernelFunc:JK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,paddings:i}=s;At([a],"spaceToBatchND");const l=ht(r),u=[[0,0]];u.push(...i);for(let D=1+r.length;D<a.shape.length;++D)u.push([0,0]);const h=qR.kernelFunc({inputs:{x:a},backend:e,attrs:{paddings:u,constantValue:0}}),f=Bh(h.shape,r,l,!1),p=Vh(f.length,r.length,!1),m=Ph(h.shape,r,l,!1),w=Te({inputs:{x:h},backend:e,attrs:{shape:f}}),C=ss({inputs:{x:w},backend:e,attrs:{perm:p}}),I=Te({inputs:{x:C},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(C),I}const n7={kernelName:cm,backendName:"cpu",kernelFunc:e7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s7(n){const{inputs:t,backend:e}=n,{indices:s,values:a,denseShape:r,defaultValue:i}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const l=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values,h=e.data.get(r.dataId).values,f=e.data.get(i.dataId).values[0],[p,m,y,b,w]=bR(l,s.shape,s.dtype,u,a.dtype,h,f);return[e.makeTensorInfo(m,s.dtype,p),e.makeTensorInfo([m[0]],a.dtype,y),e.makeTensorInfo([b.length],"bool",new Uint8Array(b.map(v=>Number(v)))),e.makeTensorInfo([w.length],s.dtype,new Int32Array(w))]}const a7={kernelName:Fx,backendName:"cpu",kernelFunc:s7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r7(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:a,newShape:r}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(e.data.get(a.dataId).values),l=e.data.get(s.dataId).values,u=Array.from(e.data.get(r.dataId).values),[h,f,p]=xR(l,s.shape,s.dtype,i,u);return[e.makeTensorInfo(f,s.dtype,h),e.makeTensorInfo([p.length],r.dtype,new Int32Array(p))]}const i7={kernelName:Lx,backendName:"cpu",kernelFunc:r7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o7(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,[h,f]=Lv(i,s.shape,s.dtype,l,u,!0);return e.makeTensorInfo(f,s.dtype,h)}const l7={kernelName:zx,backendName:"cpu",kernelFunc:o7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u7(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,[h,f]=Lv(i,s.shape,s.dtype,l,u);return e.makeTensorInfo(f,s.dtype,h)}const c7={kernelName:Mx,backendName:"cpu",kernelFunc:u7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h7(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:a,sparseValues:r,defaultValue:i}=t,{outputShape:l}=s,{sliceRank:u,numUpdates:h,sliceSize:f,strides:p,outputSize:m}=Ao(r,a,l),y=!1,b=e.bufferSync(a);let w;switch(r.dtype){case"bool":{const v=e.bufferSync(r),S=!!e.data.get(i.dataId).values[0];w=oo(b,v,l,m,f,h,u,p,S,y);break}case"float32":{const v=e.bufferSync(r),S=e.data.get(i.dataId).values[0];w=oo(b,v,l,m,f,h,u,p,S,y);break}case"int32":{const v=e.bufferSync(r),S=e.data.get(i.dataId).values[0];w=oo(b,v,l,m,f,h,u,p,S,y);break}case"string":{const v=e.bufferSync(r),S=oi(e.data.get(i.dataId).values[0]);w=oo(b,v,l,m,f,h,u,p,S,y);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return e.makeTensorInfo(l,w.dtype,w.values)}const d7={kernelName:Bx,backendName:"cpu",kernelFunc:h7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{numOrSizeSplits:r,axis:i}=s,l=jt(i,a.shape)[0],u=ov(a,r,l),h=new Array(a.shape.length).fill(0),f=a.shape.slice();return u.map(p=>{const m=[...f];m[l]=p;const y=Co({inputs:{x:a},backend:e,attrs:{begin:h,size:m}});return h[l]+=p,y})}const p7={kernelName:hm,backendName:"cpu",kernelFunc:f7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m7={kernelName:Vx,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;At(e,"square");const a=s.data.get(e.dataId).values,r=new Float32Array(a.length);for(let l=0;l<a.length;++l){const u=a[l];r[l]=u*u}return{dataId:s.write(r,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g7=me(Ah,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),y7={kernelName:Ah,backendName:"cpu",kernelFunc:g7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,end:i,strides:l,beginMask:u,endMask:h,ellipsisMask:f,newAxisMask:p,shrinkAxisMask:m}=s;At(a,"stridedSlice");const{finalShapeSparse:y,finalShape:b,isIdentity:w,sliceDim0:v,isSimpleSlice:S,begin:C,end:$,strides:T}=W1(a.shape,r,i,l,u,h,f,p,m);let I;if(w)I=Te({inputs:{x:a},backend:e,attrs:{shape:b}});else if(v||S){O(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const D=V1(C,$,T),z=Co({inputs:{x:a},backend:e,attrs:{begin:C,size:D}});I=Te({inputs:{x:z},backend:e,attrs:{shape:b}}),e.disposeIntermediateTensorInfo(z)}else{const D=e.bufferSync(a),z=SR(y,D,T,C);I=e.makeTensorInfo(b,z.dtype,z.values)}return I}const x7={kernelName:Px,backendName:"cpu",kernelFunc:b7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v7(n){const{inputs:t,backend:e,attrs:s}=n,{separator:a,nGramWidths:r,leftPad:i,rightPad:l,padWidth:u,preserveShortSequences:h}=s,{data:f,dataSplits:p}=t,m=e.data.get(f.dataId).values,y=e.data.get(p.dataId).values,[b,w]=NR(m,y,a,r,i,l,u,h);return[e.makeTensorInfo([b.length],"string",b),e.makeTensorInfo(p.shape,"int32",w)]}const w7={kernelName:Ux,backendName:"cpu",kernelFunc:v7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S7(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:a}=s,{input:r,delimiter:i}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const l=e.data.get(r.dataId).values,u=e.data.get(i.dataId).values[0],[h,f,p]=CR(l,u,a),m=f.length;return[e.makeTensorInfo([m,2],"int32",h),e.makeTensorInfo([m],"string",f),e.makeTensorInfo([2],"int32",new Int32Array(p))]}const N7={kernelName:Wx,backendName:"cpu",kernelFunc:S7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C7(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:a}=s,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=e.data.get(r.dataId).values,l=TR(i,a);return e.makeTensorInfo(r.shape,"int32",l)}const T7={kernelName:Gx,backendName:"cpu",kernelFunc:C7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $7=me(kh,n=>Math.tan(n)),k7={kernelName:kh,backendName:"cpu",kernelFunc:$7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I7=me(Ih,n=>Math.tanh(n)),E7={kernelName:Ih,backendName:"cpu",kernelFunc:I7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A7(n){const{inputs:t,backend:e}=n,{tensor:s,indices:a,updates:r}=t,{sliceRank:i,numUpdates:l,sliceSize:u,strides:h,outputSize:f}=Ao(r,a,s.shape),p=!1,m=e.bufferSync(a),y=e.bufferSync(r),b=e.bufferSync(s),w=oo(m,y,s.shape,f,u,l,i,h,b,p);return e.makeTensorInfo(s.shape,w.dtype,w.values)}const R7={kernelName:Ox,backendName:"cpu",kernelFunc:A7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reps:r}=s;At(a,"tile");const i=kR(e.bufferSync(a),r);return e.makeTensorInfo(i.shape,i.dtype,i.values)}const O7={kernelName:Eh,backendName:"cpu",kernelFunc:D7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{k:r,sorted:i}=s;At(a,"topk");const l=e.data.get(a.dataId).values,[u,h]=ER(l,a.shape,a.dtype,r,i);return[e.makeTensorInfo(u.shape,u.dtype,u.values),e.makeTensorInfo(h.shape,h.dtype,h.values)]}const F7={kernelName:Hx,backendName:"cpu",kernelFunc:_7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L7(n){const{inputs:t,attrs:e,backend:s}=n,{image:a,transforms:r}=t,{interpolation:i,fillMode:l,fillValue:u,outputShape:h}=e,[f,p,m,y]=a.shape,[b,w]=h??[p,m],v=[f,b,w,y],S=Ft(a.shape),C=S[0],$=S[1],T=S[2],I=Ft(v),D=I[0],z=I[1],B=I[2],R=Cn(a.dtype,ht(v));R.fill(u);const _=s.data.get(a.dataId).values,A=s.data.get(r.dataId).values;for(let K=0;K<f;++K){const tt=r.shape[0]===1?A:A.subarray(K*8,K*8+8);for(let Q=0;Q<b;++Q)for(let P=0;P<w;++P)for(let et=0;et<y;++et){let Y;const at=tt[6]*P+tt[7]*Q+1;if(at===0)continue;const M=(tt[0]*P+tt[1]*Q+tt[2])/at,j=(tt[3]*P+tt[4]*Q+tt[5])/at,lt=s2(M,m,l),ot=s2(j,p,l);switch(i){case"nearest":Y=U7(_,p,m,C,$,T,K,ot,lt,et,u);break;case"bilinear":Y=W7(_,p,m,C,$,T,K,ot,lt,et,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const ut=K*D+Q*z+P*B+et;R[ut]=Y}return s.makeTensorInfo(v,a.dtype,R)}return{dataId:s.write(R,v,a.dtype),shape:a.shape,dtype:a.dtype}}const z7={kernelName:qx,backendName:"cpu",kernelFunc:L7};function s2(n,t,e){switch(e){case"reflect":return M7(n,t);case"wrap":return B7(n,t);case"nearest":return P7(n,t);case"constant":default:return V7(n)}}function M7(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=2*t;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-t?e+s:-e-1}else if(e>t-1)if(t<=1)e=0;else{const s=2*t;e-=s*Math.trunc(e/s),e>=t&&(e=s-e-1)}return co(0,e,t-1)}function B7(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=t-1;e+=t*(Math.trunc(-e/s)+1)}else if(e>t-1)if(t<=1)e=0;else{const s=t-1;e-=t*Math.trunc(e/s)}return co(0,e,t-1)}function V7(n,t){return n}function P7(n,t){return co(0,n,t-1)}function gc(n,t,e,s,a,r,i,l,u,h,f){const p=i*s+l*a+u*r+h;return 0<=l&&l<t&&0<=u&&u<e?n[p]:f}function U7(n,t,e,s,a,r,i,l,u,h,f){const p=Math.round(l),m=Math.round(u);return gc(n,t,e,s,a,r,i,p,m,h,f)}function W7(n,t,e,s,a,r,i,l,u,h,f){const p=Math.floor(l),m=Math.floor(u),y=p+1,b=m+1,w=(b-u)*gc(n,t,e,s,a,r,i,p,m,h,f)+(u-m)*gc(n,t,e,s,a,r,i,p,b,h,f),v=(b-u)*gc(n,t,e,s,a,r,i,y,m,h,f)+(u-m)*gc(n,t,e,s,a,r,i,y,b,h,f);return(y-l)*w+(l-p)*v}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G7(n){const{inputs:t,attrs:e,backend:s}=n,{axis:a}=e,{x:r}=t;At(r,"unique");const i=s.data.get(r.dataId).values,{outputValues:l,outputShape:u,indices:h}=AR(i,a,r.shape,r.dtype);return[s.makeTensorInfo(u,r.dtype,l),s.makeTensorInfo([h.length],"int32",h)]}const H7={kernelName:jx,backendName:"cpu",kernelFunc:G7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q7(n){const{inputs:t,backend:e,attrs:s}=n,{value:a}=t;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a.shape.length,l=a.shape[r],u=new Array(i-1);let h=0;for(let y=0;y<i;y++)y!==r&&(u[h++]=a.shape[y]);const f=new Array(i).fill(0),p=a.shape.slice();p[r]=1;const m=new Array(l);for(let y=0;y<m.length;y++){f[r]=y;const b=Co({inputs:{x:a},backend:e,attrs:{begin:f,size:p}});m[y]=Te({inputs:{x:b},backend:e,attrs:{shape:u}}),e.disposeIntermediateTensorInfo(b)}return m}const j7={kernelName:pm,backendName:"cpu",kernelFunc:q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,segmentIds:r}=t,{numSegments:i}=s;At(a,"unsortedSegmentSum");const l=a.shape.length,u=r.shape.length,h=[],f=[],p=l-u;let m=r;for(let b=0;b<p;++b){const w=lp({inputs:{input:m},backend:e,attrs:{dim:b+1}});m=w,f.push(w)}for(let b=0;b<i;++b){const w=bi(b,"int32"),v=e.makeTensorInfo([],"int32",w),S=HA({inputs:{a:v,b:m},backend:e}),C=gi({inputs:{x:S},backend:e,attrs:{dtype:"float32"}}),$=eg({inputs:{a:C,b:a},backend:e}),T=Yh({inputs:{x:$},backend:e,attrs:{axis:0,keepDims:!1}});h.push(T),f.push(v),f.push(S),f.push(C),f.push($),f.push(T)}const y=HR({inputs:h,backend:e,attrs:{axis:0}});return f.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}const K7={kernelName:mm,backendName:"cpu",kernelFunc:X7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y7=[Gj,Cq,qj,Xj,Aq,Yj,Qj,t5,n5,a5,i5,l5,c5,f5,m5,b5,v5,S5,C5,Uj,$5,I5,A5,Dq,D5,Iq,_q,_5,Tq,L5,M5,B5,P5,W5,H5,j5,K5,Z5,J5,e8,s8,r8,o8,u8,c8,d8,p8,g8,y8,b8,x8,w8,C8,Fj,$8,Fq,_8,Lq,F8,Mq,P8,U8,G8,Vq,Uq,q8,X8,Y8,Q8,Gq,qq,$q,tX,z5,nX,aX,iX,Lj,Xq,Yq,lX,Qq,cX,fX,mX,bX,vX,SX,NX,tj,TX,kX,EX,RX,OX,FX,zX,nj,BX,UX,HX,aj,ij,XX,ZX,tK,lj,nK,aK,rK,qR,uK,Mj,hj,hK,fK,mK,yK,kq,O0,xK,Bj,Vj,Pj,wK,NK,TK,kK,EK,AK,DK,xj,_K,BK,PK,HK,wj,jK,KK,ZK,Sj,WX,t7,n7,a7,i7,l7,c7,d7,p7,Tj,m7,kj,Ej,y7,x7,w7,N7,T7,Oj,S8,k7,E7,R7,O7,F7,z7,uj,H7,j7,K7,sK];for(const n of Y7)V2(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ro={},vf={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Z7(n,t){ro[n]=t}function Ia(n,t){if(!(n in ro)||t!=null){const s=J7(n,t);if(s!==null)ro[n]=s;else return console.log("Could not get context for WebGL version",n),null}const e=ro[n];return e==null||e.isContextLost()?(delete ro[n],Ia(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),ro[n])}function Q7(n){if(!rt().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function J7(n,t){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t??Q7(n);return e.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete ro[n]},!1),rt().getBool("SOFTWARE_WEBGL_ENABLED")&&(vf.failIfMajorPerformanceCaveat=!1),n===1?e.getContext("webgl",vf)||e.getContext("experimental-webgl",vf):e.getContext("webgl2",vf)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Rc;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Rc||(Rc={}));var Es;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Es||(Es={}));var Nn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Nn||(Nn={}));function Zh(n,t){return[t,n]}function t9(n,t){return n*t}function wf(n){const t=ht(n),e=Math.ceil(t/4);return Pb(e)}function eu(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function e9(n,t){const[e,s]=eu(n,t);return e*s*4}function Pv(n,t){const e=n;let s,a,r,i,l,u,h,f,p,m;return rt().getNumber("WEBGL_VERSION")===2?(s=e.R32F,a=e.R16F,r=e.RGBA16F,i=e.RGBA32F,l=e.RED,h=4,f=1,p=e.HALF_FLOAT,m=e.FLOAT,u=e.RGBA8):(s=n.RGBA,a=n.RGBA,r=n.RGBA,i=e.RGBA,l=n.RGBA,h=4,f=4,p=t!=null?t.HALF_FLOAT_OES:null,m=n.FLOAT,u=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:l,downloadTextureFormat:u,downloadUnpackNumChannels:h,defaultNumChannels:f,textureTypeHalfFloat:p,textureTypeFloat:m}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $t(n,t){const e=t();return rt().getBool("DEBUG")&&n9(n),e}function n9(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+i9(n,t))}const s9=596e-10,a9=65504;function r9(n){return!!(rt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||s9<Math.abs(n)&&Math.abs(n)<a9)}function i9(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Sf(n,t){return Er(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function o9(n,t){const e=Er(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if($t(n,()=>n.shaderSource(e,t)),$t(n,()=>n.compileShader(e)),n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function l9(n,t){const e=Er(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if($t(n,()=>n.shaderSource(e,t)),$t(n,()=>n.compileShader(e)),rt().get("ENGINE_COMPILE_ONLY"))return e;if(n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw jR(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const u9=/ERROR: [0-9]+:([0-9]+):/g;function jR(n,t){const e=u9.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(n);return}const s=+e[1],a=n.split(`
`),r=a.length.toString().length+2,i=a.map((p,m)=>$l((m+1).toString(),r)+p);let l=0;for(let p=0;p<i.length;p++)l=Math.max(i[p].length,l);const u=i.slice(0,s-1),h=i.slice(s-1,s),f=i.slice(s);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${$l(h[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(f.join(`
`))}function c9(n){return Er(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function h9(n,t){if($t(n,()=>n.linkProgram(t)),!rt().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(t,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Fb(n,t){if($t(n,()=>n.validateProgram(t)),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function d9(n,t){const e=Er(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return $t(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),$t(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function f9(n,t){const e=Er(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return $t(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),$t(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function p9(n){return Er(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function m9(n,t){const e=rt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0){const s=`[${n}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>e||t>e){const s=`[${n}x${t}]`,a=`[${e}x${e}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+a+".")}}function g9(n){return Er(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function a2(n,t,e,s,a,r,i){const l=n.getAttribLocation(t,e);return l===-1?!1:($t(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),$t(n,()=>n.vertexAttribPointer(l,a,n.FLOAT,!1,r,i)),$t(n,()=>n.enableVertexAttribArray(l)),!0)}function y9(n,t,e){S9(n,e),$t(n,()=>n.activeTexture(n.TEXTURE0+e)),$t(n,()=>n.bindTexture(n.TEXTURE_2D,t))}function b9(n,t,e){return Er(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function x9(n,t,e){return n.getUniformLocation(t,e)}function v9(n,t,e,s){$t(n,()=>y9(n,t,s)),$t(n,()=>n.uniform1i(e,s))}function Lb(n,t,e){$t(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),$t(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function r2(n,t){$t(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),$t(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Nf(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+w9(n,t))}function w9(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Er(n,t,e){const s=$t(n,()=>t());if(s==null)throw new Error(e);return s}function S9(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e){const a=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${a}.`)}}function Wl(n,t=2){return ht(n.slice(0,n.length-t))}function Gl(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Cf(n){let t=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(t=[Wl(n),...Gl(n)]),t}function N9(n,t=!1){let e=rt().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=rt().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&rt().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=e/2),t&&(e=e*2,s=s*2,n=n.map((l,u)=>u>=n.length-2?U0(n[u]):n[u]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=yi(n).newShape);let a=ht(n),r=null;n.length<=1&&a<=e?r=[1,a]:n.length===2&&n[0]<=e&&n[1]<=e?r=n:n.length===3&&n[0]*n[1]<=e&&n[2]<=e?r=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=e&&n[1]*n[2]<=e?r=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=e&&n[3]<=e?r=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=e&&n[1]*n[2]*n[3]<=e&&(r=[n[0],n[1]*n[2]*n[3]]);const i=r!=null&&Math.max(...r)>s&&Math.min(...r)<=(t?2:1)&&Math.min(...r)>0;if(r==null||i)if(t){const l=Wl(n);let u=2,h=2;n.length&&([u,h]=Gl(n)),a=l*(u/2)*(h/2),r=Pb(a).map(f=>f*2)}else r=Pb(a);return r}function Tf(n){return n%2===0}function cp(n,t){if(n=n.slice(-2),t=t.slice(-2),Jt(n,t)||!n.length||!t.length||n[0]===0||n[1]===0||t[0]===0||t[1]===0)return!0;if(n.length!==t.length){const e=n[n.length-1],s=t[t.length-1];if(e===s||Tf(e)&&Tf(s)&&(n[0]===1||t[0]===1))return!0}return n[1]===t[1]&&Tf(n[0])&&Tf(t[0])}let zb,Mb;function C9(n){if(zb==null){const t=Ia(n);zb=t.getParameter(t.MAX_TEXTURE_SIZE)}return zb}function T9(n){if(Mb==null){const t=Ia(n);Mb=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Mb)}function $9(n){if(n===0)return 0;let t;const e=Ia(n);return na(e,"EXT_disjoint_timer_query_webgl2")&&n===2?t=2:na(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function na(n,t){return n.getExtension(t)!=null}function i2(n){try{if(Ia(n)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function k9(n){if(n===0)return!1;const t=Ia(n);if(n===1){if(!na(t,"OES_texture_float"))return!1}else if(!na(t,"EXT_color_buffer_float"))return!1;return F0(t)}function I9(n){if(n===0)return!1;const t=Ia(n);if(n===1){if(!na(t,"OES_texture_float")||!na(t,"WEBGL_color_buffer_float"))return!1}else{if(na(t,"EXT_color_buffer_float"))return F0(t);const s="EXT_color_buffer_half_float";if(na(t,s)){const a=t.getExtension(s);return E9(t,a)}return!1}return F0(t)}function F0(n){const t=Pv(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(r),i}function E9(n,t){const e=Pv(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const l=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),l}function A9(n){return n!==2?!1:Ia(n).fenceSync!=null}function Qh(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&O(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ot=rt();Ot.registerFlag("HAS_WEBGL",()=>Ot.getNumber("WEBGL_VERSION")>0);Ot.registerFlag("WEBGL_VERSION",()=>i2(2)?2:i2(1)?1:0);Ot.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ot.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ot.get("WEBGL_VERSION")===2);Ot.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ot.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ot.registerFlag("WEBGL_PACK",()=>Ot.getBool("HAS_WEBGL"));Ot.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_CLIP",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_REDUCE",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_CONV_IM2COL",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Ot.getBool("WEBGL_PACK"));Ot.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>C9(Ot.getNumber("WEBGL_VERSION")));Ot.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>T9(Ot.getNumber("WEBGL_VERSION")));Ot.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Ot.getNumber("WEBGL_VERSION");return n===0?0:$9(n)});Ot.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ot.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!J2());Ot.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>k9(Ot.getNumber("WEBGL_VERSION")));Ot.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ot.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ot.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ot.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>I9(Ot.getNumber("WEBGL_VERSION")));Ot.registerFlag("WEBGL_FENCE_API_ENABLED",()=>A9(Ot.getNumber("WEBGL_VERSION")));Ot.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ot.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ot.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Ot.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>J2()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Ot.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ot.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ot.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ot.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ot.registerFlag("WEBGL_EXP_CONV",()=>!1);Ot.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ot.getBool("IS_TEST"));Ot.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Ot.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Ot.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Ot.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jn(){let n,t,e,s,a,r,i,l,u,h;return rt().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",t="in",e="out",s="in",a="texture",r="outputColor",i="out vec4 outputColor;",l=rt().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",h=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",t="attribute",e="varying",s="varying",a="texture2D",r="gl_FragColor",i="",l=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,h=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:a,output:r,defineOutput:i,defineSpecialNaN:l,defineSpecialInf:u,defineRound:h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oo(n,t,e="index"){const s=Ft(t);return s.map((a,r)=>{const i=`int ${n[r]} = ${e} / ${a}`,l=r===s.length-1?`int ${n[r+1]} = ${e} - ${n[r]} * ${a}`:`index -= ${n[r]} * ${a}`;return`${i}; ${l};`}).join("")}function ng(n,t,e="index"){const s=Ft(t);return s.map((a,r)=>{const i=`int ${n[r]} = ${e} / outShapeStrides[${r}]`,l=r===s.length-1?`int ${n[r+1]} = ${e} - ${n[r]} * outShapeStrides[${r}]`:`index -= ${n[r]} * outShapeStrides[${r}]`;return`${i}; ${l};`}).join("")}function R9(n,t){const e=n.length,s=n.map(r=>`${t}[${r}]`),a=new Array(e-1);a[e-2]=s[e-1];for(let r=e-3;r>=0;--r)a[r]=`(${a[r+1]} * ${s[r+1]})`;return a}function D9(n,t,e="index"){const s=n.map((r,i)=>i),a=R9(s,t);return a.map((r,i)=>{const l=`int ${n[i]} = ${e} / ${a[i]}`,u=i===a.length-1?`int ${n[i+1]} = ${e} - ${n[i]} * ${a[i]}`:`index -= ${n[i]} * ${a[i]}`;return`${l}; ${u};`}).join("")}function Uv(n){const t=Ft(n).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Wv(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const XR=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:KR}=XP;function O9(n,t,e){const s=[];if(n.forEach(y=>{const b=ht(y.shapeInfo.logicalShape);if(y.shapeInfo.isUniform?s.push(`uniform float ${y.name}${b>1?`[${b}]`:""};`):(s.push(`uniform sampler2D ${y.name};`),s.push(`uniform int offset${y.name};`)),e.enableShapeUniforms){const{uniformShape:w}=Gv(e.packedInputs,y.shapeInfo.logicalShape,y.shapeInfo.texShape);switch(w.length){case 1:s.push(`uniform int ${y.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${y.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${y.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${y.name}Shape;`);break}s.push(`uniform ivec2 ${y.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(y=>{s.push(`uniform ${y.type} ${y.name}${y.arrayIndex?`[${y.arrayIndex}]`:""};`)});const a=s.join(`
`),r=n.map(y=>_9(y,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),i=t.texShape,l=jn(),u=z9(l);let h,f,p=V9(l);return t.isPacked?(h=F9(t.logicalShape,i,e.enableShapeUniforms),f=B9(l)):(h=L9(t.logicalShape,i,e.enableShapeUniforms),f=M9(l)),e.packedInputs&&(p+=G9),[p,u,f,a,h,r,e.userCode].join(`
`)}function nu(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return nY(n,t);case 1:return aY(n,t);case 2:return iY(n,t);case 3:return lY(n,t);case 4:return cY(n,t);case 5:return hY(n);case 6:return dY(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function YR(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return eY(n);case 1:return sY(n,t);case 2:return rY(n,t);case 3:return oY(n,t);default:return uY(n,t)}}function _9(n,t,e=!1,s){let a="";e?a+=YR(n,s):a+=nu(n,s);const r=n.shapeInfo.logicalShape,i=t.logicalShape;return r.length<=i.length&&(e?a+=fY(n,t):a+=pY(n,t)),a}function F9(n,t,e){switch(n.length){case 0:return ZR();case 1:return H9(n,t,e);case 2:return J9(n,t,e);case 3:return j9(n,t,e);default:return K9(n,t,e)}}function L9(n,t,e){switch(n.length){case 0:return ZR();case 1:return q9(n,t,e);case 2:return tY(n,t,e);case 3:return X9(n,t,e);case 4:return Y9(n,t,e);case 5:return Z9(n,t);case 6:return Q9(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function z9(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function M9(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function B9(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function V9(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${P9}
    ${U9}
    ${W9}
  `}const P9=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,U9=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,W9=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,G9=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function ZR(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function H9(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function q9(n,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function j9(n,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(n[2]/2),r=a*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function X9(n,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${ng(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Oo(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function K9(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(n[n.length-1]/2),r=a*Math.ceil(n[n.length-2]/2);let i=r,l="",u="b, r, c";for(let h=2;h<n.length-1;h++)i*=n[n.length-h-1],l=`
      int b${h} = index / ${i};
      index -= b${h} * ${i};
    `+l,u=`b${h}, `+u;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${l}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${n.length}(${u});
    }
  `}function Y9(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${ng(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Oo(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function Z9(n,t){const e=Oo(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Q9(n,t){const e=Oo(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function J9(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Jt(n,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const a=Math.ceil(n[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function tY(n,t,e){return Jt(n,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:n[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function _o(n){return`offset${n}`}function eY(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),s=jn();return`
    vec4 ${e}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function nY(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${e};}`;const[a,r]=n.shapeInfo.texShape;if(a===1&&r===1)return`
      float ${s}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const i=_o(e);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${i});
      return sampleTexture(${e}, uv);
    }
  `;const[l,u]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${l}, ${u}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function sY(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=n.shapeInfo.texShape,r=jn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${e}, uv);
    }
  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${r.texture2D}(${e}, uv);
    }
  `}function aY(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${su(n)}
      }
    `;const a=n.shapeInfo.texShape,r=a[0],i=a[1];if(i===1&&r===1)return`
      float ${s}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const l=_o(e);return i===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / ${r}.0);
        return sampleTexture(${e}, uv);
      }
    `:r===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${l});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${r}, ${i}, index + ${l});
      return sampleTexture(${e}, uv);
    }
  `}function rY(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=r[0],l=r[1],u=jn();if(r!=null&&Jt(e,r))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${u.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${i}.0);

        return ${u.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `;const h=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],f=Math.ceil(e[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${f}, ${h[0]}, ${h[1]}, row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `}function iY(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape;if(r!=null&&Jt(e,r)){if(t)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const m=r[0],y=r[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${y}.0, ${m}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:l}=yi(e),u=i;if(u.length<e.length){const m=au(n,u),y=["row","col"];return`
      ${nu(m,t)}
      float ${a}(int row, int col) {
        return ${a}(${ru(y,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${su(n)}
      }
    `;const h=r[0],f=r[1],p=_o(s);return f===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `:h===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${f}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${p};
    vec2 uv = uvFromFlat(${h}, ${f}, index);
    return sampleTexture(${s}, uv);
  }
`}function oY(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(e[0]===1){const m=e.slice(1),y=[1,2],b=au(n,m),w=["b","row","col"];return`
        ${YR(b,t)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${ru(w,y)});
        }
      `}const l=jn();if(t)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const u=i[0],h=i[1],f=Math.ceil(e[2]/2),p=f*Math.ceil(e[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${h}, ${p}, ${f}, b, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function lY(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e[1]*e[2],i=e[2],{newShape:l,keptDims:u}=yi(e),h=l;if(h.length<e.length){const w=au(n,h),v=["row","col","depth"];return`
        ${nu(w,t)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${ru(v,u)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${i}, 1)));
        ${su(n)}
      }
    `;const f=n.shapeInfo.texShape,p=f[0],m=f[1],y=n.shapeInfo.flatOffset;if(m===r&&y==null)return t?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${p}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(m===i&&y==null)return t?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `;const b=_o(s);return t?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${b};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${i} + depth + ${b};
        vec2 uv = uvFromFlat(${p}, ${m}, index);
        return sampleTexture(${s}, uv);
      }
  `}function uY(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=jn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${e}, uv);
    }
  `;const r=n.shapeInfo.logicalShape,i=r.length,l=n.shapeInfo.texShape,u=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)],h=u[0],f=u[1],p=Math.ceil(r[i-1]/2);let m=p*Math.ceil(r[i-2]/2),y="int b, int row, int col",b=`b * ${m} + (row / 2) * ${p} + (col / 2)`;for(let w=2;w<i-1;w++)y=`int b${w}, `+y,m*=r[i-w-1],b=`b${w} * ${m} + `+b;return`
    vec4 ${s}(${y}) {
      int index = ${b};
      int texR = index / ${f};
      int texC = index - texR * ${f};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${f}, ${h});
      return ${a.texture2D}(${e}, uv);
    }
  `}function cY(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e[3],i=e[2]*r,l=e[1]*i,{newShape:u,keptDims:h}=yi(e);if(u.length<e.length){const C=au(n,u),$=["row","col","depth","depth2"];return`
      ${nu(C,t)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${ru($,h)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${l}, ${i}, ${r}, 1)));
        ${su(n)}
      }
    `;const f=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,m=p[0],y=p[1],b=`int stride2 = ${s}Shape[3];`,w=`int stride1 = ${s}Shape[2] * stride2;`,v=`int stride0 = ${s}Shape[1] * stride1;`;if(y===l&&f==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${b}
        ${w}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${m}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(y===r&&f==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${m}.0);
        return sampleTexture(${s}, uv);
      }
    `;const S=_o(s);return t?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${b}
      ${w}
      ${v}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${S});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${i} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${m}, ${y}, index + ${S});
      return sampleTexture(${s}, uv);
    }
  `}function hY(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=t[4],r=t[3]*a,i=t[2]*r,l=t[1]*i,{newShape:u,keptDims:h}=yi(t);if(u.length<t.length){const w=au(n,u),v=["row","col","depth","depth2","depth3"];return`
      ${nu(w)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${ru(v,h)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${i}, ${r}, ${a})) +
          depth3;
        ${su(n)}
      }
    `;const f=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,m=p[0],y=p[1];if(y===l&&f==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${r}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(y===a&&f==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;const b=_o(e);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${i} + depth * ${r} +
          depth2 * ${a} + depth3 + ${b};
      vec2 uv = uvFromFlat(${m}, ${y}, index);
      return sampleTexture(${e}, uv);
    }
  `}function dY(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:a,keptDims:r}=yi(t);if(a.length<t.length){const v=au(n,a),S=["row","col","depth","depth2","depth3","depth4"];return`
      ${nu(v)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${ru(S,r)});
      }
    `}const i=t[5],l=t[4]*i,u=t[3]*l,h=t[2]*u,f=t[1]*h;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${f}, ${h}, ${u}, ${l})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${su(n)}
      }
    `;const p=n.shapeInfo.flatOffset,m=n.shapeInfo.texShape,y=m[0],b=m[1];if(b===f&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${h}, ${u}, ${l}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${b}.0, ${y}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(b===i&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${b}.0, ${y}.0);
        return sampleTexture(${e}, uv);
      }
    `;const w=_o(e);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${f} + col * ${h} + depth * ${u} +
          depth2 * ${l} + depth3 * ${i} + depth4 + ${w};
      vec2 uv = uvFromFlat(${y}, ${b}, index);
      return sampleTexture(${e}, uv);
    }
  `}function su(n){const t=n.name,e=ht(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function fY(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),a="get"+s+"AtOutCoords",r=n.shapeInfo.logicalShape.length,i=t.logicalShape.length,l=KR(n.shapeInfo.logicalShape,t.logicalShape),u=ge(i),h=i-r;let f;const p=["x","y","z","w","u","v"];r===0?f="":i<2&&l.length>=1?f="coords = 0;":f=l.map(C=>`coords.${p[C+h]} = 0;`).join(`
`);let m="";i<2&&r>0?m="coords":m=n.shapeInfo.logicalShape.map((C,$)=>`coords.${p[$+h]}`).join(", ");let y="return outputValue;";const w=ht(n.shapeInfo.logicalShape)===1,S=ht(t.logicalShape)===1;if(r===1&&!w&&!S)y=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(w&&!S)i===1?y=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:y=`
        return vec4(outputValue.x);
      `;else if(l.length){const C=r-2,$=r-1;l.indexOf(C)>-1&&l.indexOf($)>-1?y="return vec4(outputValue.x);":l.indexOf(C)>-1?y="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf($)>-1&&(y="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${u} coords = getOutputCoords();
      ${f}
      vec4 outputValue = get${s}(${m});
      ${y}
    }
  `}function pY(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),a="get"+s+"AtOutCoords",r=t.texShape,i=n.shapeInfo.texShape,l=n.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!n.shapeInfo.isUniform&&l===u&&n.shapeInfo.flatOffset==null&&Jt(i,r))return`
      float ${a}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const h=ge(u),f=KR(n.shapeInfo.logicalShape,t.logicalShape),p=u-l;let m;const y=["x","y","z","w","u","v"];l===0?m="":u<2&&f.length>=1?m="coords = 0;":m=f.map(w=>`coords.${y[w+p]} = 0;`).join(`
`);let b="";return u<2&&l>0?b="coords":b=n.shapeInfo.logicalShape.map((w,v)=>`coords.${y[v+p]}`).join(", "),`
    float ${a}() {
      ${h} coords = getOutputCoords();
      ${m}
      return get${s}(${b});
    }
  `}function ge(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Gv(n,t,e){const{newShape:s,keptDims:a}=yi(t),r=t.length,i=n&&r===3&&t[0]===1,l=i?t.slice(1):s,u=!n&&r>1&&!Jt(t,e)&&s.length<r||i;return{useSqueezeShape:u,uniformShape:u?l:t,keptDims:a}}function au(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function ru(n,t){return t.map(e=>n[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mY(n,t,e,s){const a=e.map((f,p)=>{const m={logicalShape:f.shape,texShape:f.isUniform?null:f.texData.texShape,isUniform:f.isUniform,isPacked:f.isUniform?!1:f.texData.isPacked,flatOffset:null};return f.texData!=null&&f.texData.slice!=null&&f.texData.slice.flatOffset>0&&(m.flatOffset=f.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:m}}),r=a.map(f=>f.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=O9(a,i,t),u=l9(n.gl,l),h=n.createProgram(u);return rt().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:l,webGLProgram:h,inShapeInfos:r,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(h),Object.assign({program:t,fragmentShader:u,source:l,webGLProgram:h,inShapeInfos:r,outShapeInfo:i},QR(n,t,h)))}function QR(n,t,e){const s=[],a=[];let r,i,l,u=null,h=null;h=n.getUniformLocation(e,"NAN",!1),rt().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(e,"INFINITY",!1));const f=!1;for(const p of t.variableNames){const m={name:p,uniform:n.getUniformLocation(e,p,f),offset:n.getUniformLocation(e,`offset${p}`,f)};t.enableShapeUniforms&&(m.shape=n.getUniformLocation(e,`${p}Shape`,f),m.texShape=n.getUniformLocation(e,`${p}TexShape`,f)),s.push(m)}if(t.enableShapeUniforms&&(r=n.getUniformLocation(e,"outShape",f),l=n.getUniformLocation(e,"outShapeStrides",f),i=n.getUniformLocation(e,"outTexShape",f)),t.customUniforms)for(const p of t.customUniforms)a.push(n.getUniformLocation(e,p.name,f));return{variablesLocations:s,customUniformLocations:a,infLoc:u,nanLoc:h,outShapeLocation:r,outShapeStridesLocation:l,outTexShapeLocation:i}}function o2(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const a=e.logicalShape,r=t[s],i=r.shape;if(!Jt(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(e.isUniform&&r.isUniform)return;const l=e.texShape,u=r.isUniform?null:r.texData.texShape;if(!Jt(l,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${l} and ${u} must match`)})}function gY(n,t,e,s,a){t.program.enableShapeUniforms||(o2(t.inShapeInfos,e),o2([t.outShapeInfo],[s]));const r=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(r.texture,i[0],i[1]):n.setOutputMatrixTexture(r.texture,i[0],i[1]),n.setProgram(t.webGLProgram),n.bindVertexArray(t.webGLProgram.vao),rt().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&n.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&n.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<e.length;++u){const h=e[u],{uniform:f,offset:p,shape:m,texShape:y}=t.variablesLocations[u];if(m){const{uniformShape:b}=Gv(t.program.packedInputs,h.shape,h.texData.texShape);switch(b.length){case 1:n.gl.uniform1iv(m,new Int32Array(b));break;case 2:n.gl.uniform2iv(m,new Int32Array(b));break;case 3:n.gl.uniform3iv(m,new Int32Array(b));break;case 4:n.gl.uniform4iv(m,new Int32Array(b));break}}if(y&&n.gl.uniform2i(y,h.texData.texShape[0],h.texData.texShape[1]),f!=null){if(h.isUniform){if(ht(h.shape)<2)n.gl.uniform1f(f,h.uniformValues[0]);else{let b=h.uniformValues;b instanceof Float32Array||(b=new Float32Array(b)),n.gl.uniform1fv(f,b)}continue}h.texData.slice!=null&&p!=null&&n.gl.uniform1i(p,h.texData.slice.flatOffset),n.setInputMatrixTexture(h.texData.texture.texture,f,u)}}const l=t.outShapeLocation;if(l)switch(s.shape.length){case 1:n.gl.uniform1iv(l,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(l,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(l,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(l,new Int32Array(s.shape));break}if(t.outShapeStridesLocation){const u=Ft(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:n.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:n.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break}}if(t.outTexShapeLocation&&n.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&a)for(let u=0;u<t.program.customUniforms.length;++u){const h=t.program.customUniforms[u],f=t.customUniformLocations[u],p=a[u];if(h.type==="float")n.gl.uniform1fv(f,p);else if(h.type==="vec2")n.gl.uniform2fv(f,p);else if(h.type==="vec3")n.gl.uniform3fv(f,p);else if(h.type==="vec4")n.gl.uniform4fv(f,p);else if(h.type==="int")n.gl.uniform1iv(f,p);else if(h.type==="ivec2")n.gl.uniform2iv(f,p);else if(h.type==="ivec3")n.gl.uniform3iv(f,p);else if(h.type==="ivec4")n.gl.uniform4iv(f,p);else throw Error(`uniform type ${h.type} is not supported yet.`)}n.executeProgram()}function yY(n,t,e){let s="";t.concat(e).forEach(i=>{const l=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const u=i.texData.texShape,{useSqueezeShape:h,uniformShape:f,keptDims:p}=Gv(n.packedInputs,i.shape,u);let m="",y="",b="";if(f.length===1&&n.packedInputs){const I=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];m=`${I[0]>1}_${I[1]>1}`}else if(f.length===2&&!n.packedInputs)y=`${f[0]>1}_${f[1]>1}`;else if(f.length>2&&!n.packedInputs){const I=Ft(f);b=`${I[0]===u[1]}_${I[I.length-1]===u[1]}`}const w=i.shape.length,v=f.length===2&&Jt(i.shape,u),S=ht(i.shape)===1,C=Ll(i.shape,e.shape),$=!n.packedInputs&&w===e.shape.length&&Jt(u,e.texData.texShape),T=n.packedInputs||f.length>2?"":`${u[0]>1}_${u[1]>1}`;s+=`${w}_${$}_${h?p:""}_${f.length}_${S}_${C}_${v}_${m}_${y}_${b}_${T}_${l}`}else{const u=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${u}_${l}`}});const a=n.userCode;let r=n.constructor.name;return r+="_"+s+"_"+a+`${rt().getNumber("WEBGL_VERSION")}`,r}function Ln(n){return rt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bY{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Rc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=jn();this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ng(["r","c","d"],t):Oo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xY{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Rc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=jn();this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ng(["r","c","d"],t):Oo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vY{constructor(t){this.variableNames=["A"],this.outTexUsage=Es.DOWNLOAD;const e=jn();this.outputShape=t,this.userCode=`
      ${XR}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wY{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Es.DOWNLOAD;const e=jn();this.outputShape=t,this.userCode=`
      ${XR}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SY={R:0,G:1,B:2,A:3};class l2{constructor(t,e=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=jn();this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)");let i="";for(let l=0;l<s.length;l++){const u=s[l];i+=`
          if(offset == ${l}) {
            result = values[${SY[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Wv():Uv(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${a.texture2D}(A, uv);
          ${i}
        }
        ${a.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NY{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=jn();this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length);let a="",r="result";e&&(r="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let l=0;l<=1;l++){const u=i*2+l;a+=`
          localCoords = coords;
          if(localCoords[2] + ${l} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${l};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Wv():Uv(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${a}

          ${s.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CY(n){const t=jn(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return o9(n,e)}function TY(n){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return d9(n,t)}function $Y(n){const t=new Uint16Array([0,1,2,2,1,3]);return f9(n,t)}function Jh(n,t,e,s,a,r){m9(t,e);const i=p9(n),l=n.TEXTURE_2D;return $t(n,()=>n.bindTexture(l,i)),$t(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),$t(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),$t(n,()=>n.texParameteri(l,n.TEXTURE_MIN_FILTER,n.NEAREST)),$t(n,()=>n.texParameteri(l,n.TEXTURE_MAG_FILTER,n.NEAREST)),rt().getNumber("WEBGL_VERSION")===1?$t(n,()=>n.texImage2D(l,0,s,t,e,0,a,r,null)):$t(n,()=>n.texStorage2D(l,1,s,t,e)),$t(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[e,t]}}function JR(n){return n.internalFormatFloat}function kY(n,t,e,s){const[a,r]=Zh(t,e);return Jh(n,a,r,JR(s),s.textureFormatFloat,n.FLOAT)}function tD(n){return n.internalFormatHalfFloat}function IY(n,t,e,s){const[a,r]=Zh(t,e);return Jh(n,a,r,tD(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function eD(n){return n.downloadTextureFormat}function EY(n,t,e,s){const[a,r]=Zh(t,e);return Jh(n,a,r,eD(s),n.RGBA,n.UNSIGNED_BYTE)}function nD(n){return n.internalFormatPackedFloat}function AY(n,t,e,s){const[a,r]=eu(t,e);return Jh(n,a,r,nD(s),n.RGBA,n.FLOAT)}function sD(n){return n.internalFormatPackedHalfFloat}function RY(n,t,e,s){const[a,r]=eu(t,e);return Jh(n,a,r,sD(s),n.RGBA,s.textureTypeHalfFloat)}function DY(n,t,e){return $t(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),a2(n,t,"clipSpacePos",e,3,20,0)&&a2(n,t,"uv",e,2,20,12)}function OY(n,t,e,s,a,r){$t(n,()=>n.bindTexture(n.TEXTURE_2D,t));let i,l,u;a instanceof Uint8Array?(i=new Uint8Array(e*s*4),l=n.UNSIGNED_BYTE,u=n.RGBA):(i=new Float32Array(e*s*4),l=n.FLOAT,u=r.internalFormatPackedFloat),i.set(a),rt().getNumber("WEBGL_VERSION")===2?$t(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e,s,n.RGBA,l,i)):$t(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,e,s,0,n.RGBA,l,i)),$t(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function _Y(n,t,e){$t(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?rt().getNumber("WEBGL_VERSION")===2?$t(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,e.data)):$t(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):rt().getNumber("WEBGL_VERSION")===2?$t(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,e)):$t(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),$t(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function FY(n,t,e,s){const a=n.createBuffer();$t(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,a));const l=4*4*t*e;return $t(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,l,n.STREAM_READ)),$t(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),$t(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),a}function LY(n,t,e){const s=n,a=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,a),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),a}function zY(n,t,e,s){const[a,r]=Zh(t,e),i=4,l=new Uint8Array(t9(t*e,i));return $t(n,()=>n.readPixels(0,0,a,r,s.downloadTextureFormat,n.UNSIGNED_BYTE,l)),new Float32Array(l.buffer)}function MY(n,t,e,s,a,r,i,l){const u=n,h=new Float32Array(e9(r,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,h),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),h}function BY(n,t,e){const s=new Float32Array(t*e*4);return $t(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bb{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=rt().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,Z7(e,t)):this.gl=Ia(e),t=this.gl,rt().getNumber("WEBGL_VERSION")===2){const r=t;this.createVertexArray=()=>$t(r,()=>r.createVertexArray()),this.bindVertexArray=i=>$t(r,()=>r.bindVertexArray(i)),this.deleteVertexArray=i=>$t(r,()=>r.deleteVertexArray(i)),this.getVertexArray=()=>$t(r,()=>r.getParameter(r.VERTEX_ARRAY_BINDING))}else if(t!=null){const r=t.getExtension("OES_vertex_array_object");if(r==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>$t(t,()=>r.createVertexArrayOES()),this.bindVertexArray=i=>$t(t,()=>r.bindVertexArrayOES(i)),this.deleteVertexArray=i=>$t(t,()=>r.deleteVertexArrayOES(i)),this.getVertexArray=()=>$t(t,()=>t.getParameter(r.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),rt().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Sf(this.gl,r),na(this.gl,i))this.textureHalfFloatExtension=Sf(this.gl,i);else if(rt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),na(this.gl,a))this.colorBufferHalfFloatExtension=Sf(this.gl,a);else if(rt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",na(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(na(this.gl,a))this.colorBufferHalfFloatExtension=this.gl.getExtension(a);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=TY(this.gl),this.indexBuffer=$Y(this.gl),this.framebuffer=g9(this.gl),this.textureConfig=Pv(this.gl,this.textureHalfFloatExtension)}get debug(){return rt().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;$t(t,()=>t.finish()),$t(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),$t(t,()=>t.deleteFramebuffer(this.framebuffer)),$t(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),$t(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),$t(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),kY(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),IY(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),EY(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),_Y(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,a){this.throwIfDisposed(),OY(this.gl,t,e,s,a,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),RY(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),AY(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(r2(this.gl,this.framebuffer),this.outputTexture=null),$t(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>zY(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,a,r,i){return MY(this.gl,t,e,s,a,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return LY(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const a=FY(this.gl,e,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(rt().getBool("WEBGL_FENCE_API_ENABLED")){const a=t,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const i=a.clientWaitSync(r,0,0);return i===a.ALREADY_SIGNALED||i===a.CONDITION_SATISFIED},e=r}else rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>BY(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=CY(e));const s=c9(e);$t(e,()=>e.attachShader(s,this.vertexShader)),$t(e,()=>e.attachShader(s,t)),h9(e,s);const a=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Fb(e,a),a}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;$t(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),DY(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&($t(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Fb(this.gl,this.program),$t(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?b9(this.gl,t,e):x9(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),$t(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),v9(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[a,r]=eu(e,s);this.setOutputMatrixTextureDriver(t,a,r)}setOutputMatrixWriteRegion(t,e,s,a){this.setOutputMatrixWriteRegionDriver(s,t,a,e)}setOutputPackedMatrixWriteRegion(t,e,s,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Fb(this.gl,this.program),Nf(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}$t(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),$t(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Sf(this.gl,rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=s.createQuery();return s.beginQuery(a.TIME_ELAPSED_EXT,r),r}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();e.endQuery(s.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await BC(()=>this.disposed||this.isQueryAvailable(t,rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const s=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),a=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),a&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=VY(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in rt().platform&&(s=rt().platform.setTimeoutCustom.bind(rt().platform)),BC(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Lb(this.gl,t,this.framebuffer),this.debug&&Nf(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Lb(this.gl,this.outputTexture,this.framebuffer),this.debug&&Nf(this.gl)):r2(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const a=this.gl;Lb(a,t,this.framebuffer),this.debug&&Nf(a),this.outputTexture=t,$t(a,()=>a.viewport(0,0,e,s)),$t(a,()=>a.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,a){this.throwIfDisposed(),$t(this.gl,()=>this.gl.scissor(t,e,s,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function VY(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:PY,bincountImpl:aD,bincountReduceImpl:UY,bitwiseAndImpl:WY,castImpl:GY,ceilImpl:HY,concatImpl:qY,equalImpl:jY,expImpl:XY,expm1Impl:KY,floorImpl:YY,gatherNdImpl:ZY,gatherV2Impl:QY,greaterImpl:JY,greaterEqualImpl:tZ,lessImpl:eZ,lessEqualImpl:nZ,linSpaceImpl:sZ,logImpl:aZ,maxImpl:rZ,maximumImpl:iZ,minimumImpl:oZ,multiplyImpl:lZ,negImpl:uZ,notEqualImpl:cZ,prodImpl:hZ,raggedGatherImpl:dZ,raggedRangeImpl:fZ,raggedTensorToTensorImpl:pZ,rangeImpl:mZ,rsqrtImpl:gZ,scatterImpl:yZ,sigmoidImpl:bZ,simpleAbsImpl:rD,sliceImpl:xZ,sparseFillEmptyRowsImpl:vZ,sparseReshapeImpl:wZ,sparseSegmentReductionImpl:iD,sqrtImpl:SZ,staticRegexReplaceImpl:NZ,stridedSliceImpl:CZ,stringNGramsImpl:TZ,stringSplitImpl:$Z,stringToHashBucketFastImpl:kZ,subImpl:IZ,tileImpl:EZ,topKImpl:AZ,transposeImpl:Hv,uniqueImpl:RZ}=_j;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function Wn(n,t){return t===1?[n]:oD(n,t)}function DZ(n,t){if(n===1)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OZ{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Ln(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=Wn("rc",this.rank),s=ge(this.rank),a=this.getOutOfBoundsCondition(e),r=this.getSetup(e),i=this.getOutput(e);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${a}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let s=0;s<=1;s++)for(let a=0;a<=1;a++){let r=`${s===0?"r":"rp1"}, ${a===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)r=`${t[t.length-1-i]},`+r;e.push(r)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let s=this.rank-2;s<this.rank;s++)e+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${a};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lD{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length);let s="";for(let a=0;a<4;a++){let r="thisRC = rc;";a%2===1&&(r+="thisRC.z += 1;"),a>1&&(r+="thisRC.y += 1;"),s+=`
        ${r}
        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${a}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${a>0?"}":""}
      `}this.userCode=`
      ${_Z(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Wv():Uv(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${s}

        setOutput(result);
      }
    `}}function _Z(n,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?D9(["r","c","d"],"inputShape"):Oo(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FZ{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,s){const a=c2(e,s),r=h2(t,a,s);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=u2(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const u=this.freeTextures[r].pop();return this.usedTextures[r].push(u),u}let l;return a===Nn.PACKED_2X2_FLOAT32?l=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):a===Nn.PACKED_2X2_FLOAT16?l=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):a===Nn.UNPACKED_FLOAT32?l=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):a===Nn.UNPACKED_FLOAT16?l=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):a===Nn.PACKED_4X1_UNSIGNED_BYTE&&(l=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(l),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),l}releaseTexture(t,e,s,a){if(this.freeTextures==null)return;const r=c2(s,a),i=h2(e,r,a);i in this.freeTextures||(this.freeTextures[i]=[]);const l=u2(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),u=rt().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=l):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=l),this.numUsedTextures--;const h=this.usedTextures[i],f=h&&h.indexOf(t);if(f==null||f<0)throw new Error("Cannot release a texture that was never provided by this texture manager");h[f]=h[h.length-1],h.pop(),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function LZ(n,t){const e=n;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function u2(n,t,e,s,a){const r=zZ(t,s);let i;if(a){const[u,h]=eu(n[0],n[1]);i=u*h}else{const[u,h]=Zh(n[0],n[1]);i=u*h}const l=LZ(e,r);return i*l}function zZ(n,t){switch(n){case Nn.PACKED_2X2_FLOAT32:return nD(t);case Nn.PACKED_2X2_FLOAT16:return sD(t);case Nn.UNPACKED_FLOAT32:return JR(t);case Nn.UNPACKED_FLOAT16:return tD(t);case Nn.PACKED_4X1_UNSIGNED_BYTE:return eD(t);default:throw new Error(`Unknown physical texture type ${n}`)}}function MZ(n){return rt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Nn.PACKED_2X2_FLOAT32:Nn.UNPACKED_FLOAT32:n?Nn.PACKED_2X2_FLOAT16:Nn.UNPACKED_FLOAT16}function c2(n,t){if(n===Es.UPLOAD)return Nn.PACKED_2X2_FLOAT32;if(n===Es.RENDER||n==null)return MZ(t);if(n===Es.DOWNLOAD||n===Es.PIXELS)return Nn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function h2(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Va{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const ca="if (isnan(x)) return x;",BZ="return x;",d2="return abs(x);",VZ="return (x >= 0.0) ? x : (exp(x) - 1.0);",PZ=ca+`
  return (x < 0.0) ? 0.0 : x;
`,UZ=ca+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Jr="return x;",WZ="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GZ="return x;",HZ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,qZ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,jZ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,XZ="return 1.0 / (1.0 + exp(-1.0 * x));";class ni{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KZ{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length);const e=t.length,s=Wn("rc",e),a=ge(e),r=DZ(e,s),i=s.slice(-2),l=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${a} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${l}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YZ=I1,ZZ=1e-7,QZ=1e-4,$f={};function JZ(n){return n in $f||($f[n]={}),$f[n]}const tQ=rt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),eQ=600;function nQ(){return rt().global.screen==null?1024:rt().global.screen.height*rt().global.screen.width*window.devicePixelRatio*eQ/1024/1024}class sg extends P0{nextDataId(){return sg.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!rt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof Bb)e=t;else{const s=Ia(rt().getNumber("WEBGL_VERSION"),t);e=new Bb(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Ia(rt().getNumber("WEBGL_VERSION"));e=new Bb(s),this.binaryCache=JZ(rt().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new FZ(this.gpgpu),this.numMBBeforeWarning=nQ(),this.texData=new O2(this,Ys())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,s,a,r,i){const l=this.makeTensorInfo(e,s),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:t,texShape:[a,r]},u.texShape=[a,r];const h=Cf(e),f=new l2(h,!1,i),p=this.runWebGLProgram(f,[l],s,[[a,r]]);return p.shape=e,u.texture=null,this.disposeIntermediateTensorInfo(l),p.dataId}write(t,e,s){if((rt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||rt().getBool("DEBUG"))&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:e,dtype:s,values:t,usage:Es.UPLOAD,refCount:1}),a}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,s,a,r){if(rt().getBool("DEBUG")&&this.checkNumericalProblems(e),a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:a,values:e,usage:Es.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:s,dtype:a,complexTensorInfos:r,slice:i,shape:l,isPacked:u}=e;if(i!=null){let m;u?m=new ni(l,Jr):m=new Va(l,Jr);const y=this.runWebGLProgram(m,[{dataId:t,shape:l,dtype:a}],a),b=this.readSync(y.dataId);return this.disposeIntermediateTensorInfo(y),b}if(s!=null)return this.convertAndCacheOnCPU(t);if(a==="string")return s;const h=this.activeTimers!=null;let f;h&&(f=Qn());let p;if(a==="complex64"){const m=this.readSync(r.real.dataId),y=this.readSync(r.imag.dataId);p=Nr(m,y)}else p=this.getValuesFromTexture(t);return h&&(this.downloadWaitMs+=Qn()-f),this.convertAndCacheOnCPU(t,p)}async read(t){if(this.pendingRead.has(t)){const b=this.pendingRead.get(t);return new Promise(w=>b.push(w))}const e=this.texData.get(t),{values:s,shape:a,slice:r,dtype:i,complexTensorInfos:l,isPacked:u}=e;if(r!=null){let b;u?b=new ni(a,Jr):b=new Va(a,Jr);const w=this.runWebGLProgram(b,[{dataId:t,shape:a,dtype:i}],i),v=this.read(w.dataId);return this.disposeIntermediateTensorInfo(w),v}if(s!=null)return this.convertAndCacheOnCPU(t);if(rt().getBool("DEBUG")&&!rt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&rt().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let h=null,f;if(i!=="complex64"&&rt().get("WEBGL_BUFFER_SUPPORTED")){f=this.decode(t);const b=this.texData.get(f.dataId);h=this.gpgpu.createBufferFromTexture(b.texture.texture,...wf(a))}this.pendingRead.set(t,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(i==="complex64"){const b=await Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),w=b[0],v=b[1];p=Nr(w,v)}else if(h==null)p=this.getValuesFromTexture(t);else{const b=ht(a);p=this.gpgpu.downloadFloat32MatrixFromBuffer(h,b)}if(f!=null&&this.disposeIntermediateTensorInfo(f),h!=null){const b=this.gpgpu.gl;$t(b,()=>b.deleteBuffer(h))}const m=this.convertAndCacheOnCPU(t,p),y=this.pendingRead.get(t);return this.pendingRead.delete(t),y.forEach(b=>b(m)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Ys().removeDataId(t,this),this.pendingDeletes--),m}readToGPU(t,e={}){const s=this.texData.get(t),{values:a,shape:r,slice:i,dtype:l,isPacked:u,texture:h}=s;if(l==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let y;u?y=new ni(r,Jr):y=new Va(r,Jr);const b=this.runWebGLProgram(y,[{dataId:t,shape:r,dtype:l}],l),w=this.readToGPU(b,e);return this.disposeIntermediateTensorInfo(b),w}if(h==null)throw a!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const f=this.decode(t,e.customTexShape),p=Ys().makeTensorFromTensorInfo(f),m=this.texData.get(f.dataId);return Object.assign({tensorRef:p},m.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(a=>oi(a));return Ht(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ht(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const s=t[e];if(!r9(s))throw rt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:s,isPacked:a}=this.texData.get(t),r=ht(e);if(rt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const m=this.decode(t),y=this.texData.get(m.dataId),b=this.gpgpu.downloadMatrixFromPackedTexture(y.texture.texture,...wf(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(m),b}const i=rt().getBool("WEBGL_PACK")&&a===!0,l=i?Cf(e):e,u=i?new wY(l):new vY(l),h=this.runWebGLProgram(u,[{shape:l,dtype:s,dataId:t}],"float32"),f=this.texData.get(h.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(f.texture.texture,f.texShape[0],f.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(h),p}timerAvailable(){return rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,s=[];let a=!1;this.programTimersStack==null?(this.programTimersStack=s,a=!0):this.activeTimers.push(s),this.activeTimers=s,t();const r=fo(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=fo(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=e,a&&(this.programTimersStack=null);const l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(r);l.kernelMs=xF(u),l.getExtraProfileInfo=()=>u.map((h,f)=>({name:i[f],ms:h})).map(h=>`${h.name}: ${h.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Qn(),endMs:null}}endTimer(t){return rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Qn(),t)}async getQueryTime(t){if(rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:s}=this.texData.get(t);return s!=null&&(this.disposeData(s.real.dataId,e),this.disposeData(s.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:s,texShape:a,usage:r,isPacked:i,slice:l}=this.texData.get(t),u=l&&l.origDataId||t,h=this.dataRefCount.get(u);h>1?this.dataRefCount.set(u,h-1):(this.dataRefCount.delete(u),e!=null&&(this.numBytesInGPU-=this.computeBytes(a,s),this.textureManager.releaseTexture(e,a,r,i)));const f=this.texData.get(t);f.texture=null,f.texShape=null,f.isPacked=!1,f.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=tQ){return rt().getBool("WEBGL_CPU_FORWARD")&&t.every(s=>this.texData.get(s.dataId).texture==null&&ht(s.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Is("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return YZ(t.shape,e)}packedUnaryOp(t,e,s){const a=new ni(t.shape,e),r=this.compileAndRun(a,[t],s);return Ys().makeTensorFromTensorInfo(r)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const a=rD(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,a)}if(rt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,d2,t.dtype);const e=new Va(t.shape,d2),s=this.compileAndRun(e,[t]);return Ys().makeTensorFromTensorInfo(s)}makeTensorInfo(t,e,s){let a;if(e==="string"&&s!=null&&s.length>0&&Fc(s[0])){const r=s.map(i=>ai(i));a=this.write(r,t,e)}else a=this.write(s,t,e);return this.texData.get(a).usage=null,{dataId:a,shape:t,dtype:e}}makeOutput(t,e,s){return Ys().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,s),this)}unpackTensor(t){const e=new KZ(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new OZ(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const s=[Wl(t.shape),...Gl(t.shape)],a={dtype:t.dtype,shape:s,dataId:t.dataId},r=[Wl(e),...Gl(e)],i=new lD(r,s),l=!0,u=[s],h=this.runWebGLProgram(i,[a],t.dtype,u,l);return{dataId:h.dataId,shape:e,dtype:h.dtype}}decode(t,e){const s=this.texData.get(t),{isPacked:a,shape:r,dtype:i}=s;if(e!=null){const m=ht(r),y=e[0]*e[1]*4;O(m<=y,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const l=Cf(r);let u;a?u=new xY(l):u=new bY(l);const h=!0,f=[e??wf(l)],p=this.runWebGLProgram(u,[{shape:l,dtype:i,dataId:t}],i,f,h,e);return{dtype:i,shape:r,dataId:p.dataId}}runWebGLProgram(t,e,s,a,r=!1,i){const l=this.makeTensorInfo(t.outputShape,s),u=this.texData.get(l.dataId);if(t.packedOutput&&(u.isPacked=!0),t.outPackingScheme===Rc.DENSE){const S=i??wf(t.outputShape);u.texShape=S.map(C=>C*2)}if(t.outTexUsage!=null&&(u.usage=t.outTexUsage),ht(l.shape)===0)return u.values=Cn(l.dtype,0),l;const h=[],f=e.map(S=>{if(S.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let C=this.texData.get(S.dataId);if(C.texture==null){if(!t.packedInputs&&ht(S.shape)<=rt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:S.shape,texData:null,isUniform:!0,uniformValues:C.values};t.packedInputs&&(C.isPacked=!0,C.shape=S.shape)}if(this.uploadToGPU(S.dataId),!!C.isPacked!=!!t.packedInputs)S=C.isPacked?this.unpackTensor(S):this.packTensor(S),h.push(S),C=this.texData.get(S.dataId);else if(C.isPacked&&!cp(C.shape,S.shape)){const $=S,T=S.shape;S.shape=C.shape,S=this.packedReshape(S,T),h.push(S),C=this.texData.get(S.dataId),$.shape=T}return{shape:S.shape,texData:C,isUniform:!1}});this.uploadToGPU(l.dataId);const p={shape:l.shape,texData:u,isUniform:!1},m=yY(t,f,p),y=this.getAndSaveBinary(m,()=>mY(this.gpgpu,t,f,p)),b=this.activeTimers!=null;let w;b&&(w=this.startTimer()),rt().get("ENGINE_COMPILE_ONLY")||gY(this.gpgpu,y,f,p,a),h.forEach(S=>this.disposeIntermediateTensorInfo(S)),b&&(w=this.endTimer(w),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(w)}));const v=rt().getNumber("WEBGL_FLUSH_THRESHOLD");if(v>0){const S=Qn();S-this.lastGlFlushTime>v&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=S)}if(!rt().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&r===!1){const S=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),S}return l}compileAndRun(t,e,s,a,r=!1){return s=s||e[0].dtype,this.runWebGLProgram(t,e,s,a,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(rt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=nt(()=>{if(!rt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=rt().getBool("DEBUG");rt().set("DEBUG",!1);const e=this.abs(Lt(1e-8)).dataSync()[0];if(rt().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?ZZ:QZ}uploadToGPU(t){const e=this.texData.get(t),{shape:s,dtype:a,values:r,texture:i,usage:l,isPacked:u}=e;if(i!=null)return;const h=this.activeTimers!=null;let f;h&&(f=Qn());let p=e.texShape;if(p==null&&(p=N9(s,u),e.texShape=p),r!=null){const m=Cf(s);let y,b=p[1],w=p[0];const v=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(u||!v)&&([b,w]=eu(p[0],p[1])),u?y=new NY(m,v):y=new l2(m,v);const S=v?[w,b]:p,C=this.makeTensorInfo(S,a),$=this.texData.get(C.dataId);v?$.usage=Es.PIXELS:$.usage=Es.UPLOAD,$.texShape=S,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(C.dataId),b,w,r);const T=[[w,b]],D=this.runWebGLProgram(y,[C],a,T,!0),z=this.texData.get(D.dataId);e.texShape=z.texShape,e.isPacked=z.isPacked,e.usage=z.usage,rt().get("ENGINE_COMPILE_ONLY")?this.disposeData(D.dataId):(e.texture=z.texture,e.values=null,this.texData.delete(D.dataId)),this.disposeIntermediateTensorInfo(C),h&&(this.uploadWaitMs+=Qn()-f)}else{const m=this.acquireTexture(p,l,a,u);e.texture=m}}convertAndCacheOnCPU(t,e){const s=this.texData.get(t),{dtype:a}=s;return e!=null&&(s.values=sQ(e,a)),s.values}acquireTexture(t,e,s,a){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,a)}computeBytes(t,e){return t[0]*t[1]*Bf(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const s=new Promise(a=>{try{this.checkCompletion_(e),a(!0)}catch(r){throw r}});t.push(s)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await qk(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(jR(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);const{variablesLocations:e,customUniformLocations:s,infLoc:a,nanLoc:r,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}=QR(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=s,t.infLoc=a,t.nanLoc=r,t.outShapeLocation=i,t.outShapeStridesLocation=l,t.outTexShapeLocation=u}}createTensorFromGPUData(t,e,s){t.channels=t.channels||"RGBA";const{texture:a,height:r,width:i,channels:l}=t,u=Ys().backend;if(!u.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const h=u.writeTexture(a,e,s,r,i,l);return Ys().makeTensorFromDataId(h,e,s,u)}}sg.nextDataId=0;function sQ(n,t){if(t==="float32"||t==="complex64")return n;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}else throw new Error(`Unknown dtype ${t}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */t$()&&s$("webgl",()=>new sg,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qv=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class To{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=Pt(e,s),this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fo=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class iu{constructor(t,e,s,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Pt(e,s);const r=this.outputShape.length;this.enableShapeUniforms=Ln(r);let i="";if(a)if(r===0||ht(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${ge(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=Wn("coords",r);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${u[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${u[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${u[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${u[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ys(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const aQ={kernelName:nh,backendName:"webgl",kernelFunc:ys};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ii(n){const{inputs:t,backend:e}=n,{real:s,imag:a}=t,r=e.makeTensorInfo(s.shape,"complex64"),i=e.texData.get(r.dataId),l=ys({inputs:{x:s},backend:e}),u=ys({inputs:{x:a},backend:e});return i.complexTensorInfos={real:l,imag:u},r}const rQ={kernelName:Z0,backendName:"webgl",kernelFunc:Ii};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uD="return (a < 0.) ? b * a : a;",cD=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function iQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{alpha:r}=s,i=e.makeTensorInfo([],"float32",bi(r,"float32")),l=rt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new iu(cD,a.shape,i.shape):new To(uD,a.shape,i.shape),u=e.runWebGLProgram(l,[a,i],"float32");return e.disposeIntermediateTensorInfo(i),u}const oQ={kernelName:Lp,backendName:"webgl",kernelFunc:iQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hD="return (a < 0.) ? b * a : a;",dD=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function lQ(n){const{inputs:t,backend:e}=n,{x:s,alpha:a}=t,r=rt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new iu(dD,s.shape,a.shape):new To(hD,s.shape,a.shape);return e.runWebGLProgram(r,[s,a],"float32")}const uQ={kernelName:em,backendName:"webgl",kernelFunc:lQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ou="if (isnan(x)) return x;";function oe({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:a,backend:r})=>{const{x:i}=a,l=r,u=s||i.dtype;if(l.shouldExecuteOnCPU([i])&&e!=null){const p=l.texData.get(i.dataId),m=e(p.values,u);return l.makeTensorInfo(i.shape,u,m)}const h=rt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let f;return h?f=new ni(i.shape,t):f=new Va(i.shape,n),l.runWebGLProgram(f,[i],u)}}function En({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:a,dtype:r}){return({inputs:i,backend:l})=>{const{a:u,b:h}=i,f=l;if(s&&u.dtype==="complex64"){const b=f.texData.get(u.dataId),w=f.texData.get(h.dataId),[v,S]=[[b.complexTensorInfos.real,w.complexTensorInfos.real],[b.complexTensorInfos.imag,w.complexTensorInfos.imag]].map($=>{const[T,I]=$,D={dataId:T.dataId,dtype:T.dtype,shape:u.shape},z={dataId:I.dataId,dtype:I.dtype,shape:h.shape},B=new To(n,u.shape,h.shape);return f.runWebGLProgram(B,[D,z],ds(T.dtype,I.dtype))}),C=Ii({inputs:{real:v,imag:S},backend:f});return f.disposeIntermediateTensorInfo(v),f.disposeIntermediateTensorInfo(S),C}const p=r||ds(u.dtype,h.dtype);if((u.dtype==="string"||h.dtype==="string"||f.shouldExecuteOnCPU([u,h]))&&a!=null){const b=f.texData.get(u.dataId).values,w=f.texData.get(h.dataId).values,v=u.dtype==="string"?Cr(b):b,S=u.dtype==="string"?Cr(w):w,[C,$]=a(u.shape,h.shape,v,S,p),T=f.makeTensorInfo($,p),I=f.texData.get(T.dataId);return I.values=C,T}const m=rt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let y;return m?y=new iu(t,u.shape,h.shape,e):y=new To(n,u.shape,h.shape),f.runWebGLProgram(y,[u,h],p)}}function Dc(n,t=!1){if(n==="linear")return t?GZ:BZ;if(n==="relu")return t?qZ:PZ;if(n==="elu")return t?HZ:VZ;if(n==="relu6")return t?jZ:UZ;if(n==="prelu")return t?dD:hD;if(n==="leakyrelu")return t?cD:uD;if(n==="sigmoid")return t?XZ:WZ;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fD{constructor(t,e,s,a=!1,r=!1,i=!1,l=null,u=!1,h=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Ln(this.outputShape.length);const f=a?t[1]:t[2],p=Math.ceil(f/2),m=a?"i * 2, rc.y":"rc.y, i * 2",y=r?"rc.z, i * 2":"i * 2, rc.z",b=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],w=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let v="",S="";l&&(u?v=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${l}
        }`:h?v=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${l}
        }`:v=`vec4 activation(vec4 x) {
          ${l}
        }`,S="result = activation(result);");const C=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),h&&this.variableNames.push("leakyreluAlpha");let $="rc.x",T="rc.x";t[0]<e[0]?$=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(T=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${v}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${$};
        int batchB = ${T};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${y});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${b[0]} * ${w[0]});
          result += (${b[1]} * ${w[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${C}

        ${S}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f2={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class p2{constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Pt(e,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m2="return a * b;";function jv(n){const{inputs:t,backend:e}=n,{a:s,b:a}=t,r=ds(s.dtype,a.dtype);if(s.dtype==="complex64"){const l=e.texData.get(s.dataId),u=e.texData.get(a.dataId),h=new p2(f2.REAL,s.shape,a.shape),f=new p2(f2.IMAG,s.shape,a.shape),p=[{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:s.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:a.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:a.shape}],m=e.runWebGLProgram(h,p,"float32"),y=e.runWebGLProgram(f,p,"float32"),b=Ii({inputs:{real:m,imag:y},backend:e});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),b}if(e.shouldExecuteOnCPU([s,a])){const l=e.texData.get(s.dataId),u=e.texData.get(a.dataId),[h,f]=lZ(s.shape,a.shape,l.values,u.values,r),p=e.makeTensorInfo(f,r),m=e.texData.get(p.dataId);return m.values=h,p}let i;return rt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new iu(m2,s.shape,a.shape):i=new To(m2,s.shape,a.shape),e.runWebGLProgram(i,[s,a],r)}const cQ={kernelName:hh,backendName:"webgl",kernelFunc:jv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hQ(n,t,e){const s=[Wl(n.shape),...Gl(n.shape)],a={dtype:n.dtype,shape:s,dataId:n.dataId},r=[Wl(t),...Gl(t)],i=new lD(r,s),l=!0,u=[s],h=e.runWebGLProgram(i,[a],n.dtype,u,l);return{dataId:h.dataId,shape:t,dtype:h.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function St(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{shape:r}=s,i=e,l=ht(a.shape),u=_2(r,l),h=ht(u);O(l===h,()=>`The new shape (${u}) has ${h} elements and the old shape (${a.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`);const f=i.texData.get(a.dataId);return f.isPacked&&!cp(a.shape,u)&&!(f.texture!==null&&cp(f.shape,u))?hQ(a,u,i):(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype})}const dQ={kernelName:sm,backendName:"webgl",kernelFunc:St};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g2{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:a,inSize:r,outSize:i}=t;this.outputShape=[a,i];const l=Math.floor(s/4)*4,u=s%4;let h="sumValue += dot(values, ones);";if(e!=null){const p=1/e;h=`sumValue += dot(values * ${Ol(p)?p.toPrecision(2):p}, ones);`}let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${h}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${h}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${h}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fQ{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:a,inSize:r,outSize:i}=t;this.outputShape=[a,i];let l="0.0",u="";e==="prod"?l="1.0":e==="min"?(l="1.0 / 1e-20",u="min"):e==="max"&&(l="-1.0 / 1e-20",u="max");let h=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?h="sumValue":e==="prod"?h="prodValue":e==="all"?h="allValue":e==="any"&&(h="anyValue");const f=Math.floor(s/4)*4,p=s%4;let m=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,y="vec4";e==="all"?(l="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,y="bvec4"):e==="any"&&(l="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,y="bvec4");let b="";r%s>0&&(b=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${l};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${b}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${l});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${f}; i += 4) {
          int inIdx = inOffset + i;
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${f};
        if (${p===1}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${h});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pQ(n){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:n[1],s=Pm(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}function Lo(n,t,e,s){const a=pQ(n.shape);let r=n;for(let i=0;i<a.length;i++){const{inSize:l,windowSize:u,outSize:h}=a[i];let f,p;e==="mean"?f=i===0?new g2({windowSize:u,inSize:l,batchSize:n.shape[0],outSize:h},l):new g2({windowSize:u,inSize:l,batchSize:n.shape[0],outSize:h}):f=new fQ({windowSize:u,inSize:l,batchSize:n.shape[0],outSize:h},e),p=r,r=s.runWebGLProgram(f,[r],t),p.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(p)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mQ{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let i=0;i<s.length;i++)s[i]=t[e[i]];this.outputShape=s,this.rank=s.length;const a=ge(this.rank),r=gQ(e);this.userCode=`
    void main() {
      ${a} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function gQ(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let a=0;a<n.length;a++)s[n[a]]=e[a];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yQ{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let f=0;f<s.length;f++)s[f]=t[e[f]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=ge(this.rank),r=oD("rc",this.rank),i=new Array(this.rank);for(let f=0;f<e.length;f++)i[e[f]]=r[f];const l=`vec2(${i.slice(-2).join()})`,u=`++${r[this.rank-1]} < ${s[this.rank-1]}`,h=`getChannel(getA(${i.join()}), ${l})`;this.userCode=`
    void main() {
      ${a} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${h};
      if(${u}) {
        result[1] = ${h};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${h};
        if(${u}) {
          result[3] = ${h};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ag(n,t,e){const s=rt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yQ(n.shape,t):new mQ(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bQ(n,t,e,s){const a=t,r=n.shape.length,i=jt(a,n.shape);let l=i;const u=_e(l,r),h=u!=null;let f=n;h&&(f=ag(n,u,s),l=je(l.length,r)),kn("sum",l,r);const[p,m]=yn(f.shape,l);let y=p;e&&(y=qe(p,i));const b=ht(m),v=ht(n.shape)/b,S=St({inputs:{x:f},attrs:{shape:[v,b]},backend:s}),C=Kx(n.dtype),$=Lo(S,C,"sum",s),T=St({inputs:{x:$},attrs:{shape:y},backend:s});return s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo($),h&&s.disposeIntermediateTensorInfo(f),T}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rg(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;return bQ(a,r,i,e)}const xQ={kernelName:um,backendName:"webgl",kernelFunc:rg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hn(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{perm:r}=s,i=e,l=a.shape.length,u=new Array(l);for(let f=0;f<u.length;f++)u[f]=a.shape[r[f]];let h;if(i.shouldExecuteOnCPU([a])){const p=i.texData.get(a.dataId).values,m=Hv(p,a.shape,a.dtype,r,u);h=i.makeTensorInfo(u,a.dtype);const y=i.texData.get(h.dataId);y.values=m}else h=ag(a,r,i);return h}const vQ={kernelName:kl,backendName:"webgl",kernelFunc:Hn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pD=1e3;function hp({a:n,b:t,transposeA:e,transposeB:s,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:l=0,activation:u=null}){const h=n.shape.length,f=t.shape.length,p=e?n.shape[h-2]:n.shape[h-1],m=s?t.shape[f-1]:t.shape[f-2],y=e?n.shape[h-1]:n.shape[h-2],b=s?t.shape[f-2]:t.shape[f-1],w=n.shape.slice(0,-2),v=t.shape.slice(0,-2),S=ht(w),C=ht(v),T=Pt(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([y,b]);O(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const I=e?[S,p,y]:[S,y,p],D=s?[C,b,m]:[C,m,b],z=St({inputs:{x:n},backend:a,attrs:{shape:I}}),B=St({inputs:{x:t},backend:a,attrs:{shape:D}}),R=[z,B],_=Math.max(S,C),A=e?z.shape[1]:z.shape[2],W=r!=null,K=i!=null,tt=u==="leakyrelu",Q=u!=null?Dc(u,!0):null,P=W||K||tt||Q!=null;let et;if((y===1||b===1)&&A>pD&&P===!1){let at=z,M=B;e&&(at=Hn({inputs:{x:z},backend:a,attrs:{perm:[0,2,1]}}),R.push(at)),s&&(M=Hn({inputs:{x:B},backend:a,attrs:{perm:[0,2,1]}}),R.push(M));const j=b!==1,lt=b===1;let ot=at;j&&(ot=St({inputs:{x:at},backend:a,attrs:{shape:[_,A,1]}}),R.push(ot));const ut=b===1?2:1;let mt=M;lt&&(mt=St({inputs:{x:M},backend:a,attrs:{shape:[_,1,A]}}),R.push(mt));const bt=jv({inputs:{a:ot,b:mt},backend:a});et=rg({inputs:{x:bt},backend:a,attrs:{axis:ut,keepDims:!0}}),R.push(bt)}else{const at=ds(n.dtype,t.dtype),M=new fD(I,D,[_,y,b],e,s,W,Q,K,tt),j=[z,B];if(r!=null&&j.push(r),K&&j.push(i),tt){const lt=a.makeTensorInfo([],"float32",bi(l,"float32"));j.push(lt),R.push(lt)}et=a.runWebGLProgram(M,j,at)}const Y=St({inputs:{x:et},backend:a,attrs:{shape:T}});R.push(et);for(const at of R)a.disposeIntermediateTensorInfo(at);return Y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wQ(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r,bias:i,preluActivationWeights:l}=t,{transposeA:u,transposeB:h,activation:f,leakyreluAlpha:p}=s;return hp({a,b:r,transposeA:u,transposeB:h,backend:e,bias:i,preluActivationWeights:l,leakyreluAlpha:p,activation:f})}const SQ={kernelName:Vf,backendName:"webgl",kernelFunc:wQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y2="return abs(x);";function NQ(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const r=e.texData.get(s.dataId),i=rD(r.values);return e.makeTensorInfo(s.shape,s.dtype,i)}let a;return rt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new ni(s.shape,y2):a=new Va(s.shape,y2),e.runWebGLProgram(a,[s],s.dtype)}const CQ={kernelName:pp,backendName:"webgl",kernelFunc:NQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TQ=ca+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,$Q=oe({opSnippet:TQ}),kQ={kernelName:Lc,backendName:"webgl",kernelFunc:$Q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IQ=ca+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,EQ=oe({opSnippet:IQ}),AQ={kernelName:zc,backendName:"webgl",kernelFunc:EQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b2="return a + b;",RQ=En({opSnippet:b2,packedOpSnippet:b2,supportsComplex:!0,cpuKernelImpl:PY}),DQ={kernelName:Xl,backendName:"webgl",kernelFunc:RQ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OQ{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`float v${r} = get${r}AtOutCoords();`)});const a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _Q{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`vec4 v${r} = get${r}AtOutCoords();`)});const a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mf(n){const{inputs:t,backend:e}=n,s=t;if(s.length===1)return ys({inputs:{x:s[0]},backend:e});if(s.length>rt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(s.length/2),h=Mf({inputs:s.slice(0,u),backend:e}),f=Mf({inputs:s.slice(u),backend:e});return Mf({inputs:[h,f],backend:e})}const a=s.map(u=>u.dtype).reduce((u,h)=>ds(u,h)),r=s.map(u=>u.shape),l=rt().getBool("WEBGL_PACK")?new _Q(s[0].shape,r):new OQ(s[0].shape,r);return e.runWebGLProgram(l,s,a)}const FQ={kernelName:mp,backendName:"webgl",kernelFunc:Mf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=jt(r,a.shape);let h=u;const f=_e(h,l);let p=a;f!=null&&(p=Hn({inputs:{x:a},backend:e,attrs:{perm:f}}),h=je(h.length,l)),kn("all",h,l);const[m,y]=yn(p.shape,h),b=ht(y),w=St({inputs:{x:p},backend:e,attrs:{shape:[-1,b]}}),v=Lo(w,w.dtype,"all",e);let S;if(i){const C=qe(m,u);S=St({inputs:{x:v},backend:e,attrs:{shape:C}})}else S=St({inputs:{x:v},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(v),f!=null&&e.disposeIntermediateTensorInfo(p),S}const zQ={kernelName:H0,backendName:"webgl",kernelFunc:LQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=jt(r,a.shape);let h=u;const f=_e(h,l);let p=a;f!=null&&(p=Hn({inputs:{x:a},backend:e,attrs:{perm:f}}),h=je(h.length,l)),kn("any",h,l);const[m,y]=yn(p.shape,h),b=ht(y),w=St({inputs:{x:p},backend:e,attrs:{shape:[-1,b]}}),v=Lo(w,w.dtype,"any",e);let S;if(i){const C=qe(m,u);S=St({inputs:{x:v},backend:e,attrs:{shape:C}})}else S=St({inputs:{x:v},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(v),f!=null&&e.disposeIntermediateTensorInfo(p),S}const BQ={kernelName:q0,backendName:"webgl",kernelFunc:MQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VQ{constructor(t,e,s){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:i}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const l=e==="max"?">":"<",u=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${a}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${l} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PQ{constructor(t,e,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,O(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const r=t[t.length-1],i=Math.ceil(r/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),a||this.variableNames.push("bestIndicesA");const l=this.outputShape,u=l.length,h=ge(u),f=Wn("coords",u);let p,m;if(i===1){m=u+1;const B=ge(m);p=`
        ${B} sourceLocR = ${B}(${f.join()}, 0);
        ++${f[u-1]};
        ${B} sourceLocG = ${B}(${f.join()}, 0);
        ++${f[u-2]};
        ${B} sourceLocA = ${B}(${f.join()}, 0);
        --${f[u-1]};
        ${B} sourceLocB = ${B}(${f.join()}, 0);
        --${f[u-2]};`}else m=u,p=`
        ${h} sourceLocR = coords;
        ++${f[u-1]};
        ${h} sourceLocG = coords;
        ++${f[u-2]};
        ${h} sourceLocA = coords;
        --${f[u-1]};
        ${h} sourceLocB = coords;
        --${f[u-2]};`;const y=["x","y","z","w","u","v"].slice(0,m),b="."+y[m-1],w=y.map(B=>"int "+B),v=Wn("sourceLocR",m-1).concat("inIdx.r"),S=Wn("sourceLocG",m-1).concat("inIdx.g"),C=Wn("sourceLocB",m-1).concat("inIdx.b"),$=Wn("sourceLocA",m-1).concat("inIdx.a"),T=s==="max"?"greaterThan":"lessThan",I=a?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${v.join()}),
                             getBestIndicesAChannel(${S.join()}),
                             getBestIndicesAChannel(${C.join()}),
                             getBestIndicesAChannel(${$.join()})));`,D=`vec4(
            getAChannel(${v.join()}),
            hasNextCol ? getAChannel(${S.join()}) : 0.,
            hasNextRow ? getAChannel(${C.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${$.join()}) : 0.)`,z=a?"":`
      float getBestIndicesAChannel(${w.join()}) {
        return getChannel(getBestIndicesA(${y.join()}),
                                          vec2(${y.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${w.join()}) {
        return getChannel(getA(${y.join()}),
                               vec2(${y.slice(-2).join()}));
      }
      ${z}
      void main() {
        ${h} coords = getOutputCoords();
        bool hasNextCol = ${f[u-1]} < ${l[u-1]-1};
        bool hasNextRow = ${f[u-2]} < ${l[u-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${b}, sourceLocG${b},
          sourceLocB${b}, sourceLocA${b}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${D};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${D};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${T}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mD(n,t,e,s=null){let a=t.shape[0],r=t.shape[1];s!=null&&(a=s.shape[0],r=s.shape[1]);const i=Pm(r),l={windowSize:i,inSize:r,batchSize:a,outSize:Math.ceil(r/i)},u=new VQ(l,e,s==null),h=[t];s!=null&&h.push(s);const f=n.runWebGLProgram(u,h,"int32");if(f.shape[1]===1)return f;const p=mD(n,t,e,f);return n.disposeIntermediateTensorInfo(f),p}function gD(n,t,e,s=null){const a=s!=null?s.shape:t.shape,r=a[a.length-1],i=Pm(r),l=new PQ(a,i,e,s==null),u=s==null?[t]:[t,s],h=n.runWebGLProgram(l,u,"int32");if(h.shape.length===t.shape.length){const f=gD(n,t,e,h);return n.disposeIntermediateTensorInfo(h),f}return h}function yD(n,t,e,s){const a=[e];if(kn("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,t.shape.length),!rt().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const r=[],i=n.texData.get(t.dataId),l=i!==null&&i.isPacked;let u=t;l&&(u=n.unpackTensor(t),r.push(u));const[h,f]=yn(u.shape,a),p=ht(f),m=St({inputs:{x:u},backend:n,attrs:{shape:[-1,p]}});r.push(m);const y=mD(n,m,s);r.push(y);const b=St({inputs:{x:y},backend:n,attrs:{shape:h}});return r.forEach(w=>n.disposeIntermediateTensorInfo(w)),b}return gD(n,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;let i=jt(r,a.shape);const l=_e(i,a.shape.length);let u=a;const h=[];l!=null&&(u=Hn({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=je(i.length,u.shape.length)),kn("argMax",[i[0]],u.shape.length);const f=yD(e,u,i[0],"max");return h.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const WQ={kernelName:gp,backendName:"webgl",kernelFunc:UQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;let i=jt(r,a.shape);const l=_e(i,a.shape.length);let u=a;const h=[];l!=null&&(u=Hn({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=je(i.length,u.shape.length)),kn("argMin",[i[0]],u.shape.length);const f=yD(e,u,i[0],"min");return h.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const HQ={kernelName:yp,backendName:"webgl",kernelFunc:GQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qQ=ca+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,jQ=oe({opSnippet:qQ}),XQ={kernelName:Mc,backendName:"webgl",kernelFunc:jQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KQ=ca+"return log(x + sqrt(x * x + 1.0));",YQ=oe({opSnippet:KQ}),ZQ={kernelName:Bc,backendName:"webgl",kernelFunc:YQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QQ=ca+`
  return atan(x);
`,JQ=oe({opSnippet:QQ}),tJ={kernelName:Vc,backendName:"webgl",kernelFunc:JQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eJ=qv+`
  return atan(a, b);
`,nJ=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Fo+`
  return result;
`,sJ=En({opSnippet:eJ,packedOpSnippet:nJ}),aJ={kernelName:Uc,backendName:"webgl",kernelFunc:sJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rJ=ca+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,iJ=oe({opSnippet:rJ}),oJ={kernelName:Pc,backendName:"webgl",kernelFunc:iJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oc{constructor(t,e,s,a=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,l=t.strideHeight,u=t.strideWidth,h=t.dilationHeight,f=t.dilationWidth,p=t.effectiveFilterHeight,m=t.effectiveFilterWidth,y=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const w=e==="avg",v=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,S=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let C="0.0";if(w||(C="-1.0 / 1e-20"),s){const B=">=";this.userCode=`
        const ivec2 strides = ivec2(${l}, ${u});
        const ivec2 pads = ivec2(${y}, ${b});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${f}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${B} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${a?r?v:S:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const $="max";let T=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(T="avgValue / max(count, 1.0)");const I=Math.floor(i/4)*4,D=i%4,z=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${$}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${y}, ${b});
      const float initializationValue = ${C};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${C});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${h}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${f};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${f}, d),
              getValue(batch, xR, xC + 2 * ${f}, d),
              getValue(batch, xR, xC + 3 * ${f}, d)
            );

            ${z}
          }

          int xC = xCCorner + ${I};
          if (${D===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${z}
          } else if (${D===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${f}, d),
              initializationValue,
              initializationValue
            );

            ${z}
          } else if (${D===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${f}, d),
              getValue(batch, xR, xC + 2 * ${f}, d),
              initializationValue
            );

            ${z}
          }
        }
        setOutput(${T});
      }
    `}}class Xv{constructor(t,e,s,a=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,l=t.strideDepth,u=t.strideHeight,h=t.strideWidth,f=t.dilationDepth,p=t.dilationHeight,m=t.dilationWidth,y=t.effectiveFilterDepth,b=t.effectiveFilterHeight,w=t.effectiveFilterWidth,v=t.padInfo.front,S=t.padInfo.top,C=t.padInfo.left;this.outputShape=t.outShape;const $=e==="avg";let T="0.0";if($||(T="-1.0 / 1e-20"),s){const _=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${l}, ${u}, ${h});
        const ivec3 pads = ivec3(${v}, ${S}, ${C});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${y};
              wD += ${f}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${b};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${w};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${_} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${a?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${b} * ${w} +
                      wR * ${w} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let D=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(D="avgValue / max(count, 1.0)");const z=Math.floor(i/4)*4,B=i%4,R=`
      if (${$}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${l}, ${u}, ${h});
      const ivec3 pads = ivec3(${v}, ${S}, ${C});
      const float initializationValue = ${T};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${T});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${y};
            wD += ${f}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${b};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${z}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${R}
            }

            int xC = xCCorner + ${z};
            if (${B===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${B===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${B===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${R}
            }
          }
        }
        setOutput(${D});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lJ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;Qh(a,"avgPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;O($n(i,h),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const f=la(a.shape,r,i,h,l,u);if(f.filterWidth===1&&f.filterHeight===1&&Jt(f.inShape,f.outShape))return ys({inputs:{x:a},backend:e});const p=new Oc(f,"avg",!1);return e.runWebGLProgram(p,[a],"float32")}const uJ={kernelName:bp,backendName:"webgl",kernelFunc:lJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cJ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u,dataFormat:h}=s,f=[1,1,1],p=Tr(a.shape,r,i,f,l,u,h),m=new Xv(p,"avg",!1);return e.runWebGLProgram(m,[a],"float32")}const hJ={kernelName:xp,backendName:"webgl",kernelFunc:cJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dJ{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,a=t.strideHeight,r=t.strideWidth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,f=u-1-t.padInfo.top,p=h-1-t.padInfo.left,m=1/(e*s);this.userCode=`
      const ivec2 pads = ivec2(${f}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${h};
            wC+= ${l}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class fJ{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,a=t.filterWidth,r=t.strideDepth,i=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,f=t.dilationWidth,p=t.effectiveFilterDepth,m=t.effectiveFilterHeight,y=t.effectiveFilterWidth,b=p-1-t.padInfo.front,w=m-1-t.padInfo.top,v=y-1-t.padInfo.left,S=1/(e*s*a);this.userCode=`
      const ivec3 pads = ivec3(${b}, ${w}, ${v});
      const float avgMultiplier = float(${S});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${h}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${y};
                wC += ${f}) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pJ(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r,{filterSize:l,strides:u,pad:h,dimRoundingMode:f}=s,p=[1,1,1],m=Tr(i.shape,l,u,p,h,f),y=new fJ(m);return e.runWebGLProgram(y,[a],i.dtype)}const mJ={kernelName:X0,backendName:"webgl",kernelFunc:pJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gJ(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r;Qh([a,r],"avgPoolGrad");const{filterSize:l,strides:u,pad:h}=s,f=la(i.shape,l,u,1,h),p=new dJ(f);return e.runWebGLProgram(p,[a],i.dtype)}const yJ={kernelName:j0,backendName:"webgl",kernelFunc:gJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bJ(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r}=t,{transposeA:i,transposeB:l}=s;return hp({a,b:r,transposeA:i,transposeB:l,backend:e})}const xJ={kernelName:vp,backendName:"webgl",kernelFunc:bJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vJ{constructor(t,e,s,a,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Pt(t,e),Pt(t,s);let l="0.0";a!=null&&(Pt(t,a),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let u="1.0";r!=null&&(Pt(t,r),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${l};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wJ{constructor(t,e,s,a,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Pt(t,e),Pt(t,s);let l="vec4(0.0)";a!=null&&(Pt(t,a),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let u="vec4(1.0)";r!=null&&(Pt(t,r),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${l};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SJ=({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:a,variance:r,offset:i,scale:l}=n;O(a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),O(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),O(l==null||a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=e;u==null&&(u=.001);const h=[s,a,r];let f=null;i!=null&&(f=i.shape,h.push(i));let p=null;l!=null&&(p=l.shape,h.push(l));const m=rt().getBool("WEBGL_PACK_NORMALIZATION")?new wJ(s.shape,a.shape,r.shape,f,p,u):new vJ(s.shape,a.shape,r.shape,f,p,u);return t.runWebGLProgram(m,h,h[0].dtype)},NJ={kernelName:Op,backendName:"webgl",kernelFunc:SJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CJ{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=ge(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=TJ(this.rank);let a;const r=t.map((i,l)=>`sourceLoc.${L0[l]} = start[${l}] + coords.${L0[l]};`);a=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${a}
        setOutput(getSource(${s}));
      }
    `}}const L0=["x","y","z","w","u","v"];function TJ(n){if(n===1)return"sourceLoc";if(n<=6)return L0.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $J{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=ge(this.rank),s=Wn("coords",this.rank),a=Wn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${a.slice(-2).join()})`,i=`getChannel(getSource(${a.join()}), ${r})`,l=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
        ++${a[this.rank-1]};
        result.y = ${i};
        --${a[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {
        ++${a[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
          ++${a[this.rank-1]};
          result.w = ${i};
        }
      }
    `,h=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((f,p)=>`start[${p}]`).join()});`:t.map((f,p)=>`${a[p]} = ${s[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${h}
        vec4 result = vec4(0.);
        ${l}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kJ(n,t,e,s){const a=s.texData.get(n.dataId),r=s.makeTensorInfo(e,n.dtype),i=s.texData.get(r.dataId);Object.assign(i,a),i.refCount=1,i.shape=e,i.dtype=n.dtype;let l=U1(t,Ft(n.shape));a.slice&&(l+=a.slice.flatOffset),i.slice={flatOffset:l,origDataId:a.slice&&a.slice.origDataId||n.dataId};const u=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,u+1),r}function lu(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,size:i}=s,[l,u]=Vm(a,r,i);if(B1(a,l,u),ht(u)===0)return e.makeTensorInfo(u,a.dtype,[]);if(e.shouldExecuteOnCPU([a])||a.dtype==="string"){const p=e.texData.get(a.dataId),m=xZ(p.values,l,u,a.shape,a.dtype);return e.makeTensorInfo(u,a.dtype,m)}const{isPacked:h}=e.texData.get(a.dataId),f=P1(a.shape,l,u);if(h||!f){const p=rt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $J(u):new CJ(u),m=[l];return e.runWebGLProgram(p,[a],a.dtype,m)}return e.uploadToGPU(a.dataId),kJ(a,l,u,e)}const IJ={kernelName:lm,backendName:"webgl",kernelFunc:lu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EJ=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,crops:i}=s;O(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const l=r.reduce((C,$)=>C*$),u=Bh(a.shape,r,l),h=Vh(u.length,r.length),f=Ph(a.shape,r,l),p=j1(i,r.length),m=X1(f,i,r.length),y=[],b=St({inputs:{x:a},backend:e,attrs:{shape:u}}),w=Hn({inputs:{x:b},backend:e,attrs:{perm:h}}),v=St({inputs:{x:w},backend:e,attrs:{shape:f}}),S=lu({inputs:{x:v},backend:e,attrs:{begin:p,size:m}});return y.push(b),y.push(w),y.push(v),y.forEach(C=>e.disposeIntermediateTensorInfo(C)),S},AJ={kernelName:wp,backendName:"webgl",kernelFunc:EJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RJ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i}=s,l=e.readSync(a.dataId),u=e.readSync(r.dataId),h=aD(l,u,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,h)}const DJ={kernelName:K0,backendName:"webgl",kernelFunc:RJ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OJ=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,_J=`
  return float(int(a.r) & int(b.r));
`;function FJ(n){const{inputs:t,backend:e}=n,{a:s,b:a}=t,r=rt().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=rt().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([s,a])||i===1){const u=e.texData.get(s.dataId).values,h=e.texData.get(a.dataId).values,[f,p]=WY(s.shape,a.shape,u,h,s.dtype),m=e.makeTensorInfo(p,s.dtype),y=e.texData.get(m.dataId);return y.values=f,m}let l;return r?l=new iu(OJ,s.shape,a.shape,!1):l=new To(_J,s.shape,a.shape),e.runWebGLProgram(l,[s,a],s.dtype)}const LJ={kernelName:Sp,backendName:"webgl",kernelFunc:FJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zJ(n){const{inputs:t,backend:e}=n,{s0:s,s1:a}=t,r=e.readSync(s.dataId),i=e.readSync(a.dataId),l=Pt(Array.from(r),Array.from(i));return e.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const MJ={kernelName:Y0,backendName:"webgl",kernelFunc:zJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BJ="return float(a != b);",bD=En({opSnippet:BJ,cpuKernelImpl:cZ,dtype:"bool"}),VJ={kernelName:Yp,backendName:"webgl",kernelFunc:bD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function td(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.texData.get(s.dataId);return ys({inputs:{x:a.complexTensorInfos.real},backend:e})}const PJ={kernelName:Ex,backendName:"webgl",kernelFunc:td};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UJ="return float(int(x));";function WJ(n,t){const e=new Va(n.shape,UJ),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z0(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return ys({inputs:{x:a},backend:e});const i=nn(a.shape),l=z0({inputs:{x:a},backend:e,attrs:{dtype:"float32"}}),u=Ii({inputs:{real:l,imag:i},backend:e});return i.dispose(),e.disposeIntermediateTensorInfo(l),u}if(a.dtype==="complex64"){const i=td({inputs:{input:a},backend:e}),l=z0({inputs:{x:i},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(i),l}if(!F2(a.dtype,r)){const i=ys({inputs:{x:a},backend:e});return{dataId:i.dataId,shape:i.shape,dtype:r}}if(e.shouldExecuteOnCPU([a])){const i=e.texData.get(a.dataId).values,[l,u,h]=GY(i,a.shape,a.dtype,r);return e.makeTensorInfo(l,u,h)}if(r==="int32")return WJ(a,e);if(r==="bool"){const i=e.makeTensorInfo([],"bool",Cn("bool",1)),u=bD({inputs:{a,b:i},backend:e});return e.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${r}`)}const GJ={kernelName:Wc,backendName:"webgl",kernelFunc:z0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x2="return ceil(x);",HJ=oe({opSnippet:x2,packedOpSnippet:x2,cpuKernelImpl:HY}),qJ={kernelName:Gc,backendName:"webgl",kernelFunc:HJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jJ{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XJ{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KJ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{clipValueMin:r,clipValueMax:i}=s;let l;rt().getBool("WEBGL_PACK_CLIP")?l=new XJ(a.shape):l=new jJ(a.shape);const u=[[r],[i]];return e.runWebGLProgram(l,[a],a.dtype,u)}const YJ={kernelName:Hc,backendName:"webgl",kernelFunc:KJ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZJ{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v2(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}function QJ(n){const{inputs:t,backend:e}=n,{x:s}=t,a=e.texData.get(s.dataId),r=new ZJ(s.shape),i=[v2(s,a.complexTensorInfos.real),v2(s,a.complexTensorInfos.imag)];return e.runWebGLProgram(r,i,i[0].dtype)}const JJ={kernelName:Np,backendName:"webgl",kernelFunc:QJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ttt{constructor(t){this.outputShape=[],this.outputShape=Wa(t,1),this.variableNames=t.map((i,l)=>`T${l}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++){const l=e[i-1];s.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${l}));`)}const a=e.length,r=e[e.length-1];s.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ett{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Wa(t,e);const s=this.outputShape,a=s.length,r=ge(a),i=Wn("coords",a),l=["x","y","z","w","u","v"].slice(0,a);this.variableNames=t.map((w,v)=>`T${v}`);const u=new Array(t.length-1);u[0]=t[0][e];for(let w=1;w<u.length;w++)u[w]=u[w-1]+t[w][e];const h=l[e],f=l.slice(-2),p=l.join();let m=`if (${h} < ${u[0]}) {
        return getChannel(
            getT0(${p}), vec2(${f.join()}));
        }`;for(let w=1;w<u.length;w++){const v=u[w-1];m+=`
        if (${h} < ${u[w]}  && ${h} >= ${u[w-1]}) {
          return getChannel(
            getT${w}(${kf(l,h,v)}),
            vec2(${kf(f,h,v)}));
        }`}const y=u.length,b=u[u.length-1];m+=`
        return getChannel(
          getT${y}(${kf(l,h,b)}),
          vec2(${kf(f,h,b)}));`,this.userCode=`
      float getValue(${l.map(w=>"int "+w)}) {
        ${m}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[a-1]} = ${i[a-1]} + 1;
        if (${i[a-1]} < ${s[a-1]}) {
          result.g = getValue(${i});
        }

        ${i[a-2]} = ${i[a-2]} + 1;
        if (${i[a-2]} < ${s[a-2]}) {
          result.a = getValue(${i});
        }

        ${i[a-1]} = ${i[a-1]} - 1;
        if (${i[a-2]} < ${s[a-2]} &&
            ${i[a-1]} < ${s[a-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function kf(n,t,e){const s=n.indexOf(t);return n.map((r,i)=>i===s?`${r} - ${e}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ig(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.texData.get(s.dataId);return ys({inputs:{x:a.complexTensorInfos.imag},backend:e})}const ntt={kernelName:mx,backendName:"webgl",kernelFunc:ig};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yc(n,t,e){const s=n[0].dtype;if(s==="complex64"){const y=n.map(C=>td({inputs:{input:C},backend:e})),b=n.map(C=>ig({inputs:{input:C},backend:e})),w=yc(y,t,e),v=yc(b,t,e),S=Ii({inputs:{real:w,imag:v},backend:e});return y.forEach(C=>e.disposeIntermediateTensorInfo(C)),b.forEach(C=>e.disposeIntermediateTensorInfo(C)),e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(v),S}let a=e.shouldExecuteOnCPU(n);if(s==="string"&&(a=!0),a){const y=n.map(T=>{const D=[-1,ht(T.shape.slice(t))];return St({inputs:{x:T},backend:e,attrs:{shape:D}})}),b=y.map(T=>({vals:e.readSync(T.dataId),shape:T.shape})),w=Wa(y.map(T=>T.shape),1),v=y[0].shape[0]===1,S=qY(b,w,s,v),C=Wa(n.map(T=>T.shape),t),$=e.makeTensorInfo(C,s,S);return y.forEach(T=>e.disposeIntermediateTensorInfo(T)),$}const r=n.filter(y=>ht(y.shape)>0),i=rt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(r.length===1){const y=i?new Va(n[0].shape,Jr):new ni(n[0].shape,Jr);return e.runWebGLProgram(y,n,s)}const l=rt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>l){const y=[];for(let w=0;w<r.length;w+=l){const v=r.slice(w,w+l);y.push(yc(v,t,e))}const b=yc(y,t,e);for(const w of y)e.disposeIntermediateTensorInfo(w);return b}if(i){const y=new ett(r.map(b=>b.shape),t);return e.runWebGLProgram(y,r,s)}const{tensors2D:u,outShape:h}=stt(r,t,e),f=new ttt(u.map(y=>y.shape)),p=e.runWebGLProgram(f,u,s);u.forEach(y=>e.disposeIntermediateTensorInfo(y));const m=St({inputs:{x:p},attrs:{shape:h},backend:e});return e.disposeIntermediateTensorInfo(p),m}function stt(n,t,e){const s=Wa(n.map(r=>r.shape),t);return{tensors2D:n.map(r=>St({inputs:{x:r},attrs:{shape:[-1,ht(r.shape.slice(t))]},backend:e})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xD(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s,r=jt(a,t[0].shape)[0],i=t.map(h=>h.shape);G1(i,r);const l=Wa(t.map(h=>h.shape),r);if(ht(l)===0)return e.makeTensorInfo(l,t[0].dtype,[]);const u=t.filter(h=>ht(h.shape)>0);return u.length===1?ys({inputs:{x:u[0]},backend:e}):yc(u,r,e)}const att={kernelName:Cp,backendName:"webgl",kernelFunc:xD};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vD{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,l=t.padInfo.left,u=t.strideHeight,h=t.strideWidth,f=t.dilationHeight,p=t.dilationWidth,m=t.filterHeight,y=t.filterWidth,b=Math.floor(t.inChannels/4)*4,w=t.inChannels%4,v=t.dataFormat==="channelsLast",S=v?1:2,C=v?2:3,$=v?3:1;let T="",I="";s&&(a?T=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?T=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:T=`
          float activation(float x) {
            ${s}
          }
        `,I="result = activation(result);");const D=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${T}

      const ivec2 strides = ivec2(${u}, ${h});
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${$}];

        ivec2 xRCCorner =
            ivec2(coords[${S}], coords[${C}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${f};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${y}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${b}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${v}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${w===1}) {

              if (${v}) {
                dotProd +=
                    getX(batch, xR, xC, ${b}) *
                    getW(wR, wC, ${b}, d2);
              } else {
                dotProd +=
                    getX(batch, ${b}, xR, xC) *
                    getW(wR, wC, ${b}, d2);
              }

            } else if (${w===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${b}, d2),
                getW(wR, wC, ${b} + 1, d2)
              );

              if (${v}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${b}),
                  getX(batch, xR, xC, ${b} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${b}, xR, xC),
                  getX(batch, ${b} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${w===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${b}, d2),
                getW(wR, wC, ${b} + 1, d2),
                getW(wR, wC, ${b} + 2, d2)
              );

              if (${v}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${b}),
                  getX(batch, xR, xC, ${b} + 1),
                  getX(batch, xR, xC, ${b} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${b}, xR, xC),
                  getX(batch, ${b} + 1, xR, xC),
                  getX(batch, ${b} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${D}
        ${I}
        setOutput(result);
      }
    `}}class rtt{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,a=t.padInfo.left,r=t.strideDepth,i=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,f=t.dilationWidth,p=t.filterDepth,m=t.filterHeight,y=t.filterWidth,b=Math.floor(t.inChannels/4)*4,w=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${i}, ${l});
      const ivec3 pads = ivec3(${e}, ${s}, ${a});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${h};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${y}; wC++) {
              int xC = xCCorner + wC * ${f};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${b}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${w===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${b}) *
                  getW(wF, wR, wC, ${b}, d2);
              } else if (${w===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${b}),
                  getX(batch, xF, xR, xC, ${b} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${b}, d2),
                  getW(wF, wR, wC, ${b} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${w===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${b}),
                  getX(batch, xF, xR, xC, ${b} + 1),
                  getX(batch, xF, xR, xC, ${b} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${b}, d2),
                  getW(wF, wR, wC, ${b} + 1, d2),
                  getW(wF, wR, wC, ${b} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wD{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Ln(this.outputShape.length);const i=t.padInfo.left,l=t.strideWidth,u=t.dilationWidth,h=t.filterHeight,f=t.filterWidth,p=f;let m=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let v=0;v<f;v++)m+=`
           vec4 xTexelC${v*2};
           int xTexelC${v*2}Ready;
           vec4 xTexelC${v*2+1};
           int xTexelC${v*2+1}Ready;
           vec4 xC${v};`;m+=`
     for (int r = 0; r < ${h}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let v=0;v<f;v++)m+=`
           xTexelC${v*2} = vec4(0.0);
           xTexelC${v*2}Ready = 0;
           xTexelC${v*2+1} = vec4(0.0);
           xTexelC${v*2+1}Ready = 0;
           xC${v} = vec4(0.0);`;m+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let v=0;v<(p+1)/2;v++){const S=v*2;if(m+=`
           xC = xCCorner + ${S*u};
           `,l===1){if(S<f&&(i%2===1?(m+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }
               `,u===1&&S>0?m+=`
                 xC${S} = vec4(xTexelC${S-2}.zw, xTexelC${S}.xy);
                 `:m+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${S} = vec4(previous.zw, xTexelC${S}.xy);
                   } else {
                     xC${S} = vec4(0.0, 0.0, xTexelC${S}.xy);
                   }
                   `):m+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }

                 xC${S} = xTexelC${S};
                 `,S+1<f)){const C=i%2===0?U0(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(m+=`
                   xCOffset = xC + imod(pads[1], 2) + ${C};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                     xTexelC${S+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${S+1}.zw = vec2(0.0);
                     }
                     xTexelC${S+1}Ready = 1;
                   }
                   `,u>1?m+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${S+1} = vec4(previous.zw, xTexelC${S+1}.xy);
                     } else {
                      xC${S+1} = vec4(0.0, 0.0, xTexelC${S+1}.xy);
                     }
                     `:m+=`
                     xC${S+1} = vec4(xTexelC${S}.zw, xTexelC${S+1}.xy);
                     `):C===1?m+=`
                     xC${S+1} = xTexelC${S};
                     `:m+=`
                     xCOffset = xC + ${C};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                       xTexelC${S+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${S+1}.zw = vec2(0.0);
                       }
                       xTexelC${S+1}Ready = 1;
                     }

                     xC${S+1} = xTexelC${S+1};
                     `}}else S<f&&(i%2===1?(m+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${S+1}Ready == 0) {
                   xTexelC${S+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${S+1}.zw = vec2(0.0);
                   }
                   xTexelC${S+1}Ready = 1;
                 }

                 xC${S} = vec4(xTexelC${S}.zw, xTexelC${S+1}.zw);
               `,S+1<f&&(m+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${S+1} = vec4(xTexelC${S+1}.xy, final.xy);
                 `)):(m+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                   xTexelC${S+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${S+1}.zw = vec2(0.);
                   }
                   xTexelC${S+1}Ready = 1;
                 }

                 xC${S} = vec4(
                   xTexelC${S}.xy, xTexelC${S+1}.xy);
               `,S+1<f&&(m+=`
                   xC${S+1} = vec4(xTexelC${S}.zw, xTexelC${S+1}.zw);
                 `)));S<f&&(m+=`
             wTexel = getW(r, ${S}, d1, d2);
             dotProd += xC${S}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${S}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,S+1<f&&(m+=`
               wTexel = getW(r, ${S+1}, d1, d2);
               dotProd += xC${S+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${S+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}m+=`
     }
   `,m+=`
     }
   `,m+=`
     }
   `;let y="",b="";s&&(a?y=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:r?y=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:y=`vec4 activation(vec4 x) {
           ${s}
         }`,b="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${y}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${m}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${w}
         ${b}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class itt{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length);const{dataFormat:s}=e,a=jn(),r=s==="channelsLast",i=r?1:2,l=r?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let h="";for(let f=0;f<=1;f++)for(let p=0;p<=1;p++)h+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${f};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${l}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${f*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${f*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${h}

        ${a.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dp(n,t){const e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&e===1&&n[0]>1?[n[0],1]:null}function SD({x:n,filter:t,convInfo:e,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:l=null}){const u=n.shape,h=s.texData.get(n.dataId),f=e.inChannels,p=u[0]*u[1]*u[2],m=e.outChannels,y=e.dataFormat==="channelsLast",b=!1,w=!1;let v;const S=[];if(r!=null){const T=dp(r.shape,y);T!=null&&(r=St({inputs:{x:r},backend:s,attrs:{shape:T}}),S.push(r))}if(a!=null){const T=dp(a.shape,y);T!=null&&(a=St({inputs:{x:a},backend:s,attrs:{shape:T}}),S.push(a))}if(!((p===1||m===1)&&f>pD)&&h.isPacked&&y&&h.texture!=null&&u[2]%2!==0&&Jt(h.shape.slice(-3),u.slice(-3))){const T=u[0]*u[1]*(u[2]+1),I={dataId:n.dataId,shape:[1,T,e.inChannels],dtype:n.dtype},D=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,O(cp(h.shape,I.shape),()=>`packed reshape ${h.shape} to ${I.shape} isn't free`);const z=St({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});S.push(z);const B=hp({a:I,b:z,backend:s,transposeA:b,transposeB:w,bias:a,activation:l,preluActivationWeights:r,leakyreluAlpha:i}),R=s.texData.get(B.dataId);O(R.isPacked,()=>"batchMatMul result is expected to be packed"),h.shape=D,R.shape=e.outShape,v=ys({inputs:{x:B},backend:s}),v.shape=e.outShape,S.push(B)}else{const T=e.outHeight*e.outWidth,I=St({inputs:{x:n},backend:s,attrs:{shape:y?[e.batchSize,T,e.inChannels]:[e.batchSize,e.inChannels,T]}}),D=St({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),z=hp({a:y?I:D,b:y?D:I,transposeA:!y,transposeB:w,backend:s,bias:a,activation:l,preluActivationWeights:r,leakyreluAlpha:i});v=St({inputs:{x:z},backend:s,attrs:{shape:e.outShape}}),S.push(I),S.push(D),S.push(z)}for(const T of S)s.disposeIntermediateTensorInfo(T);return v}function ND({x:n,filter:t,convInfo:e,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:l=null}){const{filterWidth:u,filterHeight:h,inChannels:f,outWidth:p,outHeight:m,dataFormat:y}=e,b=y==="channelsLast",w=u*h*f,v=m*p,S=[e.batchSize,w,v],C=!0,$=!1,T=[];if(r!=null){const Y=dp(r.shape,b);Y!=null&&(r=St({inputs:{x:r},backend:s,attrs:{shape:Y}}),T.push(r))}if(a!=null){const Y=dp(a.shape,b);Y!=null&&(a=St({inputs:{x:a},backend:s,attrs:{shape:Y}}),T.push(a))}const I=St({inputs:{x:t},backend:s,attrs:{shape:[1,w,ht(t.shape)/w]}});T.push(I);const D=new itt(S,e),z=[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],B=s.runWebGLProgram(D,[n],"float32",z),R=St({inputs:{x:B},backend:s,attrs:{shape:S}});T.push(B),T.push(R);const _=a!=null,A=r!=null,W=l==="leakyrelu",K=l?Dc(l,!0):null,tt=new fD(b?R.shape:I.shape,b?I.shape:R.shape,b?[e.batchSize,v,e.outChannels]:[e.batchSize,e.outChannels,v],C,$,_,K,A,W),Q=b?[R,I]:[I,R];if(a&&Q.push(a),A&&Q.push(r),W){const Y=s.makeTensorInfo([],"float32",bi(i,"float32"));Q.push(Y),T.push(Y)}const P=s.runWebGLProgram(tt,Q,"float32"),et=St({inputs:{x:P},backend:s,attrs:{shape:e.outShape}});T.push(P);for(const Y of T)s.disposeIntermediateTensorInfo(Y);return et}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ott(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dataFormat:u,dilations:h,dimRoundingMode:f}=s,p=$r(u),m=gn(a.shape,r.shape,i,h,l,f,!1,p);let y;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))y=SD({x:a,filter:r,convInfo:m,backend:e});else if(m.strideWidth<=2&&p==="channelsLast"&&rt().getBool("WEBGL_EXP_CONV")){const w=new wD(m),v=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];y=e.runWebGLProgram(w,[a,r],"float32",v)}else if(rt().getBool("WEBGL_CONV_IM2COL"))y=ND({x:a,filter:r,convInfo:m,backend:e});else{const w=new vD(m);y=e.runWebGLProgram(w,[a,r],"float32")}const b=St({inputs:{x:y},backend:e,attrs:{shape:m.outShape}});return e.disposeIntermediateTensorInfo(y),b}const ltt={kernelName:Tp,backendName:"webgl",kernelFunc:ott};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class utt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,a=t.padInfo.top,r=t.padInfo.left,i=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${a};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class ctt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,a=t.strideHeight,r=t.strideWidth,i=t.dataFormat==="channelsLast",l=e-1-t.padInfo.top,u=s-1-t.padInfo.left,h=i?1:2,f=i?2:3,p=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${h}], coords[${f}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class htt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,s=t.strideHeight,a=t.strideWidth,r=t.padInfo.front,i=t.padInfo.top,l=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${r};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${a} - ${l};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class dtt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,a=t.filterWidth,r=t.strideDepth,i=t.strideHeight,l=t.strideWidth,u=e-1-t.padInfo.front,h=s-1-t.padInfo.top,f=a-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${h}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${a}; wC++) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${a} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ftt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,dataFormat:u,dimRoundingMode:h,filterShape:f}=s,p=$r(u),m=gn(a.shape,f,i,1,l,h,!1,p),y=new utt(m);return e.runWebGLProgram(y,[a,r],"float32")}const ptt={kernelName:Q0,backendName:"webgl",kernelFunc:ftt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mtt{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=Ln(this.outputShape.length);const e=t.filterHeight,s=t.filterWidth,a=e-1-t.padInfo.top,r=s-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${r});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gtt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{inputShape:i,strides:l,pad:u,dataFormat:h,dimRoundingMode:f}=s,p=$r(h),m=gn(i,r.shape,l,1,u,f,!1,p);if(rt().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){const y=[[m.strideHeight,m.strideWidth]],b=new mtt(m);return e.runWebGLProgram(b,[a,r],"float32",y)}else{const y=new ctt(m);return e.runWebGLProgram(y,[a,r],"float32")}}const ytt={kernelName:$p,backendName:"webgl",kernelFunc:gtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function btt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u}=s,h=wi(a.shape,r.shape,i,u,l),f=new rtt(h);return e.runWebGLProgram(f,[a,r],"float32")}const xtt={kernelName:kp,backendName:"webgl",kernelFunc:btt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vtt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,filterShape:u}=s,h=wi(a.shape,u,i,1,l),f=new htt(h);return e.runWebGLProgram(f,[a,r],"float32")}const wtt={kernelName:J0,backendName:"webgl",kernelFunc:vtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Stt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{pad:i,strides:l,inputShape:u}=s,h=wi(u,r.shape,l,1,i),f=new dtt(h);return e.runWebGLProgram(f,[a,r],"float32")}const Ntt={kernelName:tx,backendName:"webgl",kernelFunc:Stt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ctt=ou+`
  return cos(x);
`,Ttt=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Fo}
  return result;
`,$tt=oe({opSnippet:Ctt,packedOpSnippet:Ttt}),ktt={kernelName:qc,backendName:"webgl",kernelFunc:$tt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Itt=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Ett=oe({opSnippet:Itt}),Att={kernelName:jc,backendName:"webgl",kernelFunc:Ett};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rtt{constructor(t,e,s,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,l,u,h]=t,[f]=e,[p,m]=s;this.outputShape=[f,p,m,h];const y=a==="bilinear"?1:0,[b,w]=[`${l-1}.0`,`${u-1}.0`],[v,S,C]=p>1?[`${(l-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${b} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${b}`],[$,T,I]=m>1?[`${(u-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${w} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${w}`];this.userCode=`
      const float height_ratio = float(${v});
      const float width_ratio = float(${$});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${S};
        float width_scale = ${T};

        float in_y = ${C};
        if( in_y < 0.0 || in_y > ${b} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${w} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${y} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dtt=n=>{const{inputs:t,backend:e,attrs:s}=n,{image:a,boxes:r,boxInd:i}=t,{cropSize:l,method:u,extrapolationValue:h}=s,f=new Rtt(a.shape,r.shape,l,u,h);return e.runWebGLProgram(f,[a,r,i],"float32")},Ott={kernelName:nx,backendName:"webgl",kernelFunc:Dtt};var _c;(function(n){n.Prod="*",n.Sum="+"})(_c||(_c={}));class w2{constructor(t,e,s,a){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,i=this.op===_c.Prod?"1.0":"0.0",l=s?i:`getX(${S2(r,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let h="",f="";s?(h=a?`end != ${u-1}`:"end != 0",f=a?"end + 1":"end - 1"):(h=a?`end + pow2 < ${u}`:"end >= pow2",f=a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ge(r)} coords = getOutputCoords();
        int end = ${N2(r,"coords",this.op)};
        float val = ${l};
        int pow2 = int(pow(2.0, index));
        if (${h}) {
          int idx = ${f};
          ${N2(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${S2(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function S2(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.x, ${t}.y`;if(n===3)return`${t}.x, ${t}.y, ${t}.z`;if(n===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function N2(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.y`;if(n===3)return`${t}.z`;if(n===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CD(n,t,e,s,a,r){const i=t.shape.length,l=_e([s],i);let u=t;l!=null&&(u=Hn({inputs:{x:t},backend:e,attrs:{perm:l}}));const h=je(1,i)[0];if(h!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const f=u.shape[h];let p=ys({inputs:{x:u},backend:e});for(let m=0;m<=Math.ceil(Math.log2(f))-1;m++){const y=new w2(n,u.shape,!1,r),b=[[m]],w=p;p=e.runWebGLProgram(y,[p],p.dtype,b),e.disposeIntermediateTensorInfo(w)}if(a){const m=new w2(n,u.shape,a,r),y=p;p=e.runWebGLProgram(m,[p],p.dtype),e.disposeIntermediateTensorInfo(y)}if(l!=null){const m=Si(l),y=Hn({inputs:{x:p},backend:e,attrs:{perm:m}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(u),y}return p}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _tt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;return CD(_c.Prod,a,e,r,i,l)}const Ftt={kernelName:ex,backendName:"webgl",kernelFunc:_tt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ltt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;return CD(_c.Sum,a,e,r,i,l)}const ztt={kernelName:Ip,backendName:"webgl",kernelFunc:Ltt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mtt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i,binaryOutput:l}=s;if(a.shape.length===1){const u=e.readSync(a.dataId),h=e.readSync(r.dataId),f=aD(u,h,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,f)}else if(a.shape.length===2){const u=e.bufferSync(a),h=e.bufferSync(r),f=UY(u,h,i,l);return e.makeTensorInfo(f.shape,r.dtype,f.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const Btt={kernelName:sx,backendName:"webgl",kernelFunc:Mtt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vtt{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ptt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockSize:r,dataFormat:i}=s,l=a.shape[0],u=i==="NHWC"?a.shape[1]:a.shape[2],h=i==="NHWC"?a.shape[2]:a.shape[3],f=i==="NHWC"?a.shape[3]:a.shape[1],p=u*r,m=h*r,y=f/(r*r),b=i==="NHWC"?[l,p,m,y]:[l,y,p,m],w=new Vtt(b,r,i);return e.runWebGLProgram(w,[a],a.dtype)}const Utt={kernelName:ax,backendName:"webgl",kernelFunc:Ptt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TD{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Ln(this.outputShape.length);const i=t.filterHeight,l=t.filterWidth,u=t.outChannels/t.inChannels;let h="",f="";s&&(a?h=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?h=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:h=`
          float activation(float x) {
            ${s}
          }
        `,f="result = activation(result);");const p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${l}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $D{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Ln(this.outputShape.length);const i=t.outChannels/t.inChannels,l=t.padInfo.left,u=t.strideWidth,h=t.dilationWidth,f=t.filterHeight,p=t.filterWidth,m=p;let y=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let S=0;S<p;S++)y+=`
          vec4 xTexelC${S*2};
          int xTexelC${S*2}Ready;
          vec4 xTexelC${S*2+1};
          int xTexelC${S*2+1}Ready;
          vec4 xC${S};`;y+=`
    for (int r = 0; r < ${f}; r++) {
      `;for(let S=0;S<p;S++)y+=`
          xTexelC${S*2} = vec4(0.0);
          xTexelC${S*2}Ready = 0;
          xTexelC${S*2+1} = vec4(0.0);
          xTexelC${S*2+1}Ready = 0;
          xC${S} = vec4(0.0);`;y+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let S=0;S<(m+1)/2;S++){const C=S*2;if(y+=`
          xC = xCCorner + ${C*h};
          `,u===1){if(C<p&&(l%2===1?(y+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C}Ready == 0) {
                  xTexelC${C} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${C}.zw = vec2(0.0);
                  }
                  xTexelC${C}Ready = 1;
                }
              `,h===1&&C>0?y+=`
                xC${C} = vec4(xTexelC${C-2}.zw, xTexelC${C}.xy);
                `:y+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${C} = vec4(previous.zw, xTexelC${C}.xy);
                  } else {
                    xC${C} = vec4(0.0, 0.0, xTexelC${C}.xy);
                  }
                  `):y+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${C}Ready == 0) {
                  xTexelC${C} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${C}.zw = vec2(0.0);
                  }
                  xTexelC${C}Ready = 1;
                }

                xC${C} = xTexelC${C};
                `,C+1<p)){const $=l%2===0?U0(h):h;h%2===0&&l%2===1||h%2!==0&&l%2!==1?(y+=`
                  xCOffset = xC + imod(pads[1], 2) + ${$};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C+1}Ready == 0) {
                    xTexelC${C+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${C+1}.zw = vec2(0.0);
                    }
                    xTexelC${C+1}Ready = 1;
                  }
                  `,h>1?y+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${C+1} = vec4(previous.zw, xTexelC${C+1}.xy);
                    } else {
                     xC${C+1} = vec4(0.0, 0.0, xTexelC${C+1}.xy);
                    }
                    `:y+=`
                    xC${C+1} = vec4(xTexelC${C}.zw, xTexelC${C+1}.xy);
                    `):$===1?y+=`
                    xC${C+1} = xTexelC${C};
                    `:y+=`
                    xCOffset = xC + ${$};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C+1}Ready == 0) {
                      xTexelC${C+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${C+1}.zw = vec2(0.0);
                      }
                      xTexelC${C+1}Ready = 1;
                    }

                    xC${C+1} = xTexelC${C+1};
                    `}}else C<p&&(l%2===1?(y+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C}Ready == 0) {
                  xTexelC${C} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${C}.zw = vec2(0.0);
                  }
                  xTexelC${C}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${C+1}Ready == 0) {
                  xTexelC${C+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${C+1}.zw = vec2(0.0);
                  }
                  xTexelC${C+1}Ready = 1;
                }

                xC${C} = vec4(xTexelC${C}.zw, xTexelC${C+1}.zw);
              `,C+1<p&&(y+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${C+1} = vec4(xTexelC${C+1}.xy, final.xy);
                `)):(y+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${C}Ready == 0) {
                  xTexelC${C} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${C}.zw = vec2(0.0);
                  }
                  xTexelC${C}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C+1}Ready == 0) {
                  xTexelC${C+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${C+1}.zw = vec2(0.);
                  }
                  xTexelC${C+1}Ready = 1;
                }

                xC${C} = vec4(
                  xTexelC${C}.xy, xTexelC${C+1}.xy);
              `,C+1<p&&(y+=`
                  xC${C+1} = vec4(xTexelC${C}.zw, xTexelC${C+1}.zw);
                `)));C<p&&(y+=`
            wTexel = getW(r, ${C}, d1, q);
            dotProd += xC${C} * vec4(wTexel.xz, wTexel.xz);
          `,C+1<p&&(y+=`
              wTexel = getW(r, ${C+1}, d1, q);
              dotProd += xC${C+1} * vec4(wTexel.xz, wTexel.xz);
            `))}y+=`
    }
  `,y+=`
      }
    `;let b="",w="";s&&(a?b=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?b=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:b=`vec4 activation(vec4 x) {
          ${s}
        }`,w="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${y}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${v}
        ${w}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wtt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u,dimRoundingMode:h}=s;let f=u;f==null&&(f=[1,1]),O($n(i,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${f}'`);const p=gn(a.shape,r.shape,i,f,l,h,!0);let m;rt().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?m=new $D(p):m=new TD(p);const y=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return e.runWebGLProgram(m,[a,r],"float32",y)}const Gtt={kernelName:Ep,backendName:"webgl",kernelFunc:Wtt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Htt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,a=t.padInfo.top,r=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${a};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class qtt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,a=t.strideHeight,r=t.strideWidth,i=e-1-t.padInfo.top,l=s-1-t.padInfo.left,u=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jtt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,filterShape:f}=s,p=gn(a.shape,f,i,l,u,h,!0),m=new Htt(p);return e.runWebGLProgram(m,[a,r],"float32")}const Xtt={kernelName:rx,backendName:"webgl",kernelFunc:jtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ktt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,inputShape:f}=s,p=gn(f,r.shape,i,l,u,h,!0),m=new qtt(p);return e.runWebGLProgram(m,[a,r],"float32")}const Ytt={kernelName:ix,backendName:"webgl",kernelFunc:Ktt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ztt{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qtt(n){const{inputs:t,backend:e}=n,{x:s}=t,a=[...s.shape,...s.shape],r=ht(s.shape),i=St({inputs:{x:s},backend:e,attrs:{shape:[r]}}),l=new Ztt(r),u=e.runWebGLProgram(l,[i],i.dtype),h=St({inputs:{x:u},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),h}const Jtt={kernelName:ox,backendName:"webgl",kernelFunc:Qtt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tet{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:a,strideHeight:r,strideWidth:i,filterHeight:l,filterWidth:u,dilationHeight:h,dilationWidth:f}=t,{top:p,left:m}=a;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${i});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${l}; h++) {
          int hIn = hBeg + h * ${h};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${f};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eet(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u}=s,h=Dh(a.shape,r.shape,i,l,"NHWC",u);let f;const p=new tet(h);f=e.runWebGLProgram(p,[a,r],"float32");const m=St({inputs:{x:f},backend:e,attrs:{shape:h.outShape}});return e.disposeIntermediateTensorInfo(f),m}const net={kernelName:Ap,backendName:"webgl",kernelFunc:eet};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function set(n){const{inputs:t,backend:e,attrs:s}=n,{equation:a}=s,r=t,{allDims:i,summedDims:l,idDims:u}=nv(a,r.length);av(i.length,u,r);const{path:h,steps:f}=rv(l,u),p=f.length;let m=null,y=i.length;const b=[];for(let w=0;w<p;++w){for(const v of f[w]){const{permutationIndices:S,expandDims:C}=sv(y,u[v]);let $;iv(S)?$=r[v]:($=Hn({inputs:{x:r[v]},backend:e,attrs:{perm:S}}),b.push($));const T=$.shape.slice();for(let I=0;I<C.length;++I)T.splice(C[I],0,1);Jt($.shape,T)||($=St({inputs:{x:$},backend:e,attrs:{shape:T}}),b.push($)),m===null?m=$:(m=jv({inputs:{a:$,b:m},backend:e}),b.push(m))}w<p-1&&(h[w]>=0&&(m=rg({inputs:{x:m},backend:e,attrs:{axis:h[w]-(i.length-y),keepDims:!1}}),b.push(m)),y--)}for(const w of b)w!==m&&e.disposeIntermediateTensorInfo(w);return m}const aet={kernelName:lx,backendName:"webgl",kernelFunc:set};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ret="return (x >= 0.0) ? x : (exp(x) - 1.0);",iet=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,oet=oe({opSnippet:ret,packedOpSnippet:iet}),uet={kernelName:Kc,backendName:"webgl",kernelFunc:oet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cet="return (b >= 0.0) ? a : a * (b + 1.0);",het=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,det=n=>{const{inputs:t,backend:e}=n,{dy:s,y:a}=t,r=rt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new iu(het,s.shape,a.shape):new To(cet,s.shape,a.shape);return e.runWebGLProgram(r,[s,a],s.dtype)},fet={kernelName:ux,backendName:"webgl",kernelFunc:det};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pet=`
  return vec4(equal(a, b));
`,met="return float(a == b);",get=En({opSnippet:met,packedOpSnippet:pet,dtype:"bool",cpuKernelImpl:jY}),yet={kernelName:Rp,backendName:"webgl",kernelFunc:get};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bet=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${K1};
  float a1 = ${Y1};
  float a2 = ${Z1};
  float a3 = ${Q1};
  float a4 = ${J1};
  float a5 = ${tv};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,xet=oe({opSnippet:bet}),vet={kernelName:Yc,backendName:"webgl",kernelFunc:xet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wet=ou+`
  return exp(x);
`,Net=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,kD=oe({opSnippet:wet,packedOpSnippet:Net,cpuKernelImpl:XY,dtype:"float32"}),Cet={kernelName:Zc,backendName:"webgl",kernelFunc:kD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M0(n){const{inputs:t,attrs:e,backend:s}=n,{dim:a}=e,{input:r}=t,i=r.shape.length,l=r.shape.slice();let u=a;return a<0&&(O(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),l.splice(u,0,1),St({inputs:{x:r},backend:s,attrs:{shape:l}})}const Tet={kernelName:Dp,backendName:"webgl",kernelFunc:M0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C2="return exp(x) - 1.0;",$et=oe({opSnippet:C2,packedOpSnippet:C2,cpuKernelImpl:KY}),ket={kernelName:Qc,backendName:"webgl",kernelFunc:$et};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T2{constructor(t,e,s){this.variableNames=["real","imag"];const a=e[1];this.outputShape=e;const r=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${a}.0`:"1.0";let l;if(t==="real")l="return real * expR - imag * expI;";else if(t==="imag")l="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${l}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ID(n,t,e){const s=e.texData.get(n.dataId),a=ht(n.shape),r=n.shape[n.shape.length-1],i=a/r,l=St({inputs:{x:n},backend:e,attrs:{shape:[i,r]}}),u=l.shape,h=new T2("real",u,t),f=new T2("imag",u,t),p=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],m=e.runWebGLProgram(h,p,"float32"),y=e.runWebGLProgram(f,p,"float32"),b=Ii({inputs:{real:m,imag:y},backend:e});e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y);const w=St({inputs:{x:b},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(b),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iet(n){const{inputs:t,backend:e}=n,{input:s}=t;return ID(s,!1,e)}const Eet={kernelName:cx,backendName:"webgl",kernelFunc:Iet};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Aet{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ed(n){const{backend:t,attrs:e}=n,{shape:s,value:a}=e;let{dtype:r}=e;if(r=r||ql(a),r==="string"){const i=Ge(r,ht(s));return i.fill(a),t.makeTensorInfo(s,r,i)}else{const i=new Aet(s,a),l=[[a]];return t.runWebGLProgram(i,[],r,l)}}const Ret={kernelName:hx,backendName:"webgl",kernelFunc:ed};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Det{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oet={kernelName:dx,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,a=new Det(e.shape);return s.runWebGLProgram(a,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $2="return floor(x);",_et=oe({opSnippet:$2,packedOpSnippet:$2,cpuKernelImpl:YY}),Fet={kernelName:Jc,backendName:"webgl",kernelFunc:_et};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Let=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,zet=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Met=En({opSnippet:Let,packedOpSnippet:zet,dtype:"int32"}),Bet={kernelName:th,backendName:"webgl",kernelFunc:Met};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vet{constructor(t){this.variableNames=["A"];const e=jn(),[s,a]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${s}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pet{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=jn(),[s,a]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${a}.0, ${s}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uet={kernelName:jb,backendName:"webgl",kernelFunc:Wet};let wl,Vb=rt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Wet(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:a}=t;const{numChannels:r}=s,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,l=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[u,h]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],f=[h,u],p=[h,u,r];if(l||i){const w=rt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(wl==null||w!==Vb)&&(Vb=w,wl=document.createElement("canvas").getContext("2d",{willReadFrequently:Vb})),wl.canvas.width=u,wl.canvas.height=h,wl.drawImage(a,0,0,u,h),a=wl.canvas}const m=e.makeTensorInfo(f,"int32");e.texData.get(m.dataId).usage=Es.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(m.dataId),a);const y=rt().getBool("WEBGL_PACK")?new Pet(p):new Vet(p),b=e.runWebGLProgram(y,[m],"int32");return e.disposeData(m.dataId),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Get(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dataFormat:f,dilations:p,dimRoundingMode:m,activation:y,leakyreluAlpha:b}=s,w=$r(f),v=gn(a.shape,r.shape,u,p,h,m,!1,w);let S;const C=[],$=i!=null,T=l!=null,I=y==="leakyrelu",D=()=>{const B=[a,r],R=(_,A)=>{if(A==="NCHW"&&_.shape.length===1&&_.shape[0]!==1){const W=St({inputs:{x:_},backend:e,attrs:{shape:[_.shape[0],1,1]}});return C.push(W),W}return _};if($&&B.push(R(i,f)),T&&B.push(R(l,f)),I){const _=e.makeTensorInfo([],"float32",bi(b,"float32"));B.push(_),C.push(_)}return B};if(v.filterHeight===1&&v.filterWidth===1&&v.dilationHeight===1&&v.dilationWidth===1&&v.strideHeight===1&&v.strideWidth===1&&(v.padInfo.type==="SAME"||v.padInfo.type==="VALID"))S=SD({x:a,filter:r,convInfo:v,backend:e,bias:i,activation:y,preluActivationWeights:l,leakyreluAlpha:b});else if(v.strideWidth<=2&&w==="channelsLast"&&rt().getBool("WEBGL_EXP_CONV")){const B=y?Dc(y,!0):null,R=new wD(v,$,B,T,I),_=[[v.padInfo.top,v.padInfo.left],[v.strideHeight,v.strideWidth],[v.dilationHeight,v.dilationWidth],[v.inHeight,v.inWidth]],A=D();S=e.runWebGLProgram(R,A,"float32",_)}else if(rt().getBool("WEBGL_CONV_IM2COL"))S=ND({x:a,filter:r,convInfo:v,backend:e,bias:i,activation:y,preluActivationWeights:l,leakyreluAlpha:b});else{const B=y?Dc(y,!1):null,R=new vD(v,$,B,T,I),_=D();S=e.runWebGLProgram(R,_,"float32")}const z=St({inputs:{x:S},backend:e,attrs:{shape:v.outShape}});return C.push(S),C.forEach(B=>e.disposeIntermediateTensorInfo(B)),z}const Het={kernelName:Pf,backendName:"webgl",kernelFunc:Get};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qet(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dilations:f,dimRoundingMode:p,activation:m,leakyreluAlpha:y}=s,b=[];let w=f;w==null&&(w=[1,1]),O($n(u,w),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${w}'`);const v=gn(a.shape,r.shape,u,w,h,p,!0),S=rt().getBool("WEBGL_PACK_DEPTHWISECONV")&&v.strideWidth<=2&&v.outChannels/v.inChannels===1,C=m?Dc(m,S):null,$=[a,r],T=i!=null,I=l!=null,D=m==="leakyrelu";if(T&&$.push(i),I&&$.push(l),D){const _=e.makeTensorInfo([],"float32",bi(y,"float32"));$.push(_),b.push(_)}let z;S?z=new $D(v,T,C,I,D):z=new TD(v,T,C,I,D);const B=[[v.padInfo.top,v.padInfo.left],[v.strideHeight,v.strideWidth],[v.dilationHeight,v.dilationWidth],[v.inHeight,v.inWidth]],R=e.runWebGLProgram(z,$,"float32",B);return b.forEach(_=>e.disposeIntermediateTensorInfo(_)),R}const jet={kernelName:Uf,backendName:"webgl",kernelFunc:qet};class Xet{constructor(t,e,s,a){this.sliceDim=t,this.strides=e,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=s;const r=ge(s.length);let i=`
    int index;`;for(let l=0;l<this.sliceDim;l++)i+=`
          index = round(getIndices(coords[0], ${l}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[l]};
          flattenIndex += index * ${this.strides[l]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ket(n){const{inputs:t,backend:e}=n,{params:s,indices:a}=t,r=a.shape,i=r[r.length-1],l=ht(s.shape),[u,h,f,p]=M1(s,a),m=St({inputs:{x:a},backend:e,attrs:{shape:[h,i]}}),y=St({inputs:{x:s},backend:e,attrs:{shape:[ht(s.shape)/f,f]}});if(e.shouldExecuteOnCPU([s,a])||s.dtype==="string"){const S=e.readSync(a.dataId),C=e.bufferSync(s),$=ZY(S,C,s.dtype,h,i,f,p,s.shape,l);return e.makeTensorInfo(u,s.dtype,$.values)}const b=new Xet(i,p,[h,f],s.shape),w=e.runWebGLProgram(b,[y,m],y.dtype),v=St({inputs:{x:w},backend:e,attrs:{shape:u}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(w),v}const Yet={kernelName:fx,backendName:"webgl",kernelFunc:Ket};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zet{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=ge(this.rank),a=Qet(t);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${a}));
      }
    `}}function Qet(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let a=0;a<n.length;a++)a===2?s.push("index"):s.push(`${e[a]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ED(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,indices:r}=t,{axis:i,batchDims:l}=s,u=jt(i,a.shape)[0];if(rt().get("DEBUG")){const C=e.readSync(r.dataId),$=a.shape[u];for(let T=0;T<C.length;++T){const I=C[T];O(I<=$-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${$-1}]`)}}const h=lv(a,r,u,l),f=ht(r.shape),p=[],m=St({inputs:{x:a},backend:e,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),y=St({inputs:{x:r},backend:e,attrs:{shape:[h.batchSize,f/h.batchSize]}});p.push(m),p.push(y);const b=[h.batchSize,h.outerSize,f/h.batchSize,h.sliceSize];if(e.shouldExecuteOnCPU([a,r])||a.dtype==="string"){const C=e.bufferSync(y),$=e.bufferSync(m),T=QY($,C,b);return p.forEach(I=>e.disposeIntermediateTensorInfo(I)),e.makeTensorInfo(h.outputShape,T.dtype,T.values)}const w=new Zet(m.shape,b),v=e.runWebGLProgram(w,[m,y],m.dtype);p.push(v);const S=St({inputs:{x:v},backend:e,attrs:{shape:h.outputShape}});return p.forEach(C=>e.disposeIntermediateTensorInfo(C)),S}const Jet={kernelName:_p,backendName:"webgl",kernelFunc:ED};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tnt="return float(a > b);",ent=`
  return vec4(greaterThan(a, b));
`,nnt=En({opSnippet:tnt,packedOpSnippet:ent,cpuKernelImpl:JY,dtype:"bool"}),snt={kernelName:Fp,backendName:"webgl",kernelFunc:nnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ant="return float(a >= b);",rnt=`
  return vec4(greaterThanEqual(a, b));
`,int=En({opSnippet:ant,packedOpSnippet:rnt,dtype:"bool",cpuKernelImpl:tZ}),ont={kernelName:eh,backendName:"webgl",kernelFunc:int};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lnt(n){const{inputs:t,backend:e}=n,{input:s}=t;return ID(s,!0,e)}const unt={kernelName:px,backendName:"webgl",kernelFunc:lnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cnt="return float(!isnan(x) && !isinf(x));",hnt=oe({opSnippet:cnt,dtype:"bool"}),dnt={kernelName:sh,backendName:"webgl",kernelFunc:hnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fnt="return float(isinf(x));",pnt=oe({opSnippet:fnt,dtype:"bool"}),mnt={kernelName:ah,backendName:"webgl",kernelFunc:pnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gnt="return float(isnan(x));",ynt=oe({opSnippet:gnt,dtype:"bool"}),bnt={kernelName:rh,backendName:"webgl",kernelFunc:ynt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xnt="return float(a < b);",vnt=`
  return vec4(lessThan(a, b));
`,wnt=En({opSnippet:xnt,packedOpSnippet:vnt,cpuKernelImpl:eZ,dtype:"bool"}),Snt={kernelName:zp,backendName:"webgl",kernelFunc:wnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nnt="return float(a <= b);",Cnt=`
  return vec4(lessThanEqual(a, b));
`,Tnt=En({opSnippet:Nnt,packedOpSnippet:Cnt,cpuKernelImpl:nZ,dtype:"bool"}),$nt={kernelName:Mp,backendName:"webgl",kernelFunc:Tnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function knt(n){const{backend:t,attrs:e}=n,{start:s,stop:a,num:r}=e,i=sZ(s,a,r);return t.makeTensorInfo([i.length],"float32",i)}const Int={kernelName:gx,backendName:"webgl",kernelFunc:knt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ent=ou+`
  return x < 0.0 ? 0./0. : log(x);
`,Ant=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Rnt=oe({opSnippet:Ent,packedOpSnippet:Ant,cpuKernelImpl:aZ}),Dnt={kernelName:ih,backendName:"webgl",kernelFunc:Rnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ont=ou+`
  return log(1.0 + x);
`,_nt=oe({opSnippet:Ont}),Fnt={kernelName:oh,backendName:"webgl",kernelFunc:_nt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lnt="return float(a >= 1.0 && b >= 1.0);",znt=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Mnt=En({opSnippet:Lnt,packedOpSnippet:znt,dtype:"bool"}),Bnt={kernelName:Bp,backendName:"webgl",kernelFunc:Mnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vnt="return float(!(x >= 1.0));",Pnt=oe({opSnippet:Vnt}),Unt={kernelName:Vp,backendName:"webgl",kernelFunc:Pnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wnt="return float(a >= 1.0 || b >= 1.0);",Gnt=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Hnt=En({opSnippet:Wnt,packedOpSnippet:Gnt,dtype:"bool"}),qnt={kernelName:Pp,backendName:"webgl",kernelFunc:Hnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jnt{constructor(t,e,s,a,r){this.variableNames=["x"],this.outputShape=[];const i=e,l=t[3]-1;this.outputShape=t;let u;const h=`float(${s}) + float(${a}) * sum`;r===.5?u=`inversesqrt(${h})`:r===1?u=`1.0/(${h})`:u=`exp(log(${h}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${l}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xnt{constructor(t,e,s,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,l=t[3]-1;this.outputShape=t;let u;const h=`float(${s}) + float(${a}) * sum`;r===.5?u=`inversesqrt(${h})`:r===1?u=`1.0/(${h})`:u=`exp(log(${h}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${l}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Knt=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{depthRadius:r,bias:i,alpha:l,beta:u}=s,h=rt().getBool("WEBGL_PACK_NORMALIZATION")?new Xnt(a.shape,r,i,l,u):new jnt(a.shape,r,i,l,u);return e.runWebGLProgram(h,[a],a.dtype)},Ynt={kernelName:Up,backendName:"webgl",kernelFunc:Knt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Znt{constructor(t,e,s,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=a,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${a}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${a})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qnt=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a,y:r,dy:i}=t,{depthRadius:l,bias:u,alpha:h,beta:f}=s,p=new Znt(a.shape,l,u,h,f);return e.runWebGLProgram(p,[a,r,i],a.dtype)},Jnt={kernelName:yx,backendName:"webgl",kernelFunc:Qnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tst(n,t,e,s){const a=ht(t),i=ht(n.shape)/a,l=St({inputs:{x:n},attrs:{shape:[i,a]},backend:s}),u=Lo(l,n.dtype,"max",s),h=St({inputs:{x:u},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(l),s.disposeIntermediateTensorInfo(u),h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AD(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reductionIndices:r,keepDims:i}=s,l=a.shape.length,u=jt(r,a.shape);let h=u;const f=_e(h,l),p=f!=null,m=e.shouldExecuteOnCPU([a]);let y=a;if(p){if(m){const $=e.texData.get(y.dataId).values,T=new Array(l);for(let z=0;z<T.length;z++)T[z]=a.shape[f[z]];const I=Hv($,a.shape,a.dtype,f,T);y=e.makeTensorInfo(T,a.dtype);const D=e.texData.get(y.dataId);D.values=I}else y=ag(a,f,e);h=je(h.length,l)}kn("max",h,l);const[b,w]=yn(y.shape,h);let v=b;i&&(v=qe(b,u));let S;if(m){const $=e.texData.get(y.dataId).values,T=rZ($,ht(w),v,a.dtype);S=e.makeTensorInfo(v,a.dtype);const I=e.texData.get(S.dataId);I.values=T}else S=tst(y,w,v,e);return p&&e.disposeIntermediateTensorInfo(y),S}const est={kernelName:Wp,backendName:"webgl",kernelFunc:AD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nst=qv+`
  return max(a, b);
`,sst=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Fo+`
  return result;
`,ast=En({opSnippet:nst,packedOpSnippet:sst,cpuKernelImpl:iZ}),rst={kernelName:lh,backendName:"webgl",kernelFunc:ast};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ist(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;Qh(a,"maxPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;O($n(i,h),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const f=la(a.shape,r,i,h,l,u);if(f.filterWidth===1&&f.filterHeight===1&&Jt(f.inShape,f.outShape))return ys({inputs:{x:a},backend:e});const p=new Oc(f,"max",!1);return e.runWebGLProgram(p,[a],a.dtype)}const ost={kernelName:Gp,backendName:"webgl",kernelFunc:ist};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lst(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dataFormat:u,dimRoundingMode:h}=s,f=[1,1,1],p=Tr(a.shape,r,i,f,l,h,u),m=new Xv(p,"max",!1);return e.runWebGLProgram(m,[a],a.dtype)}const ust={kernelName:Hp,backendName:"webgl",kernelFunc:lst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cst{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,r=t.effectiveFilterHeight,i=t.effectiveFilterWidth,l=r-1-t.padInfo.top,u=i-1-t.padInfo.left,h=r*i-1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${h} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class hst{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,s=t.strideHeight,a=t.strideWidth,r=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,f=t.effectiveFilterWidth,p=u-1-t.padInfo.front,m=h-1-t.padInfo.top,y=f-1-t.padInfo.left,b=u*h*f-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${b} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${h} * ${f} +
                  wR * ${f} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dst(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r,{filterSize:l,strides:u,pad:h,dimRoundingMode:f}=s,p=[1,1,1],m=Tr(i.shape,l,u,p,h,f),y=new Xv(m,"max",!0),b=e.runWebGLProgram(y,[i],i.dtype),w=new hst(m),v=e.runWebGLProgram(w,[a,b],i.dtype);return e.disposeIntermediateTensorInfo(b),v}const fst={kernelName:xx,backendName:"webgl",kernelFunc:dst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pst(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r,output:i}=t,l=r;Qh([r,i],"maxPoolGrad");const{filterSize:u,strides:h,pad:f,dimRoundingMode:p}=s,m=la(l.shape,u,h,1,f,p),y=!0,b=new Oc(m,"max",y),w=e.runWebGLProgram(b,[l],l.dtype),v=new cst(m),S=e.runWebGLProgram(v,[a,w],l.dtype);return e.disposeIntermediateTensorInfo(w),S}const mst={kernelName:bx,backendName:"webgl",kernelFunc:pst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gst(n,t,e,s){let a=new Oc(e,"max",!1);const r=s.runWebGLProgram(a,[n],"float32");a=new Oc(e,"max",!0,!0,t);const i=s.runWebGLProgram(a,[n],"float32");return[r,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yst={kernelName:vx,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:a,strides:r,pad:i,includeBatchInIndex:l}=t,u=e;O(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const h=[1,1];O($n(r,h),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${h}'`);const f=la(s.shape,a,r,h,i),[p,m]=gst(s,l,f,u);return[p,m]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bst(n,t,e,s){const a=ht(t),i=ht(n.shape)/a,l=St({inputs:{x:n},attrs:{shape:[i,a]},backend:s}),u=Lo(l,"float32","mean",s),h=St({inputs:{x:u},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(l),s.disposeIntermediateTensorInfo(u),h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xst={kernelName:qp,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:a,axis:r}=t,i=e,l=s.shape.length,u=jt(r,s.shape);let h=u;const f=_e(h,l),p=f!=null,m=i.shouldExecuteOnCPU([s]),y=[];let b=s;if(p){if(m){const T=i.texData.get(b.dataId).values,I=new Array(l);for(let B=0;B<I.length;B++)I[B]=s.shape[f[B]];const D=Hv(T,s.shape,s.dtype,f,I);b=i.makeTensorInfo(I,s.dtype);const z=i.texData.get(b.dataId);z.values=D}else b=ag(s,f,i);y.push(b),h=je(h.length,l)}kn("sum",h,l);const[w,v]=yn(b.shape,h);let S=w;a&&(S=qe(w,u));const C=bst(b,v,S,i);for(const $ of y)i.disposeIntermediateTensorInfo($);return C}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vst(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=jt(r,a.shape);let h=u;const f=_e(h,l);let p=a;f!=null&&(p=Hn({inputs:{x:a},backend:e,attrs:{perm:f}}),h=je(h.length,a.shape.length)),kn("min",h,l);const[m,y]=yn(p.shape,h),b=ht(y),w=St({inputs:{x:p},backend:e,attrs:{shape:[-1,b]}}),v=Lo(w,w.dtype,"min",e);let S;if(i){const C=qe(m,u);S=St({inputs:{x:v},backend:e,attrs:{shape:C}})}else S=St({inputs:{x:v},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(v),f!=null&&e.disposeIntermediateTensorInfo(p),S}const wst={kernelName:jp,backendName:"webgl",kernelFunc:vst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sst=qv+`
  return min(a, b);
`,Nst=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Fo+`
  return result;
`,Cst=En({opSnippet:Sst,packedOpSnippet:Nst,cpuKernelImpl:oZ}),Tst={kernelName:uh,backendName:"webgl",kernelFunc:Cst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $st{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((f,p)=>f[0]+t[p]+f[1]);const a=t.length,r=ge(a),i=e.map(f=>f[0]).join(","),l=e.map((f,p)=>f[0]+t[p]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),h=s==="reflect"?0:1;if(a===1){this.userCode=`
        int start = ${i};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${h};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${h};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${l});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${a}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${h};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${h};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kst{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((b,w)=>b[0]+t[w]+b[1]);const a=t.length,r=ge(a),i=e.map(b=>b[0]).join(","),l=e.map((b,w)=>b[0]+t[w]).join(","),u=Wn("rc",a),h=Wn("source",a),f=`${u[a-1]} < ${this.outputShape[a-1]}`,p=a===1?"source":`vec2(${h.slice(-2).join()})`,m=s==="reflect"?0:1;let y="";if(a===1){const b=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;y=`
        ${r} rc = outputLoc;
        ${b}
        result[0] = getChannel(getX(${h.join()}), ${p});
        ${u[a-1]} += 1;
        if(${f}) {
          ${b}
          result[1] = getChannel(getX(${h.join()}), ${p});
        }
      `}else{const b=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;y=`
        ${r} rc = outputLoc;
        ${b}
        result[0] = getChannel(getX(${h.join()}), ${p});
        ${u[a-1]} += 1;
        if(${f}) {
          ${b}
          result[1] = getChannel(getX(${h.join()}), ${p});
        }
        rc = outputLoc;
        ${u[a-2]} += 1;
        if(${u[a-2]} < ${this.outputShape[a-2]}) {
          ${b}
          result[2] = getChannel(getX(${h.join()}), ${p});
          ${u[a-1]} += 1;
          if(${f}) {
            ${b}
            result[3] = getChannel(getX(${h.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${l});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${y}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ist=({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:a,mode:r}=e,i=rt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kst(s.shape,a,r):new $st(s.shape,a,r);return t.runWebGLProgram(i,[s],s.dtype)},Est={kernelName:Xp,backendName:"webgl",kernelFunc:Ist};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ast=`if (b == 0.0) return NAN;
  return mod(a, b);`,Rst=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Fo+`
  return result;
`,Dst=En({opSnippet:Ast,packedOpSnippet:Rst}),Ost={kernelName:ch,backendName:"webgl",kernelFunc:Dst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _st{constructor(t,e,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fst=`
if (a == b) {
  return 1.0;
};
return a / b;`,Lst=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,RD=En({opSnippet:Fst,packedOpSnippet:Lst,checkOutOfBounds:!0}),zst={kernelName:Xc,backendName:"webgl",kernelFunc:RD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k2="return a - b;",DD=En({opSnippet:k2,packedOpSnippet:k2,supportsComplex:!0,cpuKernelImpl:IZ}),Mst={kernelName:$h,backendName:"webgl",kernelFunc:DD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OD(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{dim:r}=s,i=jt([r],a.shape),l=AD({inputs:{x:a},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),u=qe(l.shape,i),h=St({inputs:{x:l},backend:e,attrs:{shape:u}}),f=DD({inputs:{a,b:h},backend:e}),p=kD({inputs:{x:f},backend:e}),m=rg({inputs:{x:p},backend:e,attrs:{axis:i,keepDims:!1}}),y=St({inputs:{x:m},backend:e,attrs:{shape:u}}),b=RD({inputs:{a:p,b:y},backend:e});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),b}const Bst={kernelName:dm,backendName:"webgl",kernelFunc:OD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vst(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{numSamples:r,seed:i,normalized:l}=s,u=l?a:OD({inputs:{logits:a},backend:e,attrs:{dim:a.shape.length-1}}),h=u.shape[0],f=u.shape[1],p=new _st(h,f,r),m=[[i]],y=e.runWebGLProgram(p,[u],"int32",m);return l||e.disposeIntermediateTensorInfo(u),y}const Pst={kernelName:wx,backendName:"webgl",kernelFunc:Vst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ust=ca+`
  return -x;
`,Wst=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Gst(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const r=e.texData.get(s.dataId),[i,l]=uZ(r.values,s.shape,s.dtype);return e.makeTensorInfo(l,s.dtype,i)}let a;return rt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new ni(s.shape,Wst):a=new Va(s.shape,Ust),e.runWebGLProgram(a,[s],s.dtype)}const Hst={kernelName:Kp,backendName:"webgl",kernelFunc:Gst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qst=R1;function jst(n){Is("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=s,h=e.readSync(a.dataId),f=e.readSync(r.dataId),{selectedIndices:p}=qst(h,f,i,l,u);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}const Xst={kernelName:Sx,backendName:"webgl",kernelFunc:jst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kst=D1;function Yst(n){Is("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:h}=s,f=e.readSync(a.dataId),p=e.readSync(r.dataId),{selectedIndices:m,validOutputs:y}=Kst(f,p,i,l,u,h);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([y]))]}const Zst={kernelName:Nx,backendName:"webgl",kernelFunc:Yst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qst=O1;function Jst(n){Is("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,softNmsSigma:h}=s,f=e.readSync(a.dataId),p=e.readSync(r.dataId),m=i,y=l,b=u,w=h,{selectedIndices:v,selectedScores:S}=Qst(f,p,m,y,b,w);return[e.makeTensorInfo([v.length],"int32",new Int32Array(v)),e.makeTensorInfo([S.length],"float32",new Float32Array(S))]}const tat={kernelName:Cx,backendName:"webgl",kernelFunc:Jst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eat{constructor(t,e,s,a){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${a}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nat=n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:a}=t,{dtype:r,depth:i,onValue:l,offValue:u}=s,h=ht(a.shape),f=new eat(h,i,l,u),p=St({inputs:{x:a},backend:e,attrs:{shape:[h]}}),m=e.runWebGLProgram(f,[p],r);e.disposeIntermediateTensorInfo(p);const y=[...a.shape,i],b=St({inputs:{x:m},backend:e,attrs:{shape:y}});return e.disposeIntermediateTensorInfo(m),b},sat={kernelName:Qp,backendName:"webgl",kernelFunc:nat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fp(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="complex64"){const a=td({inputs:{input:s},backend:e}),r=fp({inputs:{x:a},backend:e}),i=ig({inputs:{input:s},backend:e}),l=fp({inputs:{x:i},backend:e}),u=Ii({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return ed({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:e})}const aat={kernelName:gm,backendName:"webgl",kernelFunc:fp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _D(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const a=td({inputs:{input:s},backend:e}),r=_D({inputs:{x:a},backend:e}),i=ig({inputs:{input:s},backend:e}),l=fp({inputs:{x:i},backend:e}),u=Ii({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return ed({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}const rat={kernelName:Zp,backendName:"webgl",kernelFunc:_D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iat(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s;if(t.length===1)return M0({inputs:{input:t[0]},backend:e,attrs:{dim:a}});const r=t[0].shape,i=t[0].dtype;t.forEach(f=>{bs(r,f.shape,"All tensors passed to stack must have matching shapes"),O(i===f.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=t.map(f=>{const p=M0({inputs:{input:f},backend:e,attrs:{dim:a}});return l.push(p),p}),h=xD({inputs:u,backend:e,attrs:{axis:a}});return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),h}const oat={kernelName:Jp,backendName:"webgl",kernelFunc:iat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lat{constructor(t,e,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((h,f)=>h[0]+t[f]+h[1]);const a=t.length,r=ge(a),i=e.map(h=>h[0]).join(","),l=e.map((h,f)=>h[0]+t[f]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);if(a===1){this.userCode=`
        int start = ${i};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${l});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uat{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((w,v)=>w[0]+t[v]+w[1]);const a=t.length,r=ge(a),i=e.map(w=>w[0]).join(","),l=e.map((w,v)=>w[0]+t[v]).join(","),u=Wn("rc",a),h=Wn("source",a),f=`${u[a-1]} < ${this.outputShape[a-1]}`,p=a===1?"source":`vec2(${h.slice(-2).join()})`,m=[`${r} rc = outputLoc;`,`${u[a-1]} += 1;
       if(${f}) {
      `,a===1?"":`}
       rc = outputLoc;
       ${u[a-2]} += 1;
       if(${u[a-2]} < ${this.outputShape[a-2]}) {`,a===1?"":`  ${u[a-1]} += 1;
         if(${f}) {`],y=a===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let b="";for(let w=0,v=a===1?2:4;w<v;w++)b+=`
        ${m[w]}
        if (${y}) {
          result[${w}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${w}] = getChannel(getX(${h.join()}), ${p});
        }
      `;b+=a===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${l});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${b}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FD=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{paddings:r,constantValue:i}=s;if(ht(a.shape)===0){const h=r.map((f,p)=>f[0]+a.shape[p]+f[1]);return ed({backend:e,attrs:{shape:h,value:i,dtype:a.dtype}})}const l=rt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new uat(a.shape,r,i):new lat(a.shape,r,i),u=[[i]];return e.runWebGLProgram(l,[a],a.dtype,u)},cat={kernelName:tm,backendName:"webgl",kernelFunc:FD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hat=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,dat=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Fo+`
  return result;
`,fat=En({opSnippet:hat,packedOpSnippet:dat}),pat={kernelName:dh,backendName:"webgl",kernelFunc:fat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mat(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=[],h=jt(r,a.shape);let f=h;const p=_e(f,l);let m=a;p!=null&&(m=Hn({inputs:{x:a},backend:e,attrs:{perm:p}}),f=je(f.length,l),u.push(m)),kn("prod",f,l);let y;if(e.shouldExecuteOnCPU([m])){const b=e.texData.get(m.dataId).values,{outVals:w,outShape:v,outDtype:S}=hZ(m.shape,m.dtype,b,f);y=e.makeTensorInfo(v,S,w)}else{const[b,w]=yn(m.shape,f),v=ht(w),S=St({inputs:{x:m},backend:e,attrs:{shape:[-1,v]}}),C=Kx(a.dtype),$=Lo(S,C,"prod",e);y=St({inputs:{x:$},backend:e,attrs:{shape:b}}),u.push(S),u.push($)}if(i){u.push(y);const b=qe(y.shape,h);y=St({inputs:{x:y},backend:e,attrs:{shape:b}})}return u.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}const gat={kernelName:nm,backendName:"webgl",kernelFunc:mat};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yat(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=t,{outputRaggedRank:l}=s,u=a.map(S=>e.readSync(S.dataId)),h=a.map(S=>S.shape),f=e.readSync(r.dataId),p=e.readSync(i.dataId),[m,y,b]=dZ(u,h,f,r.shape,r.dtype,p,i.shape,l),w=m.map(S=>e.makeTensorInfo([S.length],"int32",S)),v=e.makeTensorInfo(b,r.dtype,y);return w.concat([v])}const bat={kernelName:Tx,backendName:"webgl",kernelFunc:yat};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xat(n){const{inputs:t,backend:e}=n,{starts:s,limits:a,deltas:r}=t,i=e.readSync(s.dataId),l=e.readSync(a.dataId),u=e.readSync(r.dataId),[h,f]=fZ(i,s.shape,s.dtype,l,a.shape,u,r.shape),p=e.makeTensorInfo([h.length],"int32",h),m=e.makeTensorInfo([f.length],s.dtype,f);return[p,m]}const vat={kernelName:$x,backendName:"webgl",kernelFunc:xat};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wat(n){const{inputs:t,backend:e,attrs:s}=n,{shape:a,values:r,defaultValue:i,rowPartitionTensors:l}=t,{rowPartitionTypes:u}=s,h=e.readSync(a.dataId),f=e.readSync(r.dataId),p=e.readSync(i.dataId),m=l.map(v=>e.readSync(v.dataId)),y=l.map(v=>v.shape),[b,w]=pZ(h,a.shape,f,r.shape,r.dtype,p,i.shape,m,y,u);return e.makeTensorInfo(b,r.dtype,w)}const Sat={kernelName:kx,backendName:"webgl",kernelFunc:wat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LD=n=>{const{backend:t,attrs:e}=n,{start:s,stop:a,step:r,dtype:i}=e,l=mZ(s,a,r,i);return t.makeTensorInfo([l.length],i,l)},Nat={kernelName:Ix,backendName:"webgl",kernelFunc:LD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cat="return 1.0 / x;",Tat=oe({opSnippet:Cat}),$at={kernelName:fh,backendName:"webgl",kernelFunc:Tat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kat=ca+`
  return (x < 0.0) ? 0.0 : x;
`,Iat=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Eat=oe({opSnippet:kat,packedOpSnippet:Iat}),Aat={kernelName:ph,backendName:"webgl",kernelFunc:Eat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rat=ca+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Dat=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Oat=oe({opSnippet:Rat,packedOpSnippet:Dat}),_at={kernelName:mh,backendName:"webgl",kernelFunc:Oat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fat{constructor(t,e,s,a,r){this.variableNames=["A"],this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const f=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s];let m;r?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${f[0]/p[0]},
          ${f[1]/p[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lat{constructor(t,e,s,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const f=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s];let m;r?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${f[0]/p[0]},
          ${f[1]/p[1]},
          ${f[1]/p[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${h-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zat(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s,[u,h]=l,f=rt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Lat(a.shape,u,h,r,i):new Fat(a.shape,u,h,r,i);return e.runWebGLProgram(f,[a],"float32")}const Mat={kernelName:rm,backendName:"webgl",kernelFunc:zat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bat{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,r]=e,[,i,l]=t,u=[s&&i>1?a-1:a,s&&l>1?r-1:r],h=[s&&i>1?i-1:i,s&&l>1?l-1:l],f=u[0]/h[0],p=u[1]/h[1],m=1/f,y=1/p,b=Math.ceil(m)*2+2,w=Math.ceil(y)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${f});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${y});

        const int winHeight = int(${b});
        const int winWidth = int(${w});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vat(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s,l=new Bat(r.shape,a.shape,i);return e.runWebGLProgram(l,[r],r.dtype)}const Pat={kernelName:Rx,backendName:"webgl",kernelFunc:Vat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uat{constructor(t,e,s,a,r){this.variableNames=["A"],this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const f=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s],m=a?"0.5":"0.0";let y;r?y="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":y="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${f[0]/p[0]},
          ${f[1]/p[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${y};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wat{constructor(t,e,s,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const f=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s],m=a?"0.5":"0.0";let y;r?y="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":y="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${f[0]/p[0]},
          ${f[1]/p[1]},
          ${f[1]/p[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${y};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${h-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gat(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s,[u,h]=l,f=rt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Wat(a.shape,u,h,r,i):new Uat(a.shape,u,h,r,i);return e.runWebGLProgram(f,[a],a.dtype)}const Hat={kernelName:am,backendName:"webgl",kernelFunc:Gat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qat{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,r]=e,[,i,l]=t,u=[s&&i>1?a-1:a,s&&l>1?r-1:r],h=[s&&i>1?i-1:i,s&&l>1?l-1:l],f=u[0]/h[0],p=u[1]/h[1],m=1/f,y=1/p,b=Math.ceil(m)*2+2,w=Math.ceil(y)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${f});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${y});

        const int winHeight = int(${b});
        const int winWidth = int(${w});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${h[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${h[1]}));

            int sourceNearestRow = int(min(
                float(int(${a}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jat(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s,l=new qat(r.shape,a.shape,i);return e.runWebGLProgram(l,[r],r.dtype)}const Xat={kernelName:Ax,backendName:"webgl",kernelFunc:jat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kat{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const a=l=>e.indexOf(l)!==-1&&t[l]!==1?`${t[l]} - coords[${l}] - 1`:`coords[${l}]`,r=t.map((l,u)=>a(u)).join(","),i=ge(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yat{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const a=Wn("rc",s),r=`${a[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${a[s-2]} + 1 < ${this.outputShape[s-2]}`,l=ge(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${l} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(a.slice())};
          if(${r}){
            result.g = ${h(a.slice())};
          }
          if(${i}) {
            result.b = ${f(a.slice())};
            if(${r}) {
              result.a = ${p(a.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(b){return m(b)}function h(b){return b[s-1]="("+b[s-1]+" + 1)",m(b)}function f(b){return b[s-2]="("+b[s-2]+" + 1)",m(b)}function p(b){return b[s-1]="("+b[s-1]+" + 1)",b[s-2]="("+b[s-2]+" + 1)",m(b)}function m(b){const w=t.map((C,$)=>y($,b)),v=w.join(","),S=w.slice(-2).join(",");return`getChannel(getX(${v}), vec2(${S}))`}function y(b,w){return e.indexOf(b)!==-1&&t[b]!==1?`${t[b]} - ${w[b]} - 1`:`${w[b]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zat(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dims:r}=s,i=a.shape.length,l=jt(r,a.shape);if(i===0)return ys({inputs:{x:a},backend:e});const u=rt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Yat(a.shape,l):new Kat(a.shape,l);return e.runWebGLProgram(u,[a],a.dtype)}const Qat={kernelName:im,backendName:"webgl",kernelFunc:Zat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jat{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],a=t[2];this.outputShape=t;let r="";typeof e=="number"?r=`float outputValue = ${e.toFixed(2)};`:r=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const trt={kernelName:Xx,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:a,fillValue:r,center:i}=t,l=e,u=new Jat(s.shape,r),[h,f]=q1(i,s.shape[1],s.shape[2]),p=[[h,f,Math.sin(a),Math.cos(a)]];return l.runWebGLProgram(u,[s],s.dtype,p)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ert=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,nrt=oe({opSnippet:ert}),srt={kernelName:gh,backendName:"webgl",kernelFunc:nrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const art="return inversesqrt(x);",rrt=oe({opSnippet:art,cpuKernelImpl:gZ}),irt={kernelName:yh,backendName:"webgl",kernelFunc:rrt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kv{constructor(t,e,s,a,r,i,l=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const h=ge(r.length),f=ge(i.length);let p="";s===1?p="i":s===2&&(p="i, j");const m=`getIndices(${p})`;let y="";a===1?y="i":a===2&&(y="i, coords[1]");const b=`getUpdates(${y})`;let w="";u&&(w="coords[0], coords[1]");const v=`getDefaultValue(${w})`,S=e>1?"strides[j]":"strides";this.userCode=`
        ${h} strides = ${h}(${r});

        void main() {
          ${f} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${S};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${b};
              found = true;
            }
          }
          setOutput(mix(${v}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ort{constructor(t,e,s,a,r,i,l=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const h=ge(r.length),f=ge(i.length);let p="";s===1?p="i":s===2&&(p="i, j");const m=`getIndices(${p})`;let y="";a===1?y="i":a===2&&(y="i, coords[1]");const b=`getUpdates(${y})`;let w="";u&&(w="coords[0], coords[1]");const v=`getDefaultValue(${w})`,S=e>1?"strides[j]":"strides",C=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${h} strides = ${h}(${r});

        void main() {
          ${f} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${m});
              flattenedIndex += index.xz * ${S};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${C};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${b};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${v}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lrt(n){const{inputs:t,backend:e,attrs:s}=n,{indices:a,updates:r}=t,{shape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:h,strides:f,outputSize:p}=Ao(r,a,i),m=[p/h,h];if(p===0)return e.makeTensorInfo(i,a.dtype);const y=St({inputs:{x:a},backend:e,attrs:{shape:[u,l]}}),b=St({inputs:{x:r},backend:e,attrs:{shape:[u,h]}}),w=e.makeTensorInfo([],"float32",new Float32Array([0]));let v;rt().getBool("WEBGL_PACK")?v=new ort(u,l,y.shape.length,b.shape.length,f,m):v=new Kv(u,l,y.shape.length,b.shape.length,f,m);const S=e.runWebGLProgram(v,[b,y,w],b.dtype),C=St({inputs:{x:S},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(S),e.disposeIntermediateTensorInfo(w),C}const urt={kernelName:Dx,backendName:"webgl",kernelFunc:lrt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class crt{constructor(t,e,s,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const r="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,l=rt().getNumber("WEBGL_VERSION")===2?r:i,u=a==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${l}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hrt(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:a,values:r}=t,{side:i}=s,l=new crt(a.shape[0],a.shape[1],r.shape[1],i),u=[[a.shape[1]]];return e.runWebGLProgram(l,[a,r],"int32",u)}const drt={kernelName:_x,backendName:"webgl",kernelFunc:hrt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class frt{constructor(t,e,s){this.variableNames=["c","a","b"],this.outputShape=e;let a,r;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)r="resRC",a="resRC";else{const l=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],h=[];for(let f=0;f<e.length;f++)h.push(`${l[f]}`),f<t&&u.push(`${l[f]}`);a=u.join(),r=h.join()}const i=ge(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${a});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prt(n){const{inputs:t,backend:e}=n,{condition:s,t:a,e:r}=t,i=new frt(s.shape.length,a.shape,a.shape.length);return e.runWebGLProgram(i,[s,a,r],ds(a.dtype,r.dtype))}const mrt={kernelName:om,backendName:"webgl",kernelFunc:prt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const grt=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Um};
  float scale = ${Wm};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,yrt=oe({opSnippet:grt}),brt={kernelName:bh,backendName:"webgl",kernelFunc:yrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xrt=ou+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,vrt=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,wrt=oe({opSnippet:xrt,packedOpSnippet:vrt,cpuKernelImpl:bZ}),Srt={kernelName:Sh,backendName:"webgl",kernelFunc:wrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nrt=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Crt=oe({opSnippet:Nrt}),Trt={kernelName:wh,backendName:"webgl",kernelFunc:Crt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $rt=ou+`
  return sin(x);
`,krt=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Fo}
  return result;
`,Irt=oe({opSnippet:$rt,packedOpSnippet:krt}),Ert={kernelName:xh,backendName:"webgl",kernelFunc:Irt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Art=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Rrt=oe({opSnippet:Art}),Drt={kernelName:vh,backendName:"webgl",kernelFunc:Rrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ort=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,_rt=oe({opSnippet:Ort}),Frt={kernelName:Nh,backendName:"webgl",kernelFunc:_rt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lrt=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,paddings:i}=s;O(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const l=r.reduce((S,C)=>S*C),u=[[0,0]];u.push(...i);for(let S=1+r.length;S<a.shape.length;++S)u.push([0,0]);const h=[],f=FD({inputs:{x:a},backend:e,attrs:{paddings:u,constantValue:0}}),p=Bh(f.shape,r,l,!1),m=Vh(p.length,r.length,!1),y=Ph(f.shape,r,l,!1),b=St({inputs:{x:f},backend:e,attrs:{shape:p}}),w=Hn({inputs:{x:b},backend:e,attrs:{perm:m}}),v=St({inputs:{x:w},backend:e,attrs:{shape:y}});return h.push(f),h.push(b),h.push(w),h.forEach(S=>e.disposeIntermediateTensorInfo(S)),v},zrt={kernelName:cm,backendName:"webgl",kernelFunc:Lrt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mrt(n){const{inputs:t,backend:e}=n,{indices:s,values:a,denseShape:r,defaultValue:i}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const l=e.readSync(s.dataId),u=e.readSync(a.dataId),h=e.readSync(r.dataId),f=e.readSync(i.dataId)[0],[p,m,y,b,w]=vZ(l,s.shape,s.dtype,u,a.dtype,h,f);return[e.makeTensorInfo(m,s.dtype,p),e.makeTensorInfo([m[0]],a.dtype,y),e.makeTensorInfo([b.length],"bool",new Uint8Array(b.map(v=>Number(v)))),e.makeTensorInfo([w.length],s.dtype,new Int32Array(w))]}const Brt={kernelName:Fx,backendName:"webgl",kernelFunc:Mrt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vrt(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:a,newShape:r}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(e.readSync(a.dataId)),l=e.readSync(s.dataId),u=Array.from(e.readSync(r.dataId)),[h,f,p]=wZ(l,s.shape,s.dtype,i,u);return[e.makeTensorInfo(f,s.dtype,h),e.makeTensorInfo([p.length],r.dtype,new Int32Array(p))]}const Prt={kernelName:Lx,backendName:"webgl",kernelFunc:Vrt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Urt(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const i=e.readSync(s.dataId),l=e.readSync(a.dataId),u=e.readSync(r.dataId),[h,f]=iD(i,s.shape,s.dtype,l,u,!0);return e.makeTensorInfo(f,s.dtype,h)}const Wrt={kernelName:zx,backendName:"webgl",kernelFunc:Urt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Grt(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const i=e.readSync(s.dataId),l=e.readSync(a.dataId),u=e.readSync(r.dataId),[h,f]=iD(i,s.shape,s.dtype,l,u);return e.makeTensorInfo(f,s.dtype,h)}const Hrt={kernelName:Mx,backendName:"webgl",kernelFunc:Grt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qrt(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:a,sparseValues:r,defaultValue:i}=t,{outputShape:l}=s,{sliceRank:u,numUpdates:h,sliceSize:f,strides:p,outputSize:m}=Ao(r,a,l),y=!1;if(r.dtype==="string"){const S=e.bufferSync(a),C=e.bufferSync(r),$=oi(e.readSync(i.dataId)[0]),T=yZ(S,C,l,m,f,h,u,p,$,y);return e.makeTensorInfo(l,T.dtype,T.values)}const b=new Kv(h,u,a.shape.length,r.shape.length,p,[m,1],y),w=e.runWebGLProgram(b,[r,a,i],r.dtype),v=St({inputs:{x:w},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(w),v}const jrt={kernelName:Bx,backendName:"webgl",kernelFunc:qrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xrt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{numOrSizeSplits:r,axis:i}=s,l=jt(i,a.shape)[0],u=ov(a,r,l),h=a.shape.length,f=new Array(h).fill(0),p=a.shape.slice();return u.map(m=>{const y=[...p];y[l]=m;const b=lu({inputs:{x:a},backend:e,attrs:{begin:f,size:y}});return f[l]+=m,b})}const Krt={kernelName:hm,backendName:"webgl",kernelFunc:Xrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I2="return sqrt(x);",Yrt=oe({opSnippet:I2,packedOpSnippet:I2,cpuKernelImpl:SZ}),Zrt={kernelName:Ch,backendName:"webgl",kernelFunc:Yrt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qrt="return x * x;",Jrt=oe({opSnippet:Qrt}),tit={kernelName:Vx,backendName:"webgl",kernelFunc:Jrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E2="return (a - b) * (a - b);",eit=En({opSnippet:E2,packedOpSnippet:E2}),nit={kernelName:Th,backendName:"webgl",kernelFunc:eit};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sit(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");const r=e.readSync(a.dataId),i=Cr(r),l=NZ(i,"string",s);return e.makeTensorInfo(a.shape,"string",l)}const ait={kernelName:fm,backendName:"webgl",kernelFunc:sit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rit({inputs:n,attrs:t,backend:e}){const{x:s}=n,a=ca+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,r=new Va(s.shape,a);return e.runWebGLProgram(r,[s],s.dtype)}const iit={kernelName:Ah,backendName:"webgl",kernelFunc:rit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oit{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const a=s.length,r=ge(s.length),i=ge(s.length);let l="";if(a===1)l="coords * strides + begin";else{let u=0;l=s.map((h,f)=>(u++,s.length===1?`coords * strides[${f}] + begin[${f}]`:`coords[${u-1}] * strides[${f}] + begin[${f}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${t});
      ${r} strides = ${r}(${e});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lit(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,end:i,strides:l,beginMask:u,endMask:h,ellipsisMask:f,newAxisMask:p,shrinkAxisMask:m}=s,{finalShapeSparse:y,finalShape:b,isIdentity:w,sliceDim0:v,isSimpleSlice:S,begin:C,end:$,strides:T}=W1(a.shape,r,i,l,u,h,f,p,m);let I;if(w)I=St({inputs:{x:a},backend:e,attrs:{shape:b}});else if(v||S){O(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const z=V1(C,$,T),B=lu({inputs:{x:a},backend:e,attrs:{begin:C,size:z}});I=St({inputs:{x:B},backend:e,attrs:{shape:b}}),e.disposeIntermediateTensorInfo(B)}else if(e.shouldExecuteOnCPU([a])){const B=e.readSync(a.dataId),R=Ht(a.shape,a.dtype,B),_=CZ(y,R,T,C);I=e.makeTensorInfo(b,a.dtype,_.values)}else{const B=new oit(C,T,y);I=e.runWebGLProgram(B,[a],a.dtype)}const D=St({inputs:{x:I},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(I),D}const uit={kernelName:Px,backendName:"webgl",kernelFunc:lit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cit(n){const{inputs:t,backend:e,attrs:s}=n,{separator:a,nGramWidths:r,leftPad:i,rightPad:l,padWidth:u,preserveShortSequences:h}=s,{data:f,dataSplits:p}=t,m=e.readSync(f.dataId),y=e.readSync(p.dataId),[b,w]=TZ(m,y,a,r,i,l,u,h);return[e.makeTensorInfo([b.length],"string",b),e.makeTensorInfo(p.shape,"int32",w)]}const hit={kernelName:Ux,backendName:"webgl",kernelFunc:cit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dit(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:a}=s,{input:r,delimiter:i}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const l=e.readSync(r.dataId),u=e.readSync(i.dataId)[0],[h,f,p]=$Z(l,u,a),m=f.length;return[e.makeTensorInfo([m,2],"int32",h),e.makeTensorInfo([m],"string",f),e.makeTensorInfo([2],"int32",new Int32Array(p))]}const fit={kernelName:Wx,backendName:"webgl",kernelFunc:dit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pit(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:a}=s,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=e.readSync(r.dataId),l=kZ(i,a);return e.makeTensorInfo(r.shape,"int32",l)}const mit={kernelName:Gx,backendName:"webgl",kernelFunc:pit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const git="return tan(x);",yit=oe({opSnippet:git}),bit={kernelName:kh,backendName:"webgl",kernelFunc:yit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xit=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,vit=oe({opSnippet:xit}),wit={kernelName:Ih,backendName:"webgl",kernelFunc:vit};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sit(n){const{inputs:t,backend:e,attrs:s}=n,{tensor:a,indices:r,updates:i}=t,{sliceRank:l,numUpdates:u,sliceSize:h,strides:f,outputSize:p}=Ao(i,r,a.shape),m=[p/h,h];if(p===0)return e.makeTensorInfo(a.shape,r.dtype);const y=St({inputs:{x:r},backend:e,attrs:{shape:[u,l]}}),b=St({inputs:{x:i},backend:e,attrs:{shape:[u,h]}}),w=St({inputs:{x:a},backend:e,attrs:{shape:m}}),v=new Kv(u,l,y.shape.length,b.shape.length,f,m,!1,!0),S=e.runWebGLProgram(v,[b,y,w],w.dtype),C=St({inputs:{x:S},backend:e,attrs:{shape:a.shape}});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(S),C}const Nit={kernelName:Ox,backendName:"webgl",kernelFunc:Sit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cit{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let i=0;i<s.length;i++)s[i]=t[i]*e[i];this.outputShape=s,this.rank=s.length;const a=ge(this.rank),r=Tit(t);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function Tit(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let a=0;a<n.length;a++)s.push(`imod(${e[a]}, ${n[a]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zD(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reps:r}=s;if(a.dtype==="string"||a.shape.length>5){const u=e.readSync(a.dataId),h=a.dtype==="string"?u.map(m=>oi(m)):u,f=Ht(a.shape,a.dtype,h),p=EZ(f,r);return e.makeTensorInfo(p.shape,p.dtype,p.values)}const i=new Cit(a.shape,r);return e.runWebGLProgram(i,[a],a.dtype)}const $it={kernelName:Eh,backendName:"webgl",kernelFunc:zD};class kit{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Iit{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function to(n,t){t!==null&&n.disposeIntermediateTensorInfo(t)}function A2(n){let t=1;for(;t<n;)t*=2;return t}function Eit(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{k:r,sorted:i}=s,l=rt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=rt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),h=a.shape,f=h[h.length-1];if(e.shouldExecuteOnCPU([a])||f<l||r>u){const _=e.readSync(a.dataId),[A,W]=AZ(_,h,a.dtype,r,i);return[e.makeTensorInfo(A.shape,A.dtype,A.values),e.makeTensorInfo(W.shape,W.dtype,W.values)]}if(r===0)return h[h.length-1]=0,[e.makeTensorInfo(h,a.dtype,[]),e.makeTensorInfo(h,"int32",[])];if(f===1)return[a,ed({attrs:{shape:h,dtype:"int32",value:0},backend:e})];const p=e.texData.get(a.dataId),m=p!==null&&p.isPacked,y=m?e.unpackTensor(a):a,w=ht(h)/f,v=St({inputs:{x:y},attrs:{shape:[w,f]},backend:e});m&&to(e,y);const S=A2(r),C=A2(f);let $=null;const T=()=>$===null?[v,v]:[v,$],I=(_,A,W)=>{const K=T(),tt=new kit(W),P=[[f],[$===null?1:0],[Number.NEGATIVE_INFINITY],[_],[A]],et=$;$=e.runWebGLProgram(tt,K,"int32",P),to(e,et)};for(let _=1;_<S;_*=2){const A=_*2;for(let W=_;W>=1;W/=2)I(A,W,[w,C])}for(let _=C;_>S;_/=2){const A=T(),W=new Iit([w,_/2]),tt=[[f],[$===null?1:0],[S]],Q=$;$=e.runWebGLProgram(W,A,"int32",tt),to(e,Q);const P=S/2,et=P*2;for(let Y=P;Y>=1;Y/=2)I(et,Y,$.shape)}let D=$;$=lu({inputs:{x:$},backend:e,attrs:{begin:0,size:[w,r]}}),to(e,D);let z=ED({inputs:{x:v,indices:$},backend:e,attrs:{axis:1,batchDims:1}});to(e,v);const B=h.slice(0,-1);B.push(r),D=$,$=St({inputs:{x:$},attrs:{shape:B},backend:e}),to(e,D);const R=z;return z=St({inputs:{x:z},attrs:{shape:B},backend:e}),to(e,R),[z,$]}const Ait={kernelName:Hx,backendName:"webgl",kernelFunc:Eit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rit{constructor(t,e,s,a,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const l=s==="nearest"?1:2;let u;switch(a){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${l} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dit(n){const{inputs:t,backend:e,attrs:s}=n,{image:a,transforms:r}=t,{interpolation:i,fillMode:l,fillValue:u,outputShape:h}=s,[f,p,m,y]=a.shape,[b,w]=h??[p,m],v=[f,b,w,y],S=new Rit(p,m,i,l,u,v);return e.runWebGLProgram(S,[a,r],"float32")}const Oit={kernelName:qx,backendName:"webgl",kernelFunc:Dit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _it(n){const{inputs:t,attrs:e,backend:s}=n,{axis:a}=e,{x:r}=t;Qh(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(r.dataId),{outputValues:l,outputShape:u,indices:h}=RZ(i,a,r.shape,r.dtype);return[s.makeTensorInfo(u,r.dtype,l),s.makeTensorInfo([h.length],"int32",h)]}const Fit={kernelName:jx,backendName:"webgl",kernelFunc:_it};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lit(n){const{inputs:t,backend:e,attrs:s}=n,{value:a}=t;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a,l=i.shape.length,u=a.shape[r],h=new Array(l-1);let f=0;for(let w=0;w<l;w++)w!==r&&(h[f++]=i.shape[w]);const p=[],m=new Array(l).fill(0),y=i.shape.slice();y[r]=1;const b=new Array(u);for(let w=0;w<b.length;w++){m[r]=w;const v=lu({inputs:{x:i},backend:e,attrs:{begin:m,size:y}}),S=St({inputs:{x:v},backend:e,attrs:{shape:h}});b[w]=S,p.push(v)}return p.forEach(w=>e.disposeIntermediateTensorInfo(w)),b}const zit={kernelName:pm,backendName:"webgl",kernelFunc:Lit};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mit{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,a=t.batchSize,r=t.inSize,i=t.numSegments,l=i*Math.ceil(r/s);this.outputShape=[a,l];const u="0.0",h="sumValue",f=Math.floor(s/4)*4,p=s%4,m=`
        sumValue += dot(values, segFilter);
    `;let y="";r%s>0&&(y=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let b="";r%s>0&&(b=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${y}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${b}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${f}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${f};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${h});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bit(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,segmentIds:r}=t,{numSegments:i}=s,l=a.shape.length,u=[];let h=0;const f=_e([h],l);let p=a;f!=null&&(p=Hn({inputs:{x:a},backend:e,attrs:{perm:f}}),u.push(p),h=je(1,l)[0]);const m=mI(p.shape,h,i),y=ht([p.shape[h]]),b=St({inputs:{x:p},backend:e,attrs:{shape:[-1,y]}});u.push(b);const w=Kx(a.dtype),v=(T,I,D,z,B)=>{const R=T.shape[0],_=T.shape[1],A=pI(_,B),W={windowSize:A,inSize:_,batchSize:R,numSegments:B},K=new Mit(W,I),tt=e.compileAndRun(K,[T,D],z);if(u.push(tt),tt.shape[1]===B)return tt;const Q=LD({backend:e,attrs:{start:0,stop:B,step:1,dtype:"float32"}}),P=zD({inputs:{x:Q},backend:e,attrs:{reps:[_/A]}});return u.push(Q),u.push(P),v(tt,I,P,z,B)},S=v(b,"unsortedSegmentSum",r,w,i),C=St({inputs:{x:S},backend:e,attrs:{shape:m}});let $=C;if(f!=null){u.push(C);const T=Si(f);$=Hn({inputs:{x:$},backend:e,attrs:{perm:T}})}return u.forEach(T=>e.disposeIntermediateTensorInfo(T)),$}const Vit={kernelName:mm,backendName:"webgl",kernelFunc:Bit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pit=[SQ,CQ,kQ,AQ,DQ,FQ,zQ,BQ,WQ,HQ,XQ,ZQ,tJ,aJ,oJ,uJ,hJ,mJ,yJ,xJ,NJ,AJ,DJ,LJ,MJ,GJ,qJ,YJ,rQ,JJ,att,ltt,ptt,ytt,xtt,wtt,Ntt,ktt,Att,Ott,Ftt,ztt,Btt,Utt,Gtt,Xtt,Ytt,Jtt,net,aet,uet,fet,yet,vet,Cet,Tet,ket,Eet,Ret,Oet,Fet,Bet,Uet,Het,jet,Yet,Jet,snt,ont,aQ,unt,ntt,dnt,mnt,bnt,oQ,Snt,$nt,Int,Dnt,Fnt,Bnt,Unt,qnt,Ynt,Jnt,est,rst,ost,ust,fst,mst,yst,xst,wst,Tst,Est,Ost,Pst,cQ,Hst,Xst,Zst,tat,VJ,sat,rat,oat,cat,pat,uQ,gat,bat,vat,Sat,Nat,PJ,zst,$at,Aat,_at,dQ,Mat,Pat,Hat,Xat,Qat,trt,srt,irt,urt,drt,mrt,brt,Srt,Trt,Ert,Drt,IJ,Bst,Frt,zrt,Brt,Prt,Wrt,Hrt,jrt,Krt,Zrt,tit,nit,ait,iit,uit,hit,fit,mit,Mst,xQ,bit,wit,Nit,$it,Ait,Oit,vQ,Fit,zit,Vit,aat];for(const n of Pit)V2(n);const Uit=n=>Ze.jsxs("div",{className:"overlay",...n,children:[Ze.jsx("div",{className:"center",children:Ze.jsx("div",{className:"spinner"})}),Ze.jsx("div",{className:"center",children:Ze.jsx("div",{className:"progress",children:n.children})})]});class Wit{constructor(){rc(this,"open",t=>{navigator.mediaDevices&&navigator.mediaDevices.getUserMedia?navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment"}}).then(e=>{t.srcObject=e}):alert("WEBカメラが開けませんん")});rc(this,"close",t=>{t.srcObject?(t.srcObject.getTracks().forEach(e=>{e.stop()}),t.srcObject=null):alert("最初にWEBカメラを開いてください")})}}const Git=({imageRef:n,cameraRef:t,videoRef:e})=>{const[s,a]=va.useState(null),r=va.useRef(null),i=va.useRef(null),l=new Wit,u=()=>{const f=n.current.src;n.current.src="#",URL.revokeObjectURL(f),a(null),r.current.value="",n.current.style.display="none"},h=()=>{const f=e.current.src;e.current.src="",URL.revokeObjectURL(f),a(null),i.current.value="",e.current.style.display="none"};return Ze.jsxs("div",{className:"btn-container",children:[Ze.jsx("input",{type:"file",accept:"image/*",style:{display:"none"},onChange:f=>{const p=URL.createObjectURL(f.target.files[0]);n.current.src=p,n.current.style.display="block",a("image")},ref:r}),Ze.jsxs("button",{onClick:()=>{s===null?r.current.click():s==="image"?u():alert(`Can't handle more than 1 stream
Currently streaming : ${s}`)},children:["画像を",s==="image"?"閉じる":"開く"]}),Ze.jsx("input",{type:"file",accept:"video/*",style:{display:"none"},onChange:f=>{s==="image"&&u();const p=URL.createObjectURL(f.target.files[0]);e.current.src=p,e.current.addEventListener("ended",()=>h()),e.current.style.display="block",a("video")},ref:i}),Ze.jsxs("button",{onClick:()=>{s===null||s==="image"?i.current.click():s==="video"?h():alert(`Can't handle more than 1 stream
Currently streaming : ${s}`)},children:["ビデオを",s==="video"?"閉じる":"開く"]}),Ze.jsxs("button",{onClick:()=>{s===null||s==="image"?(s==="image"&&u(),l.open(t.current),t.current.style.display="block",a("camera")):s==="camera"?(l.close(t.current),t.current.style.display="none",a(null)):alert(`Can't handle more than 1 stream
Currently streaming : ${s}`)},children:["WEB カメラを",s==="camera"?"閉じる":"開く"]})]})},MD=["人","自転車","車","オートバイ","飛行機","バス","電車","トラック","ボート","信号機","消火栓","停止標識","駐車メーター","ベンチ","鳥","猫","犬","馬","羊","牛","象","熊","シマウマ","キリン","リュックサック","傘","ハンドバッグ","ネクタイ","スーツケース","フリスビー","スキー","スノーボード","スポーツボール","凧","野球バット","野球グローブ","スケートボード","サーフボード","テニスラケット","ボトル","ワイングラス","カップ","フォーク","ナイフ","スプーン","ボウル","バナナ","リンゴ","サンドイッチ","オレンジ","ブロッコリー","ニンジン","ホットドッグ","ピザ","ドーナツ","ケーキ","椅子","ソファ","植木鉢","ベッド","ダイニングテーブル","トイレ","テレビ","ラップトップ","マウス","リモコン","キーボード","携帯電話","電子レンジ","オーブン","トースター","シンク","冷蔵庫","本","時計","花瓶","ハサミ","テディベア","ヘアドライヤー","歯ブラシ"],Hit=(n,t,e,s,a)=>{const r=n.getContext("2d");r.clearRect(0,0,r.canvas.width,r.canvas.height);const i=new B0,l=`${Math.max(Math.round(Math.max(r.canvas.width,r.canvas.height)/60),12)}px Arial`;r.font=l,r.textBaseline="top";for(let u=0;u<e.length;++u){const h=MD[s[u]],f=i.get(s[u]),p=(e[u]*100).toFixed(1);let[m,y,b,w]=t.slice(u*4,(u+1)*4);y*=a[0],w*=a[0],m*=a[1],b*=a[1];const v=w-y,S=b-m;r.fillStyle=B0.hexToRgba(f,.2),r.fillRect(y,m,v,S),r.strokeStyle=f,r.lineWidth=Math.max(Math.min(r.canvas.width,r.canvas.height)/200,2.5),r.strokeRect(y,m,v,S),r.fillStyle=f;const C=r.measureText(h+" - "+p+"%").width,$=parseInt(l,10),T=m-($+r.lineWidth);r.fillRect(y-1,T<0?0:T,C+r.lineWidth,$+r.lineWidth),r.fillStyle="#ffffff",r.fillText(h+" - "+p+"%",y-1,T<0?0:T+2)}};class B0{constructor(){rc(this,"get",t=>this.palette[Math.floor(t)%this.n]);this.palette=["#FF3838","#FF9D97","#FF701F","#FFB21D","#CFD231","#48F90A","#92CC17","#3DDB86","#1A9334","#00D4BB","#2C99A8","#00C2FF","#344593","#6473FF","#0018EC","#8438FF","#520085","#CB38FF","#FF95C8","#FF37C7"],this.n=this.palette.length}}rc(B0,"hexToRgba",(t,e)=>{var s=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return s?`rgba(${[parseInt(s[1],16),parseInt(s[2],16),parseInt(s[3],16)].join(", ")}, ${e})`:null});const qit=MD.length,jit=(n,t,e)=>{let s,a;return[nt(()=>{const i=zP(n),[l,u]=i.shape.slice(0,2),h=Math.max(u,l),f=i.pad([[0,h-l],[0,h-u],[0,0]]);return s=h/u,a=h/l,ta.resizeBilinear(f,[t,e]).div(255).expandDims(0)}),s,a]},BD=async(n,t,e,s=()=>{})=>{const[a,r]=t.inputShape.slice(1,3);Ys().startScope();const[i,l,u]=jit(n,a,r),h=t.net.execute(i),f=h.transpose([0,2,1]),p=nt(()=>{const C=f.slice([0,0,2],[-1,-1,1]),$=f.slice([0,0,3],[-1,-1,1]),T=kt(f.slice([0,0,0],[-1,-1,1]),Dt(C,2)),I=kt(f.slice([0,0,1],[-1,-1,1]),Dt($,2));return He([I,T,yt(I,$),yt(T,C)],2).squeeze()}),[m,y]=nt(()=>{const C=f.slice([0,0,4],[-1,-1,qit]).squeeze(0);return[C.max(1),C.argMax(1)]}),b=await ta.nonMaxSuppressionAsync(p,m,100,.5,.6),w=p.gather(b,0).dataSync(),v=m.gather(b,0).dataSync(),S=y.gather(b,0).dataSync();Hit(e,w,v,S,[l,u]),Gt([h,f,p,m,y,b]),s(),Ys().endScope()},R2=(n,t,e)=>{const s=async()=>{if(n.videoWidth===0&&n.srcObject===null){const a=e.getContext("2d");a.clearRect(0,0,a.canvas.width,a.canvas.height);return}BD(n,t,e,()=>{requestAnimationFrame(s)})};s()},Xit=()=>{const[n,t]=va.useState({loading:!0,progress:0}),[e,s]=va.useState({net:null,inputShape:[1,0,0,3]}),a=va.useRef(null),r=va.useRef(null),i=va.useRef(null),l=va.useRef(null),u="yolo11s";return va.useEffect(()=>{l3().then(async()=>{const h=await vq(`${window.location.href}/${u}_web_model/model.json`,{onProgress:m=>{t({loading:!0,progress:m})}}),f=es(h.inputs[0].shape),p=h.execute(f);t({loading:!1,progress:1}),s({net:h,inputShape:h.inputs[0].shape}),Gt([p,f])})},[]),Ze.jsxs("div",{className:"App",children:[n.loading&&Ze.jsxs(Uit,{children:[(n.progress*100).toFixed(0),"%"]}),Ze.jsx(Git,{imageRef:a,cameraRef:r,videoRef:i}),Ze.jsxs("div",{className:"content",children:[Ze.jsx("img",{src:"#",ref:a,onLoad:()=>BD(a.current,e,l.current)}),Ze.jsx("video",{autoPlay:!0,muted:!0,playsInline:!0,ref:r,onPlay:()=>R2(r.current,e,l.current)}),Ze.jsx("video",{autoPlay:!0,muted:!0,playsInline:!0,ref:i,onPlay:()=>R2(i.current,e,l.current)}),Ze.jsx("canvas",{width:e.inputShape[1],height:e.inputShape[2],ref:l})]})]})},Kit=mF.createRoot(document.getElementById("root"));Kit.render(Ze.jsx(lF.StrictMode,{children:Ze.jsx(Xit,{})}));
